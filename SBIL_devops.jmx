<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="SBIL load test" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">false</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="constantTimer" elementType="Argument">
            <stringProp name="Argument.name">constantTimer</stringProp>
            <stringProp name="Argument.value">1000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">true</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>true</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <fileName>true</fileName>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <boolProp name="ResultCollector.success_only_logging">true</boolProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="SBI Customers" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">1920</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">D:/SBI/sbi_username_pwd.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="BA_01_Homepage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/login/login-2,151" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/snload7/app/login/login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/NRJS-2551f7a729197a720f4-2,153" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                  <stringProp name="Argument.value">527472636</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1216.487a282</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="to" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">to</stringProp>
                  <stringProp name="Argument.value">YgRTZEtUCxJRBUAMDltOfGZ6GikOVw9aJg5bFUNfVVkAEx8KWwIIWw%3D%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rst</stringProp>
                  <stringProp name="Argument.value">581</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ck" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ck</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ref" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ref</stringProp>
                  <stringProp name="Argument.value">http://sbilifeload.crmnext.com/snload7/app/login/login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ap" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ap</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="be" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">be</stringProp>
                  <stringProp name="Argument.value">219</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fe</stringProp>
                  <stringProp name="Argument.value">430</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dc</stringProp>
                  <stringProp name="Argument.value">351</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="af" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">af</stringProp>
                  <stringProp name="Argument.value">err,xhr,stn,ins,spa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="perf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">perf</stringProp>
                  <stringProp name="Argument.value">%7B%22timing%22:%7B%22of%22:1657168016907,%22n%22:0,%22f%22:6,%22dn%22:6,%22dne%22:6,%22c%22:6,%22ce%22:6,%22rq%22:8,%22rp%22:143,%22rpe%22:144,%22dl%22:149,%22di%22:351,%22ds%22:351,%22de%22:354,%22dc%22:429,%22l%22:429,%22le%22:482%7D,%22navigation%22:%7B%7D%7D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fp</stringProp>
                  <stringProp name="Argument.value">341</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fcp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fcp</stringProp>
                  <stringProp name="Argument.value">341</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsonp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsonp</stringProp>
                  <stringProp name="Argument.value">NREUM.setToken</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/NRJS-2551f7a729197a720f4</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GikOVw9aJg5bFUNfVVkAEx8KWwIIWw%3D%3D&amp;rst=1584&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/login/login&amp;st=1657168016907-2,154" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;res&quot;:[{&quot;n&quot;:&quot;navigationStart&quot;,&quot;s&quot;:0,&quot;e&quot;:0,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;fetchStart&quot;,&quot;s&quot;:6,&quot;e&quot;:6,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domainLookupStart&quot;,&quot;s&quot;:6,&quot;e&quot;:6,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domainLookupEnd&quot;,&quot;s&quot;:6,&quot;e&quot;:6,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;connectStart&quot;,&quot;s&quot;:6,&quot;e&quot;:6,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;connectEnd&quot;,&quot;s&quot;:6,&quot;e&quot;:6,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;requestStart&quot;,&quot;s&quot;:8,&quot;e&quot;:8,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;responseStart&quot;,&quot;s&quot;:143,&quot;e&quot;:143,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;responseEnd&quot;,&quot;s&quot;:144,&quot;e&quot;:144,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domLoading&quot;,&quot;s&quot;:149,&quot;e&quot;:149,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domInteractive&quot;,&quot;s&quot;:351,&quot;e&quot;:351,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domContentLoadedEventStart&quot;,&quot;s&quot;:351,&quot;e&quot;:351,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domContentLoadedEventEnd&quot;,&quot;s&quot;:354,&quot;e&quot;:354,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domComplete&quot;,&quot;s&quot;:429,&quot;e&quot;:429,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;loadEventStart&quot;,&quot;s&quot;:429,&quot;e&quot;:429,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;loadEventEnd&quot;,&quot;s&quot;:482,&quot;e&quot;:482,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GikOVw9aJg5bFUNfVVkAEx8KWwIIWw%3D%3D&amp;rst=1584&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/login/login&amp;st=1657168016907</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GikOVw9aJg5bFUNfVVkAEx8KWwIIWw%3D%3D&amp;rst=1911&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/login/login-2,155" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">bel.7;1,,,de,de,1w,&apos;initialPageLoad,&apos;http://sbilifeload.crmnext.com/snload7/app/login/login,1,1,,,,a,!!&apos;83cb9a59-b66c-4154-b29a-7c71cdb806e5,&apos;1,9h,9h;b,!!!!6,,,,!,2,3r,1,5,5m,,3,23,,1h</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GikOVw9aJg5bFUNfVVkAEx8KWwIIWw%3D%3D&amp;rst=1911&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/login/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constantTimer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="BA_02_Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GikOVw9aJg5bFUNfVVkAEx8KWwIIWw%3D%3D&amp;rst=10591&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/login/login&amp;ptid=f69b8bf1-0001-b3ba-f969-0181d6e99c71-2,158" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">bel.6;e,&apos;fp,9h,1;6,&apos;cls,0.;e,&apos;fcp,9h,1;6,1,0.;e,&apos;load,by,1;6,1,0.008690902799642354;e,&apos;fi,yl,6;5,&apos;type,&apos;keydown;5,&apos;net-etype,&apos;4g;6,&apos;net-rtt,100.;6,&apos;net-dlink,1.3;6,&apos;fid,2.;6,1,0.014394538822285823;e,&apos;pageHide,142,1;6,1,0.014394538822285823;e,&apos;lcp,g8,8;6,&apos;size,98523.;5,&apos;eid;5,7,8;6,9,100.;6,a,1.3;5,&apos;elUrl,&apos;http://sbilifeload.crmnext.com/SNLOAD7/app/assets_102319_1/css/scss/image/slide-img1.png;5,&apos;elTag,&apos;IMG;6,1,0.014394538822285823</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GikOVw9aJg5bFUNfVVkAEx8KWwIIWw%3D%3D&amp;rst=10591&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/login/login&amp;ptid=f69b8bf1-0001-b3ba-f969-0181d6e99c71</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GikOVw9aJg5bFUNfVVkAEx8KWwIIWw%3D%3D&amp;rst=12359&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/login/login&amp;ptid=f69b8bf1-0001-b3ba-f969-0181d6e99c71&amp;st=1657168016907-2,159" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;res&quot;:[{&quot;n&quot;:&quot;link&quot;,&quot;s&quot;:160,&quot;e&quot;:188,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/login-font.css&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;link&quot;,&quot;s&quot;:161,&quot;e&quot;:177,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/theme/theme18/root.css&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;link&quot;,&quot;s&quot;:161,&quot;e&quot;:193,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/base/login.css&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:162,&quot;e&quot;:182,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery-migrate.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:163,&quot;e&quot;:187,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/json2.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:163,&quot;e&quot;:187,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/modernizr.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:164,&quot;e&quot;:189,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/sha/sha-all.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:164,&quot;e&quot;:188,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/sha/shainitialization.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:165,&quot;e&quot;:189,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/CryptoJS.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:165,&quot;e&quot;:190,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/encodedecode.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:166,&quot;e&quot;:189,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/Barrett.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:167,&quot;e&quot;:190,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/BigInt.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:170,&quot;e&quot;:190,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/RSA.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:170,&quot;e&quot;:190,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/securetext.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:172,&quot;e&quot;:191,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/carousel.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:172,&quot;e&quot;:191,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery.unobtrusive-ajax.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:173,&quot;e&quot;:194,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery.validate.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:174,&quot;e&quot;:192,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery.validate.unobtrusive.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:174,&quot;e&quot;:192,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/customvalidator.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:175,&quot;e&quot;:192,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/common.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:176,&quot;e&quot;:193,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/login.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:430,&quot;e&quot;:439,&quot;o&quot;:&quot;https://js-agent.newrelic.com:443/nr-spa-1216.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:582,&quot;e&quot;:1578,&quot;o&quot;:&quot;https://bam.nr-data.net:443/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;DOMContentLoaded&quot;,&quot;s&quot;:351,&quot;e&quot;:353,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:363,&quot;e&quot;:364,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:364,&quot;e&quot;:375,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:375,&quot;e&quot;:375,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:375,&quot;e&quot;:375,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:375,&quot;e&quot;:376,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:376,&quot;e&quot;:376,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:376,&quot;e&quot;:378,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:381,&quot;e&quot;:381,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:384,&quot;e&quot;:384,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:384,&quot;e&quot;:384,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:384,&quot;e&quot;:384,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:384,&quot;e&quot;:384,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:384,&quot;e&quot;:384,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:384,&quot;e&quot;:384,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:584,&quot;e&quot;:585,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1607,&quot;e&quot;:1608,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1609,&quot;e&quot;:1610,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1910,&quot;e&quot;:1912,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:5740,&quot;e&quot;:5743,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:10588,&quot;e&quot;:10593,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:10744,&quot;e&quot;:10747,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;focus&quot;,&quot;s&quot;:377,&quot;e&quot;:378,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input#TxtName.field__item.textbox&quot;},{&quot;n&quot;:&quot;focus&quot;,&quot;s&quot;:378,&quot;e&quot;:378,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input#TxtName.field__item.textbox&quot;},{&quot;n&quot;:&quot;focus&quot;,&quot;s&quot;:5866,&quot;e&quot;:5867,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input#TxtName.field__item.textbox&quot;},{&quot;n&quot;:&quot;focus&quot;,&quot;s&quot;:5867,&quot;e&quot;:5867,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input#TxtName.field__item.textbox&quot;},{&quot;n&quot;:&quot;focus&quot;,&quot;s&quot;:8715,&quot;e&quot;:8715,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input#TxtPassword.field-group__item.textbox&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:177,&quot;e&quot;:327,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/scss/image/collaboration.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:177,&quot;e&quot;:327,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/img/crmlogo.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:284,&quot;e&quot;:287,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:328,&quot;e&quot;:329,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/imgcss/cubes.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:330,&quot;e&quot;:331,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/icon-font/login/fontello.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:344,&quot;e&quot;:346,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-118-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:455,&quot;e&quot;:458,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-300-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:980,&quot;e&quot;:980,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:1908,&quot;e&quot;:1908,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:2911,&quot;e&quot;:2911,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:3912,&quot;e&quot;:3912,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:4897,&quot;e&quot;:4897,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:5739,&quot;e&quot;:5739,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:5985,&quot;e&quot;:5992,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:6483,&quot;e&quot;:6483,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:6980,&quot;e&quot;:6980,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:7482,&quot;e&quot;:7482,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:7993,&quot;e&quot;:7994,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:8483,&quot;e&quot;:8483,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:8980,&quot;e&quot;:8980,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:9483,&quot;e&quot;:9483,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:9983,&quot;e&quot;:9983,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:10488,&quot;e&quot;:10489,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:10980,&quot;e&quot;:10980,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:11480,&quot;e&quot;:11480,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setInterval&quot;,&quot;s&quot;:11990,&quot;e&quot;:11990,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;blur&quot;,&quot;s&quot;:1337,&quot;e&quot;:1341,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input#TxtName.field__item.textbox&quot;},{&quot;n&quot;:&quot;blur&quot;,&quot;s&quot;:8708,&quot;e&quot;:8714,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input#TxtName.field__item.textbox.valid&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:1587,&quot;e&quot;:1587,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:1911,&quot;e&quot;:1911,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2342,&quot;e&quot;:2342,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2342,&quot;e&quot;:2342,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2343,&quot;e&quot;:2343,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2722,&quot;e&quot;:2722,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2722,&quot;e&quot;:2722,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2723,&quot;e&quot;:2723,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:10591,&quot;e&quot;:10591,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:11558,&quot;e&quot;:11558,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:11558,&quot;e&quot;:11558,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:11559,&quot;e&quot;:11560,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;fp&quot;,&quot;s&quot;:341,&quot;e&quot;:341,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;fcp&quot;,&quot;s&quot;:341,&quot;e&quot;:341,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:430,&quot;e&quot;:430,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2344,&quot;e&quot;:2344,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2344,&quot;e&quot;:2344,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2344,&quot;e&quot;:2345,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2723,&quot;e&quot;:2723,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2723,&quot;e&quot;:2723,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2723,&quot;e&quot;:2723,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11560,&quot;e&quot;:11560,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11560,&quot;e&quot;:11560,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:11560,&quot;e&quot;:11561,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;fi&quot;,&quot;s&quot;:1245,&quot;e&quot;:1245,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;fid&quot;,&quot;s&quot;:1245,&quot;e&quot;:1247,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;pageHide&quot;,&quot;s&quot;:1442,&quot;e&quot;:1442,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;lcp&quot;,&quot;s&quot;:584,&quot;e&quot;:584,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:2342,&quot;e&quot;:2342,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:2722,&quot;e&quot;:2722,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:11559,&quot;e&quot;:11559,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:1588,&quot;e&quot;:2345,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:1911,&quot;e&quot;:2723,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:10592,&quot;e&quot;:11560,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:1589,&quot;e&quot;:2340,&quot;o&quot;:&quot;https://bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:1911,&quot;e&quot;:2721,&quot;o&quot;:&quot;https://bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:10592,&quot;e&quot;:11556,&quot;o&quot;:&quot;https://bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:5869,&quot;e&quot;:5869,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input#TxtName.field__item.textbox&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:6993,&quot;e&quot;:7940,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input#TxtName.field__item.textbox&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:8826,&quot;e&quot;:9321,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input#TxtPassword.field-group__item.textbox&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:9420,&quot;e&quot;:11398,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input#TxtPassword.field-group__item.textbox.valid&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:11469,&quot;e&quot;:11703,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input#TxtPassword.field-group__item.textbox.valid&quot;},{&quot;n&quot;:&quot;transitionend&quot;,&quot;s&quot;:6123,&quot;e&quot;:6124,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.owl-stage&quot;},{&quot;n&quot;:&quot;transitionend&quot;,&quot;s&quot;:11001,&quot;e&quot;:11001,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.owl-stage&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GikOVw9aJg5bFUNfVVkAEx8KWwIIWw%3D%3D&amp;rst=12359&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/login/login&amp;ptid=f69b8bf1-0001-b3ba-f969-0181d6e99c71&amp;st=1657168016907</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/Login/AttemptLogin-2,160" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="UserName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">UserName</stringProp>
                  <stringProp name="Argument.value">${UserName}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="SecureTextBox.Text" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SecureTextBox.Text</stringProp>
                  <stringProp name="Argument.value">${SecureTextBox.Text}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="SecureTextBox.ChallengeText" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SecureTextBox.ChallengeText</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="SecureTextBox.PosxText" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">SecureTextBox.PosxText</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="RememberMe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">RememberMe</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="command" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">command</stringProp>
                  <stringProp name="Argument.value">Login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/snload7/app/Login/AttemptLogin</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/login/login?</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-192987258">Summary</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CRMNextObject/Home/Summary-2,161" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/snload7/app/CRMNextObject/Home/Summary</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/login/login?</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Csrf_2164" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">Csrf_2164</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">GetHomePageMetaData?x=</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;&gt;</stringProp>
              <stringProp name="BoundaryExtractor.default">NF_2164</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Csrf_2165" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">Csrf_2165</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">LoadTopNavContent(&apos;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&apos;,</stringProp>
              <stringProp name="BoundaryExtractor.default">NF_2165</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Csrf_2167" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">Csrf_2167</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">ObjectImage?x=</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,</stringProp>
              <stringProp name="BoundaryExtractor.default">NF_2167</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/FormApi/GetHomePageMetaData-2,164" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x</stringProp>
                  <stringProp name="Argument.value">${Csrf_2164}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/snload7/app/FormApi/GetHomePageMetaData</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Summary</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CRMNextCache/CustomNavigation-2,165" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x</stringProp>
                  <stringProp name="Argument.value">${Csrf_2165}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/snload7/app/CRMNextCache/CustomNavigation</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Summary</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiZGM3MWMwMDQ3NWY2MWY4MiIsInRyIjoiZjYyNDdhMGM4OWMyNWIzODA5NGQxMDNlZGQ4MDU3NzgiLCJ0aSI6MTY1NzE2ODAzMTAzOH19</stringProp>
                </elementProp>
                <elementProp name="X-NewRelic-ID" elementType="Header">
                  <stringProp name="Header.name">X-NewRelic-ID</stringProp>
                  <stringProp name="Header.value">VwUAWFZUDBAFVlZWAAMBVVI=</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-dc71c00475f61f82----1657168031038</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-f6247a0c89c25b38094d103edd805778-dc71c00475f61f82-01</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GikOVw9aJg5bFUNfVVkAEx8KWwIIWw%3D%3D&amp;rst=13764&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/login/login&amp;ptid=f69b8bf1-0001-b3ba-f969-0181d6e99c71-2,162" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">bel.6;e,&apos;unload,amb,1;6,&apos;cls,0.014394538822285823</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GikOVw9aJg5bFUNfVVkAEx8KWwIIWw%3D%3D&amp;rst=13764&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/login/login&amp;ptid=f69b8bf1-0001-b3ba-f969-0181d6e99c71</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/jserrors/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GikOVw9aJg5bFUNfVVkAEx8KWwIIWw%3D%3D&amp;rst=13770&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/login/login&amp;ptid=f69b8bf1-0001-b3ba-f969-0181d6e99c71-2,163" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sm&quot;:[{&quot;params&quot;:{&quot;name&quot;:&quot;Framework/Jquery/Detected&quot;},&quot;stats&quot;:{&quot;c&quot;:1}},{&quot;params&quot;:{&quot;name&quot;:&quot;Ajax/Events/Excluded/Agent&quot;},&quot;stats&quot;:{&quot;c&quot;:4}}],&quot;xhr&quot;:[{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;bam.nr-data.net&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;bam.nr-data.net:443&quot;,&quot;pathname&quot;:&quot;/resources/1/NRJS-2551f7a729197a720f4&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:2,&quot;txSize&quot;:{&quot;t&quot;:12995,&quot;min&quot;:1055,&quot;max&quot;:11940,&quot;sos&quot;:143676625,&quot;c&quot;:2},&quot;rxSize&quot;:{&quot;t&quot;:72,&quot;min&quot;:36,&quot;max&quot;:36,&quot;sos&quot;:2592,&quot;c&quot;:2},&quot;duration&quot;:{&quot;t&quot;:1627,&quot;min&quot;:757,&quot;max&quot;:870,&quot;sos&quot;:1329949,&quot;c&quot;:2},&quot;cbTime&quot;:{&quot;t&quot;:1,&quot;min&quot;:0,&quot;max&quot;:1,&quot;sos&quot;:1,&quot;c&quot;:2},&quot;time&quot;:{&quot;t&quot;:13948,&quot;min&quot;:1588,&quot;max&quot;:12360,&quot;sos&quot;:155291344,&quot;c&quot;:2}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;bam.nr-data.net&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;bam.nr-data.net:443&quot;,&quot;pathname&quot;:&quot;/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:2,&quot;txSize&quot;:{&quot;t&quot;:618,&quot;min&quot;:184,&quot;max&quot;:434,&quot;sos&quot;:222212,&quot;c&quot;:2},&quot;rxSize&quot;:{&quot;t&quot;:48,&quot;min&quot;:24,&quot;max&quot;:24,&quot;sos&quot;:1152,&quot;c&quot;:2},&quot;duration&quot;:{&quot;t&quot;:1780,&quot;min&quot;:812,&quot;max&quot;:968,&quot;sos&quot;:1596368,&quot;c&quot;:2},&quot;cbTime&quot;:{&quot;t&quot;:0,&quot;min&quot;:0,&quot;max&quot;:0,&quot;sos&quot;:0,&quot;c&quot;:2},&quot;time&quot;:{&quot;t&quot;:12503,&quot;min&quot;:1911,&quot;max&quot;:10592,&quot;sos&quot;:115842385,&quot;c&quot;:2}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/jserrors/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GikOVw9aJg5bFUNfVVkAEx8KWwIIWw%3D%3D&amp;rst=13770&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/login/login&amp;ptid=f69b8bf1-0001-b3ba-f969-0181d6e99c71</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CRMNextObject/GetPushByDevice-2,166" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/snload7/app/CRMNextObject/GetPushByDevice</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Summary</stringProp>
                </elementProp>
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-2719a4e5105570c5----1657168031576</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-5e21b36f1efdb28b4a8c95fb8bbb1fec-2719a4e5105570c5-01</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiMjcxOWE0ZTUxMDU1NzBjNSIsInRyIjoiNWUyMWIzNmYxZWZkYjI4YjRhOGM5NWZiOGJiYjFmZWMiLCJ0aSI6MTY1NzE2ODAzMTU3Nn19</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CardView/LoadActivityList?x=6esglvdx9dtu6dddz3zhtsmumwwfewavw3hev9s4exd9pb77kgdft3b7ekwvaq8u7y46rll69fxbx-2,168" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;LookUpRequest&quot;:{&quot;ControlKey&quot;:&quot;ActivityList_18&quot;,&quot;ObjectContext&quot;:null,&quot;AllowedOptions&quot;:null,&quot;LinkDataContext&quot;:{&quot;Linking&quot;:null,&quot;References&quot;:null,&quot;ReferenceControls&quot;:null},&quot;Model&quot;:null,&quot;ExistingValues&quot;:null,&quot;GraphType&quot;:null,&quot;ControlProperties&quot;:{&quot;HasInfiniteScroll&quot;:1,&quot;Scope&quot;:3,&quot;HeaderLinkIcon&quot;:&quot;&quot;}},&quot;ListingRequest&quot;:{&quot;ContentFilter&quot;:{&quot;PageIndex&quot;:1,&quot;PageSize&quot;:0,&quot;ABCFilter&quot;:&quot;&quot;,&quot;OrderBy&quot;:0,&quot;OrderField&quot;:&quot;&quot;,&quot;Filters&quot;:{},&quot;NextPageToken&quot;:&quot;&quot;}},&quot;RequestMode&quot;:1,&quot;IsContinueOnNoSelection&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/snload7/app/CardView/LoadActivityList?x=6esglvdx9dtu6dddz3zhtsmumwwfewavw3hev9s4exd9pb77kgdft3b7ekwvaq8u7y46rll69fxbx</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Summary</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiNzg1MzZhYjZkZGIwMmIzNCIsInRyIjoiZDFiMTQ3M2MzNTQwNmE5NDhlYjg4MGQyYTIxMGExOGQiLCJ0aSI6MTY1NzE2ODAzMTgwNH19</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-78536ab6ddb02b34----1657168031804</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-d1b1473c35406a948eb880d2a210a18d-78536ab6ddb02b34-01</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/media/ObjectImage-2,167" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="x" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">x</stringProp>
                  <stringProp name="Argument.value">${Csrf_2167}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/snload7/app/media/ObjectImage</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Summary</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/avif,image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CardView/LoadActivityList?x=6esglvdx9dtu2vz7qjw3dm5jwalzeb4td9jte3lw88n2t4thcbaq-2,169" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;LookUpRequest&quot;:{&quot;ControlKey&quot;:&quot;Card_EventSummary&quot;,&quot;ObjectContext&quot;:null,&quot;AllowedOptions&quot;:null,&quot;LinkDataContext&quot;:{&quot;Linking&quot;:null,&quot;References&quot;:null,&quot;ReferenceControls&quot;:null},&quot;Model&quot;:null,&quot;ExistingValues&quot;:null,&quot;GraphType&quot;:null,&quot;ControlProperties&quot;:{&quot;HasInfiniteScroll&quot;:1,&quot;Scope&quot;:3,&quot;HeaderLinkIcon&quot;:&quot;&quot;}},&quot;ListingRequest&quot;:{&quot;ContentFilter&quot;:{&quot;PageIndex&quot;:1,&quot;PageSize&quot;:0,&quot;ABCFilter&quot;:&quot;&quot;,&quot;OrderBy&quot;:0,&quot;OrderField&quot;:&quot;&quot;,&quot;Filters&quot;:{},&quot;NextPageToken&quot;:&quot;&quot;}},&quot;RequestMode&quot;:1,&quot;IsContinueOnNoSelection&quot;:false}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/snload7/app/CardView/LoadActivityList?x=6esglvdx9dtu2vz7qjw3dm5jwalzeb4td9jte3lw88n2t4thcbaq</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">true</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Summary</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiZThlZmJmOGFhMDA3YjI0MSIsInRyIjoiNmE2OGRlNWNiM2QxZTk2NDExYTZjMTc3MTIwNjkwMGYiLCJ0aSI6MTY1NzE2ODAzMTg3OX19</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-e8efbf8aa007b241----1657168031879</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-6a68de5cb3d1e96411a6c1771206900f-e8efbf8aa007b241-01</stringProp>
                </elementProp>
                <elementProp name="x-requested-with" elementType="Header">
                  <stringProp name="Header.name">x-requested-with</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/NRJS-2551f7a729197a720f4-2,170" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                  <stringProp name="Argument.value">527472636</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1216.487a282</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="to" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">to</stringProp>
                  <stringProp name="Argument.value">YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rst</stringProp>
                  <stringProp name="Argument.value">2897</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ck" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ck</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ref" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ref</stringProp>
                  <stringProp name="Argument.value">http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Summary</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ap" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ap</stringProp>
                  <stringProp name="Argument.value">130</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="be" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">be</stringProp>
                  <stringProp name="Argument.value">974</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fe</stringProp>
                  <stringProp name="Argument.value">2863</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dc</stringProp>
                  <stringProp name="Argument.value">1850</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="af" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">af</stringProp>
                  <stringProp name="Argument.value">err,xhr,stn,ins,spa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="perf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">perf</stringProp>
                  <stringProp name="Argument.value">%7B%22timing%22:%7B%22of%22:1657168029784,%22n%22:0,%22u%22:896,%22r%22:11,%22ue%22:896,%22re%22:459,%22f%22:459,%22dn%22:459,%22dne%22:459,%22c%22:459,%22ce%22:459,%22rq%22:460,%22rp%22:866,%22rpe%22:869,%22dl%22:901,%22di%22:1850,%22ds%22:1850,%22de%22:1854,%22dc%22:2863,%22l%22:2863,%22le%22:2881%7D,%22navigation%22:%7B%22rc%22:1%7D%7D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fp</stringProp>
                  <stringProp name="Argument.value">1705</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fcp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fcp</stringProp>
                  <stringProp name="Argument.value">1705</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsonp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsonp</stringProp>
                  <stringProp name="Argument.value">NREUM.setToken</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/NRJS-2551f7a729197a720f4</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">${constantTimer}</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="Runtime Controller" enabled="true">
          <stringProp name="RunTime.seconds">50</stringProp>
        </RunTime>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="BA_03_Click_on_customer" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D&amp;rst=4025&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Summary-2,172" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">bel.7;1,4,,31i,2cc,5n,&apos;initialPageLoad,&apos;http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Summary,1,1,,,,3m,!!&apos;8c291117-bb7c-4709-b0a6-9dc70ad943a4,&apos;1,1bd,1bd;2,,yv,b9,2,2,&apos;GET,5k,&apos;sbilifeload.crmnext.com:80,&apos;/snload7/app/CRMNextCache/CustomNavigation,,cop,,&apos;3,&apos;dc71c00475f61f82,&apos;f6247a0c89c25b38094d103edd805778,l5aj24am;2,,1dt,46,4t,1,4,5k,5,&apos;/snload7/app/CRMNextObject/GetPushByDevice,,1n,1,&apos;8,&apos;2719a4e5105570c5,&apos;5e21b36f1efdb28b4a8c95fb8bbb1fec,l5aj24pk;2,,1k5,jz,1w,1u,&apos;POST,5k,5,&apos;/snload7/app/CardView/LoadActivityList,dg,2nt,1,&apos;9,&apos;78536ab6ddb02b34,&apos;d1b1473c35406a948eb880d2a210a18d,l5aj24vw;2,,1m8,1ei,s,q,e,5k,5,f,di,510,1,&apos;10,&apos;e8efbf8aa007b241,&apos;6a68de5cb3d1e96411a6c1771206900f,l5aj24xz;b,ow,-ol,ol,-c5,,,,,!,1,ba,3,w,qd,,4,s1,,i</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D&amp;rst=4025&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Summary</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D&amp;rst=3993&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Summary&amp;st=1657168029784-2,171" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;res&quot;:[{&quot;n&quot;:&quot;navigationStart&quot;,&quot;s&quot;:0,&quot;e&quot;:0,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;unloadEventStart&quot;,&quot;s&quot;:896,&quot;e&quot;:896,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;unloadEventEnd&quot;,&quot;s&quot;:896,&quot;e&quot;:896,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;redirectStart&quot;,&quot;s&quot;:11,&quot;e&quot;:11,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;redirectEnd&quot;,&quot;s&quot;:459,&quot;e&quot;:459,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;fetchStart&quot;,&quot;s&quot;:459,&quot;e&quot;:459,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domainLookupStart&quot;,&quot;s&quot;:459,&quot;e&quot;:459,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domainLookupEnd&quot;,&quot;s&quot;:459,&quot;e&quot;:459,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;connectStart&quot;,&quot;s&quot;:459,&quot;e&quot;:459,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;connectEnd&quot;,&quot;s&quot;:459,&quot;e&quot;:459,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;requestStart&quot;,&quot;s&quot;:460,&quot;e&quot;:460,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;responseStart&quot;,&quot;s&quot;:866,&quot;e&quot;:866,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;responseEnd&quot;,&quot;s&quot;:869,&quot;e&quot;:869,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domLoading&quot;,&quot;s&quot;:901,&quot;e&quot;:901,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domInteractive&quot;,&quot;s&quot;:1850,&quot;e&quot;:1850,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domContentLoadedEventStart&quot;,&quot;s&quot;:1850,&quot;e&quot;:1850,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domContentLoadedEventEnd&quot;,&quot;s&quot;:1854,&quot;e&quot;:1854,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domComplete&quot;,&quot;s&quot;:2863,&quot;e&quot;:2863,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;loadEventStart&quot;,&quot;s&quot;:2863,&quot;e&quot;:2863,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;loadEventEnd&quot;,&quot;s&quot;:2881,&quot;e&quot;:2881,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D&amp;rst=3993&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Summary&amp;st=1657168029784</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CRMNextObject/Home/Account-2,173" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/CRMNextObject/Home/Account</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Summary</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="524528883">ToolBox</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Csrf_2177" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Csrf_2177</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">GetHomePageMetaData?x=</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">NF_2177</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Csrf_2185" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Csrf_2185</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">Account?x=</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;,</stringProp>
                <stringProp name="BoundaryExtractor.default">NF_2185</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/FormApi/GetHomePageMetaData-2,177" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="x" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x</stringProp>
                    <stringProp name="Argument.value">${Csrf_2177}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/FormApi/GetHomePageMetaData</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Account</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D&amp;rst=10657&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Summary&amp;ptid=81a74d37-0001-bad9-593e-0181d6e9d7e2-2,174" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">bel.6;e,&apos;fp,1bd,1;6,&apos;cls,0.12408497034840622;e,&apos;fcp,1bd,1;6,1,0.12408497034840622;e,&apos;fi,1fy,6;5,&apos;type,&apos;keydown;5,&apos;net-etype,&apos;4g;6,&apos;net-rtt,100.;6,&apos;net-dlink,1.3;6,&apos;fid,32.;6,1,0.12408497034840622;e,&apos;pageHide,1mq,1;6,1,0.12437824027923153;e,&apos;load,27j,1;6,1,0.12437824027923153;e,&apos;lcp,1bd,8;6,&apos;size,3900.;5,&apos;eid,&apos;style-switcher;5,6,7;6,8,100.;6,9,1.3;5,&apos;elUrl,&apos;http://sbilifeload.crmnext.com/SNLOAD7/app/assets_102319_1/img/crmlogo.png;5,&apos;elTag,&apos;IMG;6,1,0.12408497034840622;e,&apos;unload,87z,1;6,1,0.12437824027923153</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D&amp;rst=10657&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Summary&amp;ptid=81a74d37-0001-bad9-593e-0181d6e9d7e2</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/DomainLookup/LoadList?x=6esglvdx9dtu6xkbjq4slhhvmyqe8tukrtvjzjlmkd786wc83h3q-2,178" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;LookUpRequest&quot;:{&quot;ControlKey&quot;:&quot;Card_RecentAccount&quot;,&quot;ObjectContext&quot;:null,&quot;AllowedOptions&quot;:null,&quot;LinkDataContext&quot;:{&quot;Linking&quot;:null,&quot;References&quot;:null,&quot;ReferenceControls&quot;:null},&quot;Model&quot;:null,&quot;ExistingValues&quot;:null,&quot;GraphType&quot;:null,&quot;ControlProperties&quot;:{&quot;HasInfiniteScroll&quot;:1}},&quot;ListingRequest&quot;:{&quot;ContentFilter&quot;:{&quot;PageIndex&quot;:1,&quot;PageSize&quot;:0,&quot;ABCFilter&quot;:&quot;&quot;,&quot;OrderBy&quot;:0,&quot;OrderField&quot;:&quot;&quot;,&quot;Filters&quot;:{},&quot;NextPageToken&quot;:&quot;&quot;}},&quot;RequestMode&quot;:1,&quot;IsContinueOnNoSelection&quot;:false}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/DomainLookup/LoadList?x=6esglvdx9dtu6xkbjq4slhhvmyqe8tukrtvjzjlmkd786wc83h3q</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Account</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiNGJmMTVmNzAwMWZiYTdhMCIsInRyIjoiM2RhMGI5YjE3NGFmMzdhYTY2MzkxY2NiNWQ2ZjU1NDgiLCJ0aSI6MTY1NzE2ODA0MDk5Mn19</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-4bf15f7001fba7a0----1657168040992</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-3da0b9b174af37aa66391ccb5d6f5548-4bf15f7001fba7a0-01</stringProp>
                  </elementProp>
                  <elementProp name="x-requested-with" elementType="Header">
                    <stringProp name="Header.name">x-requested-with</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CRMNextObject/GetPushByDevice-2,179" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/CRMNextObject/GetPushByDevice</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Account</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-918ad63a3b6a314e----1657168041026</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-880ea811540eaf70431fd0d5de10e3f1-918ad63a3b6a314e-01</stringProp>
                  </elementProp>
                  <elementProp name="x-requested-with" elementType="Header">
                    <stringProp name="Header.name">x-requested-with</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiOTE4YWQ2M2EzYjZhMzE0ZSIsInRyIjoiODgwZWE4MTE1NDBlYWY3MDQzMWZkMGQ1ZGUxMGUzZjEiLCJ0aSI6MTY1NzE2ODA0MTAyNn19</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/jserrors/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D&amp;rst=10659&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Summary&amp;ptid=81a74d37-0001-bad9-593e-0181d6e9d7e2-2,175" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;sm&quot;:[{&quot;params&quot;:{&quot;name&quot;:&quot;Framework/React/Detected&quot;},&quot;stats&quot;:{&quot;c&quot;:1}},{&quot;params&quot;:{&quot;name&quot;:&quot;Framework/Jquery/Detected&quot;},&quot;stats&quot;:{&quot;c&quot;:1}},{&quot;params&quot;:{&quot;name&quot;:&quot;Ajax/Events/Excluded/Agent&quot;},&quot;stats&quot;:{&quot;c&quot;:2}}],&quot;xhr&quot;:[{&quot;params&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/CRMNextCache/CustomNavigation&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;rxSize&quot;:{&quot;t&quot;:16441},&quot;duration&quot;:{&quot;t&quot;:407},&quot;cbTime&quot;:{&quot;t&quot;:1},&quot;time&quot;:{&quot;t&quot;:1255}}},{&quot;params&quot;:{&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/CRMNextObject/GetPushByDevice&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:0},&quot;rxSize&quot;:{&quot;t&quot;:59},&quot;duration&quot;:{&quot;t&quot;:150},&quot;time&quot;:{&quot;t&quot;:1793}}},{&quot;params&quot;:{&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/CardView/LoadActivityList&quot;,&quot;method&quot;:&quot;POST&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:2,&quot;txSize&quot;:{&quot;t&quot;:970,&quot;min&quot;:484,&quot;max&quot;:486,&quot;sos&quot;:470452,&quot;c&quot;:2},&quot;rxSize&quot;:{&quot;t&quot;:9965,&quot;min&quot;:3449,&quot;max&quot;:6516,&quot;sos&quot;:54353857,&quot;c&quot;:2},&quot;duration&quot;:{&quot;t&quot;:2537,&quot;min&quot;:719,&quot;max&quot;:1818,&quot;sos&quot;:3822085,&quot;c&quot;:2},&quot;time&quot;:{&quot;t&quot;:4117,&quot;min&quot;:2021,&quot;max&quot;:2096,&quot;sos&quot;:8477657,&quot;c&quot;:2}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;bam.nr-data.net&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;bam.nr-data.net:443&quot;,&quot;pathname&quot;:&quot;/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:750},&quot;rxSize&quot;:{&quot;t&quot;:24},&quot;duration&quot;:{&quot;t&quot;:650},&quot;cbTime&quot;:{&quot;t&quot;:1},&quot;time&quot;:{&quot;t&quot;:4025}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;bam.nr-data.net&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;bam.nr-data.net:443&quot;,&quot;pathname&quot;:&quot;/resources/1/NRJS-2551f7a729197a720f4&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:1355},&quot;rxSize&quot;:{&quot;t&quot;:36},&quot;duration&quot;:{&quot;t&quot;:700},&quot;cbTime&quot;:{&quot;t&quot;:1},&quot;time&quot;:{&quot;t&quot;:3994}}}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/jserrors/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D&amp;rst=10659&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Summary&amp;ptid=81a74d37-0001-bad9-593e-0181d6e9d7e2</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D&amp;rst=10661&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Summary&amp;ptid=81a74d37-0001-bad9-593e-0181d6e9d7e2&amp;st=1657168029784-2,176" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;res&quot;:[{&quot;n&quot;:&quot;link&quot;,&quot;s&quot;:913,&quot;e&quot;:913,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/theme/theme18/root.css&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:914,&quot;e&quot;:914,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:915,&quot;e&quot;:915,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery-migrate.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:915,&quot;e&quot;:915,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/json2.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:915,&quot;e&quot;:915,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/modernizr.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:915,&quot;e&quot;:915,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/sha/sha-all.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:919,&quot;e&quot;:919,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/sha/shainitialization.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:919,&quot;e&quot;:919,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/CryptoJS.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:919,&quot;e&quot;:919,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/encodedecode.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:961,&quot;e&quot;:1158,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/FormApi/GetHomePageMetaData&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:1736,&quot;e&quot;:1738,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/controls/CalendarCard.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:2863,&quot;e&quot;:2866,&quot;o&quot;:&quot;https://js-agent.newrelic.com:443/nr-spa-1216.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:2897,&quot;e&quot;:3990,&quot;o&quot;:&quot;https://bam.nr-data.net:443/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:961,&quot;e&quot;:961,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/img/crmlogo.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:1795,&quot;e&quot;:1798,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/img/scss/image/crmlogo.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:3032,&quot;e&quot;:3037,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/imgcss/nodata-found.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:1097,&quot;e&quot;:1097,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-300-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:1103,&quot;e&quot;:1103,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-118-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:1103,&quot;e&quot;:1103,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:1688,&quot;e&quot;:1692,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/icon-font/desktop/theme/fontello.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:1696,&quot;e&quot;:1698,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-116-300-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:1815,&quot;e&quot;:1816,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/imgcss/down-arrow.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:1824,&quot;e&quot;:1826,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-700-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:1824,&quot;e&quot;:1826,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-500-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:1830,&quot;e&quot;:1833,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-117-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:1254,&quot;e&quot;:1254,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:1660,&quot;e&quot;:1660,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:1660,&quot;e&quot;:1660,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:1660,&quot;e&quot;:1660,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3994,&quot;e&quot;:3994,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:4025,&quot;e&quot;:4025,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:4672,&quot;e&quot;:4672,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:4673,&quot;e&quot;:4673,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:4674,&quot;e&quot;:4674,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:4692,&quot;e&quot;:4692,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:4692,&quot;e&quot;:4692,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:4693,&quot;e&quot;:4693,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:1660,&quot;e&quot;:1660,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:4673,&quot;e&quot;:4673,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:4692,&quot;e&quot;:4692,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:1661,&quot;e&quot;:1661,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:1661,&quot;e&quot;:1662,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:1662,&quot;e&quot;:1662,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:1923,&quot;e&quot;:1923,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2862,&quot;e&quot;:2863,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2863,&quot;e&quot;:2863,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3040,&quot;e&quot;:3040,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2863,&quot;e&quot;:2863,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:4674,&quot;e&quot;:4674,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:4674,&quot;e&quot;:4675,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:4675,&quot;e&quot;:4676,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:4693,&quot;e&quot;:4693,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:4693,&quot;e&quot;:4693,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:4693,&quot;e&quot;:4694,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:5043,&quot;e&quot;:5043,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;img#emptyImage.emptyImage&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:1255,&quot;e&quot;:1420,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:4025,&quot;e&quot;:4669,&quot;o&quot;:&quot;https://bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1758,&quot;e&quot;:1759,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1759,&quot;e&quot;:1759,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1759,&quot;e&quot;:1761,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1791,&quot;e&quot;:1791,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1792,&quot;e&quot;:1792,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1792,&quot;e&quot;:1794,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1795,&quot;e&quot;:1795,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1795,&quot;e&quot;:1795,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1795,&quot;e&quot;:1795,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1854,&quot;e&quot;:1854,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1854,&quot;e&quot;:1854,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1854,&quot;e&quot;:1854,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1901,&quot;e&quot;:1901,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1901,&quot;e&quot;:1901,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1901,&quot;e&quot;:1902,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1916,&quot;e&quot;:1916,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1916,&quot;e&quot;:1916,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1916,&quot;e&quot;:1916,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1986,&quot;e&quot;:1986,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1987,&quot;e&quot;:1989,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1989,&quot;e&quot;:1990,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2018,&quot;e&quot;:2018,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2018,&quot;e&quot;:2018,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2019,&quot;e&quot;:2021,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2083,&quot;e&quot;:2083,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2083,&quot;e&quot;:2083,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2083,&quot;e&quot;:2083,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2084,&quot;e&quot;:2084,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2085,&quot;e&quot;:2085,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2085,&quot;e&quot;:2086,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2095,&quot;e&quot;:2095,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2095,&quot;e&quot;:2095,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2095,&quot;e&quot;:2096,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2103,&quot;e&quot;:2103,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2103,&quot;e&quot;:2103,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2103,&quot;e&quot;:2103,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2116,&quot;e&quot;:2116,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2116,&quot;e&quot;:2116,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2116,&quot;e&quot;:2116,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2806,&quot;e&quot;:2806,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2806,&quot;e&quot;:2807,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2807,&quot;e&quot;:2807,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2808,&quot;e&quot;:2808,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2808,&quot;e&quot;:2808,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2808,&quot;e&quot;:2808,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2808,&quot;e&quot;:2808,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2808,&quot;e&quot;:2808,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2808,&quot;e&quot;:2808,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2808,&quot;e&quot;:2808,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2808,&quot;e&quot;:2808,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2808,&quot;e&quot;:2808,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2808,&quot;e&quot;:2809,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2809,&quot;e&quot;:2809,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2809,&quot;e&quot;:2809,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2809,&quot;e&quot;:2809,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2809,&quot;e&quot;:2809,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:2809,&quot;e&quot;:2809,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3032,&quot;e&quot;:3032,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3032,&quot;e&quot;:3032,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3032,&quot;e&quot;:3033,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3941,&quot;e&quot;:3942,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3942,&quot;e&quot;:3942,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3942,&quot;e&quot;:3942,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3942,&quot;e&quot;:3942,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3942,&quot;e&quot;:3942,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3942,&quot;e&quot;:3942,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3942,&quot;e&quot;:3942,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3943,&quot;e&quot;:3943,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3943,&quot;e&quot;:3943,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3943,&quot;e&quot;:3943,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3943,&quot;e&quot;:3943,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3943,&quot;e&quot;:3943,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3943,&quot;e&quot;:3943,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3943,&quot;e&quot;:3943,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3943,&quot;e&quot;:3943,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3943,&quot;e&quot;:3943,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3943,&quot;e&quot;:3943,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3943,&quot;e&quot;:3943,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3943,&quot;e&quot;:3943,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:3943,&quot;e&quot;:3943,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:5026,&quot;e&quot;:5026,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:5026,&quot;e&quot;:5026,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:5027,&quot;e&quot;:5027,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10122,&quot;e&quot;:10122,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10123,&quot;e&quot;:10123,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10123,&quot;e&quot;:10123,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;DOMContentLoaded&quot;,&quot;s&quot;:1850,&quot;e&quot;:1850,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;DOMContentLoaded&quot;,&quot;s&quot;:1850,&quot;e&quot;:1851,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;DOMContentLoaded&quot;,&quot;s&quot;:1851,&quot;e&quot;:1853,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;DOMContentLoaded&quot;,&quot;s&quot;:1853,&quot;e&quot;:1855,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1867,&quot;e&quot;:1867,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1867,&quot;e&quot;:1868,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1868,&quot;e&quot;:1868,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1868,&quot;e&quot;:1868,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1868,&quot;e&quot;:1868,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1868,&quot;e&quot;:1902,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1904,&quot;e&quot;:1904,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1904,&quot;e&quot;:1916,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1916,&quot;e&quot;:1916,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1919,&quot;e&quot;:1921,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1921,&quot;e&quot;:1921,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1921,&quot;e&quot;:1921,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1921,&quot;e&quot;:1922,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1938,&quot;e&quot;:1938,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1943,&quot;e&quot;:1943,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1943,&quot;e&quot;:1943,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1943,&quot;e&quot;:1943,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1943,&quot;e&quot;:1943,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1944,&quot;e&quot;:1944,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1959,&quot;e&quot;:1959,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1959,&quot;e&quot;:1959,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1959,&quot;e&quot;:1959,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1962,&quot;e&quot;:1962,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1962,&quot;e&quot;:1962,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1970,&quot;e&quot;:1970,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:2113,&quot;e&quot;:2113,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:2899,&quot;e&quot;:2900,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:3028,&quot;e&quot;:3033,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:4004,&quot;e&quot;:4004,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:4005,&quot;e&quot;:4005,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:4024,&quot;e&quot;:4026,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:5021,&quot;e&quot;:5027,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:5027,&quot;e&quot;:5043,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:5043,&quot;e&quot;:5043,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:5558,&quot;e&quot;:5559,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:1902,&quot;e&quot;:1904,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;body.bg-light-gray&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:5695,&quot;e&quot;:5695,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;body.bg-light-gray&quot;},{&quot;n&quot;:&quot;fetch&quot;,&quot;s&quot;:2020,&quot;e&quot;:2737,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/CardView/LoadActivityList&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:1255,&quot;e&quot;:1662,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:1793,&quot;e&quot;:1943,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextObject/GetPushByDevice&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:2021,&quot;e&quot;:2740,&quot;o&quot;:&quot;200 POST: sbilifeload.crmnext.com:80/snload7/app/CardView/LoadActivityList&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:2096,&quot;e&quot;:3914,&quot;o&quot;:&quot;200 POST: sbilifeload.crmnext.com:80/snload7/app/CardView/LoadActivityList&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:4025,&quot;e&quot;:4675,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:3994,&quot;e&quot;:4694,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;fp&quot;,&quot;s&quot;:1705,&quot;e&quot;:1705,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;fcp&quot;,&quot;s&quot;:1705,&quot;e&quot;:1705,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;fi&quot;,&quot;s&quot;:1870,&quot;e&quot;:1870,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;fid&quot;,&quot;s&quot;:1870,&quot;e&quot;:1902,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;pageHide&quot;,&quot;s&quot;:2114,&quot;e&quot;:2114,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;lcp&quot;,&quot;s&quot;:1705,&quot;e&quot;:1705,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;requestAnimationFrame&quot;,&quot;s&quot;:5559,&quot;e&quot;:5559,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;requestAnimationFrame&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:5848,&quot;e&quot;:6006,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.empty-view.tc.pv-30.undefined&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:5880,&quot;e&quot;:5893,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.flex.items-center.justify-between.wt--100.ph-8&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:5893,&quot;e&quot;:5909,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.ph-12.ff-medium.primary&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:5909,&quot;e&quot;:5960,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.calendar__header--date.flex.items-center.justify-between.wt--100.pv-6.ph-8&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:5980,&quot;e&quot;:5991,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;img#emptyImage.emptyImage&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:6007,&quot;e&quot;:7622,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;a.white.side-nav-list__link.wt50.mid.f16.ht50&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:6292,&quot;e&quot;:6309,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;i.icon.icon-reports&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:6726,&quot;e&quot;:7007,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;i.icon.icon-competition&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:7193,&quot;e&quot;:7588,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;i.icon.icon-sales&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:7622,&quot;e&quot;:7638,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.sub-menu__heading.ph-16.ht50.flex.ff-bold.ttu.f13.items-center.white&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:7638,&quot;e&quot;:7888,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;a.white.wt-15.max--wt-100.db.ph-16.pv-8.f16.flex.flex-1.items-center.pointer&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:7655,&quot;e&quot;:7672,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;i.f16.white.icon.brand.icon-obj6&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:7672,&quot;e&quot;:8018,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.sub-menu-list__label.wt-13.ph-16.f12.ttc.ff-medium.white.pointer&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:10005,&quot;e&quot;:10005,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.sub-menu-list__label.wt-13.ph-16.f12.ttc.ff-medium.white.pointer&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:6007,&quot;e&quot;:6008,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:6024,&quot;e&quot;:6024,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:6058,&quot;e&quot;:6059,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:6074,&quot;e&quot;:6074,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:6110,&quot;e&quot;:6110,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:6293,&quot;e&quot;:6293,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:6310,&quot;e&quot;:6310,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:6327,&quot;e&quot;:6327,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:6359,&quot;e&quot;:6359,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:6394,&quot;e&quot;:6394,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:6526,&quot;e&quot;:6526,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:6693,&quot;e&quot;:6694,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:6727,&quot;e&quot;:6727,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:7007,&quot;e&quot;:7007,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:7058,&quot;e&quot;:7058,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:7193,&quot;e&quot;:7193,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:7589,&quot;e&quot;:7589,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:7622,&quot;e&quot;:7622,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:7639,&quot;e&quot;:7639,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:7655,&quot;e&quot;:7656,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:7672,&quot;e&quot;:7673,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:7805,&quot;e&quot;:7805,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:7872,&quot;e&quot;:7872,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-mouseover&quot;,&quot;s&quot;:7889,&quot;e&quot;:7889,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;focus&quot;,&quot;s&quot;:9999,&quot;e&quot;:10000,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;a.white.wt-15.max--wt-100.db.ph-16.pv-8.f16.flex.flex-1.items-center.pointer&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:10123,&quot;e&quot;:10123,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.sub-menu-list__label.wt-13.ph-16.f12.ttc.ff-medium.white.pointer&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:10123,&quot;e&quot;:10123,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.sub-menu-list__label.wt-13.ph-16.f12.ttc.ff-medium.white.pointer&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:10123,&quot;e&quot;:10124,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.sub-menu-list__label.wt-13.ph-16.f12.ttc.ff-medium.white.pointer&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:10124,&quot;e&quot;:10125,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.sub-menu-list__label.wt-13.ph-16.f12.ttc.ff-medium.white.pointer&quot;},{&quot;n&quot;:&quot;beforeunload&quot;,&quot;s&quot;:10125,&quot;e&quot;:10125,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;beforeunload&quot;,&quot;s&quot;:10125,&quot;e&quot;:10161,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;unload&quot;,&quot;s&quot;:10655,&quot;e&quot;:10655,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D&amp;rst=10661&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Summary&amp;ptid=81a74d37-0001-bad9-593e-0181d6e9d7e2&amp;st=1657168029784</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/NRJS-2551f7a729197a720f4-2,180" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="a" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">a</stringProp>
                    <stringProp name="Argument.value">527472636</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">1216.487a282</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="to" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">to</stringProp>
                    <stringProp name="Argument.value">YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="rst" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">rst</stringProp>
                    <stringProp name="Argument.value">1371</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ck" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ck</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Account</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ap" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ap</stringProp>
                    <stringProp name="Argument.value">296</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="be" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">be</stringProp>
                    <stringProp name="Argument.value">537</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fe" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fe</stringProp>
                    <stringProp name="Argument.value">1288</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dc" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">dc</stringProp>
                    <stringProp name="Argument.value">1092</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="af" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">af</stringProp>
                    <stringProp name="Argument.value">err,xhr,stn,ins,spa</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="perf" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">perf</stringProp>
                    <stringProp name="Argument.value">%7B%22timing%22:%7B%22of%22:1657168039945,%22n%22:0,%22u%22:504,%22ue%22:505,%22f%22:3,%22dn%22:3,%22dne%22:3,%22c%22:3,%22ce%22:3,%22rq%22:6,%22rp%22:484,%22rpe%22:485,%22dl%22:508,%22di%22:1092,%22ds%22:1092,%22de%22:1098,%22dc%22:1288,%22l%22:1288,%22le%22:1298%7D,%22navigation%22:%7B%7D%7D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fp</stringProp>
                    <stringProp name="Argument.value">966</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fcp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fcp</stringProp>
                    <stringProp name="Argument.value">966</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="jsonp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">jsonp</stringProp>
                    <stringProp name="Argument.value">NREUM.setToken</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/1/NRJS-2551f7a729197a720f4</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/domainreliability/upload-2,182" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;SPDY&quot;,&quot;request_age_ms&quot;:60649,&quot;request_elapsed_ms&quot;:531,&quot;sample_rate&quot;:0.05,&quot;server_ip&quot;:&quot;142.250.183.35:443&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;url&quot;:&quot;https://www.gstatic.com/&quot;,&quot;was_proxied&quot;:false}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">beacons.gcp.gvt2.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D&amp;rst=2349&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Account&amp;st=1657168039945-2,181" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;res&quot;:[{&quot;n&quot;:&quot;navigationStart&quot;,&quot;s&quot;:0,&quot;e&quot;:0,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;unloadEventStart&quot;,&quot;s&quot;:504,&quot;e&quot;:504,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;unloadEventEnd&quot;,&quot;s&quot;:505,&quot;e&quot;:505,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;fetchStart&quot;,&quot;s&quot;:3,&quot;e&quot;:3,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domainLookupStart&quot;,&quot;s&quot;:3,&quot;e&quot;:3,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domainLookupEnd&quot;,&quot;s&quot;:3,&quot;e&quot;:3,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;connectStart&quot;,&quot;s&quot;:3,&quot;e&quot;:3,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;connectEnd&quot;,&quot;s&quot;:3,&quot;e&quot;:3,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;requestStart&quot;,&quot;s&quot;:6,&quot;e&quot;:6,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;responseStart&quot;,&quot;s&quot;:484,&quot;e&quot;:484,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;responseEnd&quot;,&quot;s&quot;:485,&quot;e&quot;:485,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domLoading&quot;,&quot;s&quot;:508,&quot;e&quot;:508,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domInteractive&quot;,&quot;s&quot;:1092,&quot;e&quot;:1092,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domContentLoadedEventStart&quot;,&quot;s&quot;:1092,&quot;e&quot;:1092,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domContentLoadedEventEnd&quot;,&quot;s&quot;:1098,&quot;e&quot;:1098,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domComplete&quot;,&quot;s&quot;:1288,&quot;e&quot;:1288,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;loadEventStart&quot;,&quot;s&quot;:1288,&quot;e&quot;:1288,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;loadEventEnd&quot;,&quot;s&quot;:1298,&quot;e&quot;:1298,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D&amp;rst=2349&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Account&amp;st=1657168039945</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D&amp;rst=2402&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Account-2,183" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">bel.7;1,3,,11p,108,4q,&apos;initialPageLoad,&apos;http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Account,1,1,,,,88,!!&apos;2d5f5da3-fd6d-4995-b632-a8884277d5b1,&apos;1,qu,qu;2,,jx,6y,2,3,&apos;GET,5k,&apos;sbilifeload.crmnext.com:80,&apos;/snload7/app/CRMNextCache/CustomNavigation,,cop,,&apos;3,&apos;d989fe4df5d87a42,&apos;22413a106fdd3b23d63cb7a77a0aebce,l5aj2bpx;2,,u1,59,12,2,4,5k,5,&apos;/snload7/app/CRMNextObject/GetPushByDevice,,1n,1,&apos;9,&apos;918ad63a3b6a314e,&apos;880ea811540eaf70431fd0d5de10e3f1,l5aj2c02;2,,t4,6b,2a,1c,&apos;POST,5k,5,&apos;/snload7/app/DomainLookup/LoadList,cp,67a,1,&apos;8,&apos;4bf15f7001fba7a0,&apos;3da0b9b174af37aa66391ccb5d6f5548,l5aj2bz4;b,e0,!1,!-dy,,,,!,3,da,1,n,g8,,6,5a,,a</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D&amp;rst=2402&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Account</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/nel/-2,184" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;SPDY&quot;,&quot;request_age_ms&quot;:60649,&quot;request_elapsed_ms&quot;:531,&quot;sample_rate&quot;:0.05,&quot;server_ip&quot;:&quot;142.250.183.35:443&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;url&quot;:&quot;https://www.gstatic.com/&quot;,&quot;was_proxied&quot;:false}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">e2c27.gcp.gvt2.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/nel/</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${constantTimer}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="BA_04_Click_on_new_customer" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/crmnextobject/new/Account-2,185" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="x" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x</stringProp>
                    <stringProp name="Argument.value">${Csrf_2185}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="mdi" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">mdi</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/crmnextobject/new/Account</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Account</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Csrf_2186" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Csrf_2186</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">GetEditableFormMetaData?x=</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">NF_2186</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Csrf_2190" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Csrf_2190</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">LoadTopNavContent(&apos;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&apos;,</stringProp>
                <stringProp name="BoundaryExtractor.default">NF_2190</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/FormApi/GetEditableFormMetaData-2,186" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="x" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x</stringProp>
                    <stringProp name="Argument.value">${Csrf_2186}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/FormApi/GetEditableFormMetaData</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account?x=wmlptkyqwxpv4bxdnz3cm5b2aejn7wunaedzuy8xr6qmwqya5f8yuf6mqd7bh9zn3vhf6q836akxa&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-89421653">Key Information</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/domainreliability/upload-2,192" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;SPDY&quot;,&quot;request_age_ms&quot;:68939,&quot;request_elapsed_ms&quot;:531,&quot;sample_rate&quot;:0.05,&quot;server_ip&quot;:&quot;142.250.183.35:443&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;url&quot;:&quot;https://www.gstatic.com/&quot;,&quot;was_proxied&quot;:false}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">beacons.gvt2.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/domainreliability/upload-2,191" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;SPDY&quot;,&quot;request_age_ms&quot;:62731,&quot;request_elapsed_ms&quot;:617,&quot;sample_rate&quot;:0.05,&quot;server_ip&quot;:&quot;142.250.192.46:443&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;url&quot;:&quot;https://play.google.com/&quot;,&quot;was_proxied&quot;:false}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CRMNextCache/CustomNavigation-2,190" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="x" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x</stringProp>
                    <stringProp name="Argument.value">${Csrf_2190}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/CRMNextCache/CustomNavigation</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account?x=wmlptkyqwxpv4bxdnz3cm5b2aejn7wunaedzuy8xr6qmwqya5f8yuf6mqd7bh9zn3vhf6q836akxa&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiOWNhMzAxNmQ1M2UxOGRiYyIsInRyIjoiNTgwMmUwYjk1YjU1OGZmNWQ0MzhjNzU0N2QxOWQ2NjMiLCJ0aSI6MTY1NzE2ODA1MDg4MH19</stringProp>
                  </elementProp>
                  <elementProp name="X-NewRelic-ID" elementType="Header">
                    <stringProp name="Header.name">X-NewRelic-ID</stringProp>
                    <stringProp name="Header.value">VwUAWFZUDBAFVlZWAAMBVVI=</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-9ca3016d53e18dbc----1657168050880</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-5802e0b95b558ff5d438c7547d19d663-9ca3016d53e18dbc-01</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/jserrors/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D&amp;rst=10634&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Account&amp;ptid=f9322f94-0001-b343-1775-0181d6e9f929-2,188" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;sm&quot;:[{&quot;params&quot;:{&quot;name&quot;:&quot;Framework/React/Detected&quot;},&quot;stats&quot;:{&quot;c&quot;:1}},{&quot;params&quot;:{&quot;name&quot;:&quot;Framework/Jquery/Detected&quot;},&quot;stats&quot;:{&quot;c&quot;:1}},{&quot;params&quot;:{&quot;name&quot;:&quot;Ajax/Events/Excluded/Agent&quot;},&quot;stats&quot;:{&quot;c&quot;:2}}],&quot;xhr&quot;:[{&quot;params&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/CRMNextCache/CustomNavigation&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;rxSize&quot;:{&quot;t&quot;:16441},&quot;duration&quot;:{&quot;t&quot;:252},&quot;cbTime&quot;:{&quot;t&quot;:2},&quot;time&quot;:{&quot;t&quot;:717}}},{&quot;params&quot;:{&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/CRMNextObject/GetPushByDevice&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:0},&quot;rxSize&quot;:{&quot;t&quot;:59},&quot;duration&quot;:{&quot;t&quot;:189},&quot;time&quot;:{&quot;t&quot;:1081}}},{&quot;params&quot;:{&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/DomainLookup/LoadList&quot;,&quot;method&quot;:&quot;POST&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:457},&quot;rxSize&quot;:{&quot;t&quot;:8038},&quot;duration&quot;:{&quot;t&quot;:227},&quot;time&quot;:{&quot;t&quot;:1048}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;bam.nr-data.net&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;bam.nr-data.net:443&quot;,&quot;pathname&quot;:&quot;/resources/1/NRJS-2551f7a729197a720f4&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:1203},&quot;rxSize&quot;:{&quot;t&quot;:36},&quot;duration&quot;:{&quot;t&quot;:685},&quot;cbTime&quot;:{&quot;t&quot;:0},&quot;time&quot;:{&quot;t&quot;:2351}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;bam.nr-data.net&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;bam.nr-data.net:443&quot;,&quot;pathname&quot;:&quot;/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:640},&quot;rxSize&quot;:{&quot;t&quot;:24},&quot;duration&quot;:{&quot;t&quot;:874},&quot;cbTime&quot;:{&quot;t&quot;:0},&quot;time&quot;:{&quot;t&quot;:2402}}}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/jserrors/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D&amp;rst=10634&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Account&amp;ptid=f9322f94-0001-b343-1775-0181d6e9f929</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CRMNextObject/GetPushByDevice-2,193" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/CRMNextObject/GetPushByDevice</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account?x=wmlptkyqwxpv4bxdnz3cm5b2aejn7wunaedzuy8xr6qmwqya5f8yuf6mqd7bh9zn3vhf6q836akxa&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-77a25d26c73e12b2----1657168051375</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-7b55018bda06829229fdef463ab870a3-77a25d26c73e12b2-01</stringProp>
                  </elementProp>
                  <elementProp name="x-requested-with" elementType="Header">
                    <stringProp name="Header.name">x-requested-with</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiNzdhMjVkMjZjNzNlMTJiMiIsInRyIjoiN2I1NTAxOGJkYTA2ODI5MjI5ZmRlZjQ2M2FiODcwYTMiLCJ0aSI6MTY1NzE2ODA1MTM3NX19</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D&amp;rst=10632&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Account&amp;ptid=f9322f94-0001-b343-1775-0181d6e9f929-2,187" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">bel.6;e,&apos;fp,qu,1;6,&apos;cls,0.;e,&apos;fcp,qu,1;6,1,0.;e,&apos;load,zs,1;6,1,0.12499200558030645;e,&apos;fi,3vu,6;5,&apos;type,&apos;keydown;5,&apos;net-etype,&apos;4g;6,&apos;net-rtt,100.;6,&apos;net-dlink,1.3;6,&apos;fid,1.;6,1,0.13353368020928844;e,&apos;lcp,10u,7;6,&apos;size,3924.;5,&apos;eid;5,7,8;6,9,100.;6,a,1.3;5,&apos;elTag,&apos;SPAN;6,1,0.1251055621690218;e,&apos;pageHide,41x,1;6,1,0.13353368020928844;e,&apos;unload,87a,1;6,1,0.13353368020928844</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D&amp;rst=10632&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Account&amp;ptid=f9322f94-0001-b343-1775-0181d6e9f929</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D&amp;rst=10635&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Account&amp;ptid=f9322f94-0001-b343-1775-0181d6e9f929&amp;st=1657168039945-2,189" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;res&quot;:[{&quot;n&quot;:&quot;link&quot;,&quot;s&quot;:513,&quot;e&quot;:513,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/theme/theme18/root.css&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:513,&quot;e&quot;:513,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:513,&quot;e&quot;:513,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/tab.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:513,&quot;e&quot;:513,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery-migrate.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:513,&quot;e&quot;:513,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/json2.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:513,&quot;e&quot;:513,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/modernizr.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:513,&quot;e&quot;:513,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery-ui.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:513,&quot;e&quot;:513,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery.dialogextend.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:514,&quot;e&quot;:514,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/sha/sha-all.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:514,&quot;e&quot;:514,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/sha/shainitialization.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:514,&quot;e&quot;:514,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/CryptoJS.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:514,&quot;e&quot;:514,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/encodedecode.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:514,&quot;e&quot;:514,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/moment.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:514,&quot;e&quot;:514,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/React/react.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:514,&quot;e&quot;:514,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/React/react-dom.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:514,&quot;e&quot;:514,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/React/create-react-class.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:514,&quot;e&quot;:514,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery.slimscroll.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:514,&quot;e&quot;:514,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/prettify.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:514,&quot;e&quot;:514,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery.webui-popover.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:515,&quot;e&quot;:515,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery.showLoading.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:515,&quot;e&quot;:515,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/logouthelper.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:515,&quot;e&quot;:515,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/browserdetection.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:515,&quot;e&quot;:515,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/popupopenerhelper.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:515,&quot;e&quot;:515,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/commonhelper.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:515,&quot;e&quot;:515,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/automation.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:515,&quot;e&quot;:515,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/newobjectlayoutmenu.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:515,&quot;e&quot;:515,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnextinit.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:515,&quot;e&quot;:515,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/timeouthelper.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:516,&quot;e&quot;:516,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/bubble.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:516,&quot;e&quot;:516,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/core.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:516,&quot;e&quot;:516,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/charts.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:516,&quot;e&quot;:516,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/amcharts.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:516,&quot;e&quot;:516,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/amcharts3-react.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:516,&quot;e&quot;:516,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/pie.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:516,&quot;e&quot;:516,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/serial.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:516,&quot;e&quot;:516,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/funnel.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:516,&quot;e&quot;:516,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/gauge.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:517,&quot;e&quot;:517,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/gantt.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:517,&quot;e&quot;:517,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/baseframe.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:517,&quot;e&quot;:517,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/nav.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:517,&quot;e&quot;:517,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/controls/navigation_tab.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:518,&quot;e&quot;:518,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/searchcontrol.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:518,&quot;e&quot;:518,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/ReactComponents/QuickLinkTemplate.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:518,&quot;e&quot;:518,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/sidebarcontrol.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:518,&quot;e&quot;:518,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/MOCTreeHierarchy/MOCTreeHierarchy.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:518,&quot;e&quot;:518,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/ReactComponents/moctreehierarchy/MOCTreeAddItemComponent.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:518,&quot;e&quot;:518,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/rptmap.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:519,&quot;e&quot;:519,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/externalcommon.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:519,&quot;e&quot;:519,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/twitter.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:519,&quot;e&quot;:519,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/facebook.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:519,&quot;e&quot;:519,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/linkedin.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:519,&quot;e&quot;:519,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/googleplus.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:519,&quot;e&quot;:519,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/webrupee.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:519,&quot;e&quot;:519,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/controls/crmnext_notifications.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:519,&quot;e&quot;:519,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/signalR/jquery.signalR-2.2.0.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:520,&quot;e&quot;:520,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/ckeditor/ckeditor.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:520,&quot;e&quot;:520,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/controls/crmnext_controls.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:520,&quot;e&quot;:520,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/proptypesextensions.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:520,&quot;e&quot;:520,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/ui_controls/crmnext.uicontrols.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:1288,&quot;e&quot;:1290,&quot;o&quot;:&quot;https://js-agent.newrelic.com:443/nr-spa-1216.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:1371,&quot;e&quot;:2337,&quot;o&quot;:&quot;https://bam.nr-data.net:443/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:521,&quot;e&quot;:521,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/img/crmlogo.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:1053,&quot;e&quot;:1053,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/img/scss/image/crmlogo.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:1073,&quot;e&quot;:1073,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/media/ObjectImage&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:574,&quot;e&quot;:574,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-116-300-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:574,&quot;e&quot;:574,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-300-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:580,&quot;e&quot;:580,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-117-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:581,&quot;e&quot;:581,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-118-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:581,&quot;e&quot;:581,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:586,&quot;e&quot;:586,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-500-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:592,&quot;e&quot;:592,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-700-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:723,&quot;e&quot;:723,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/icon-font/desktop/theme/fontello.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:1099,&quot;e&quot;:1099,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/imgcss/down-arrow.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:716,&quot;e&quot;:716,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:967,&quot;e&quot;:967,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:967,&quot;e&quot;:967,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:967,&quot;e&quot;:967,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2351,&quot;e&quot;:2351,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2402,&quot;e&quot;:2402,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3035,&quot;e&quot;:3035,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3035,&quot;e&quot;:3035,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3035,&quot;e&quot;:3035,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3275,&quot;e&quot;:3275,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3275,&quot;e&quot;:3275,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:3275,&quot;e&quot;:3276,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:967,&quot;e&quot;:967,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:3035,&quot;e&quot;:3035,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:3275,&quot;e&quot;:3275,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:967,&quot;e&quot;:968,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:968,&quot;e&quot;:969,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:969,&quot;e&quot;:969,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:1118,&quot;e&quot;:1120,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:1120,&quot;e&quot;:1120,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:1120,&quot;e&quot;:1121,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:1288,&quot;e&quot;:1288,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3036,&quot;e&quot;:3036,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3036,&quot;e&quot;:3036,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3036,&quot;e&quot;:3036,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3276,&quot;e&quot;:3276,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3276,&quot;e&quot;:3276,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:3276,&quot;e&quot;:3276,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:717,&quot;e&quot;:719,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:2352,&quot;e&quot;:3034,&quot;o&quot;:&quot;https://bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:2402,&quot;e&quot;:3274,&quot;o&quot;:&quot;https://bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1026,&quot;e&quot;:1026,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1026,&quot;e&quot;:1027,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1027,&quot;e&quot;:1029,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1046,&quot;e&quot;:1046,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1046,&quot;e&quot;:1047,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1047,&quot;e&quot;:1048,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1080,&quot;e&quot;:1080,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1080,&quot;e&quot;:1080,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1081,&quot;e&quot;:1082,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1083,&quot;e&quot;:1083,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1083,&quot;e&quot;:1083,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1083,&quot;e&quot;:1083,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1091,&quot;e&quot;:1091,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1091,&quot;e&quot;:1091,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1091,&quot;e&quot;:1092,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1098,&quot;e&quot;:1098,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1098,&quot;e&quot;:1098,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1098,&quot;e&quot;:1098,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1192,&quot;e&quot;:1192,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1193,&quot;e&quot;:1194,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1195,&quot;e&quot;:1217,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1265,&quot;e&quot;:1265,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1265,&quot;e&quot;:1265,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1265,&quot;e&quot;:1265,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1286,&quot;e&quot;:1286,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1287,&quot;e&quot;:1287,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1287,&quot;e&quot;:1288,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1308,&quot;e&quot;:1308,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1308,&quot;e&quot;:1308,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1308,&quot;e&quot;:1308,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1355,&quot;e&quot;:1355,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1356,&quot;e&quot;:1356,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1356,&quot;e&quot;:1357,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10220,&quot;e&quot;:10220,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10220,&quot;e&quot;:10220,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10221,&quot;e&quot;:10221,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;DOMContentLoaded&quot;,&quot;s&quot;:1092,&quot;e&quot;:1093,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;DOMContentLoaded&quot;,&quot;s&quot;:1093,&quot;e&quot;:1093,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;DOMContentLoaded&quot;,&quot;s&quot;:1093,&quot;e&quot;:1097,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;DOMContentLoaded&quot;,&quot;s&quot;:1097,&quot;e&quot;:1098,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1121,&quot;e&quot;:1122,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1122,&quot;e&quot;:1122,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1122,&quot;e&quot;:1122,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1122,&quot;e&quot;:1122,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1122,&quot;e&quot;:1122,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1122,&quot;e&quot;:1217,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1228,&quot;e&quot;:1228,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1228,&quot;e&quot;:1265,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1265,&quot;e&quot;:1266,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1266,&quot;e&quot;:1268,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1268,&quot;e&quot;:1268,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1268,&quot;e&quot;:1268,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1268,&quot;e&quot;:1269,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1270,&quot;e&quot;:1270,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1270,&quot;e&quot;:1270,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1270,&quot;e&quot;:1270,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1270,&quot;e&quot;:1270,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1270,&quot;e&quot;:1270,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1272,&quot;e&quot;:1272,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1272,&quot;e&quot;:1274,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1275,&quot;e&quot;:1275,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1275,&quot;e&quot;:1275,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1275,&quot;e&quot;:1275,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1288,&quot;e&quot;:1288,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1288,&quot;e&quot;:1288,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1304,&quot;e&quot;:1304,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1304,&quot;e&quot;:1304,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1374,&quot;e&quot;:1374,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:2389,&quot;e&quot;:2390,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:2400,&quot;e&quot;:2403,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:3292,&quot;e&quot;:3296,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:3297,&quot;e&quot;:3297,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:5037,&quot;e&quot;:5037,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;fetch&quot;,&quot;s&quot;:1047,&quot;e&quot;:1107,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/DomainLookup/LoadList&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;fetch&quot;,&quot;s&quot;:1081,&quot;e&quot;:1179,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/CRMNextObject/GetPushByDevice&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:717,&quot;e&quot;:969,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:1081,&quot;e&quot;:1270,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextObject/GetPushByDevice&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:1048,&quot;e&quot;:1275,&quot;o&quot;:&quot;200 POST: sbilifeload.crmnext.com:80/snload7/app/DomainLookup/LoadList&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:2351,&quot;e&quot;:3036,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:2402,&quot;e&quot;:3276,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;fp&quot;,&quot;s&quot;:966,&quot;e&quot;:966,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;fcp&quot;,&quot;s&quot;:966,&quot;e&quot;:966,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;requestAnimationFrame&quot;,&quot;s&quot;:3296,&quot;e&quot;:3296,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;requestAnimationFrame&quot;},{&quot;n&quot;:&quot;requestAnimationFrame&quot;,&quot;s&quot;:3309,&quot;e&quot;:3310,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;requestAnimationFrame&quot;},{&quot;n&quot;:&quot;requestAnimationFrame&quot;,&quot;s&quot;:3326,&quot;e&quot;:3326,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;requestAnimationFrame&quot;},{&quot;n&quot;:&quot;requestAnimationFrame&quot;,&quot;s&quot;:3343,&quot;e&quot;:3343,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;requestAnimationFrame&quot;},{&quot;n&quot;:&quot;requestAnimationFrame&quot;,&quot;s&quot;:3359,&quot;e&quot;:3360,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;requestAnimationFrame&quot;},{&quot;n&quot;:&quot;requestAnimationFrame&quot;,&quot;s&quot;:3376,&quot;e&quot;:3376,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;requestAnimationFrame&quot;},{&quot;n&quot;:&quot;requestAnimationFrame&quot;,&quot;s&quot;:3393,&quot;e&quot;:3393,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;requestAnimationFrame&quot;},{&quot;n&quot;:&quot;requestAnimationFrame&quot;,&quot;s&quot;:3409,&quot;e&quot;:3410,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;requestAnimationFrame&quot;},{&quot;n&quot;:&quot;requestAnimationFrame&quot;,&quot;s&quot;:3426,&quot;e&quot;:3426,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;requestAnimationFrame&quot;},{&quot;n&quot;:&quot;fi&quot;,&quot;s&quot;:5034,&quot;e&quot;:5034,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;fid&quot;,&quot;s&quot;:5034,&quot;e&quot;:5035,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:5035,&quot;e&quot;:5036,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;body.bg-light-gray&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:8404,&quot;e&quot;:8413,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;body.bg-light-gray&quot;},{&quot;n&quot;:&quot;lcp&quot;,&quot;s&quot;:1326,&quot;e&quot;:1326,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;pageHide&quot;,&quot;s&quot;:5253,&quot;e&quot;:5253,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:8676,&quot;e&quot;:8684,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:10459,&quot;e&quot;:10609,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:8692,&quot;e&quot;:8709,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.acd-card-row-pv.acd-card-row-ph&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:8725,&quot;e&quot;:8726,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.acid-header-cell-content&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:8742,&quot;e&quot;:10376,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.page-header&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:8760,&quot;e&quot;:9376,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.page-title-heading&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:8909,&quot;e&quot;:9394,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.breadcrums.flex.items-center.pt-2&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:8943,&quot;e&quot;:9059,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.crm-card-header.ht-3.flex.items-center.ph-16.bb.b--light-gray.max--wt-100&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:8976,&quot;e&quot;:9038,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.card-header--title.flex-1.ff-bold.f13.primary.ttc.flex.items-center.max--wt-100&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:10392,&quot;e&quot;:10394,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.card-header--title.flex-1.ff-bold.f13.primary.ttc.flex.items-center.max--wt-100&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:9409,&quot;e&quot;:10358,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.buttons-group.flex.bg-white.br4.ht40.page-header__item.items-center.pb-2&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:9609,&quot;e&quot;:9610,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.page-title-row.relative&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:9726,&quot;e&quot;:10340,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.f12.primary.ff-medium.ph-6.acd-link-text.pointer&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:10409,&quot;e&quot;:10628,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;a.flex.flex-1.items-center.pv-10.ph-16.relative.f12.bb.b--light-gray.ff-medium.underline-hover.link&quot;},{&quot;n&quot;:&quot;focus&quot;,&quot;s&quot;:10112,&quot;e&quot;:10113,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;a.ph-12.acd-link.f12.primary.ph-6.acd-link-text.flex.items-center&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:10221,&quot;e&quot;:10221,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.f12.primary.ff-medium.ph-6.acd-link-text.pointer&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:10221,&quot;e&quot;:10221,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.f12.primary.ff-medium.ph-6.acd-link-text.pointer&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:10221,&quot;e&quot;:10266,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.f12.primary.ff-medium.ph-6.acd-link-text.pointer&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:10266,&quot;e&quot;:10269,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.f12.primary.ff-medium.ph-6.acd-link-text.pointer&quot;},{&quot;n&quot;:&quot;beforeunload&quot;,&quot;s&quot;:10265,&quot;e&quot;:10265,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;beforeunload&quot;,&quot;s&quot;:10265,&quot;e&quot;:10265,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;react-click&quot;,&quot;s&quot;:10222,&quot;e&quot;:10265,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;unload&quot;,&quot;s&quot;:10630,&quot;e&quot;:10630,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3FaCAQ%3D&amp;rst=10635&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/CRMNextObject/Home/Account&amp;ptid=f9322f94-0001-b343-1775-0181d6e9f929&amp;st=1657168039945</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/NRJS-2551f7a729197a720f4-2,194" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="a" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">a</stringProp>
                    <stringProp name="Argument.value">527472636</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">1216.487a282</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="to" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">to</stringProp>
                    <stringProp name="Argument.value">YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="rst" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">rst</stringProp>
                    <stringProp name="Argument.value">1267</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ck" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ck</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="qt" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">qt</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ap" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ap</stringProp>
                    <stringProp name="Argument.value">157</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="be" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">be</stringProp>
                    <stringProp name="Argument.value">406</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fe" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fe</stringProp>
                    <stringProp name="Argument.value">1211</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dc" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">dc</stringProp>
                    <stringProp name="Argument.value">1182</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="af" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">af</stringProp>
                    <stringProp name="Argument.value">err,xhr,stn,ins,spa</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="perf" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">perf</stringProp>
                    <stringProp name="Argument.value">%7B%22timing%22:%7B%22of%22:1657168050209,%22n%22:0,%22u%22:374,%22ue%22:374,%22f%22:3,%22dn%22:3,%22dne%22:3,%22c%22:3,%22ce%22:3,%22rq%22:5,%22rp%22:354,%22rpe%22:356,%22dl%22:378,%22di%22:1183,%22ds%22:1183,%22de%22:1192,%22dc%22:1211,%22l%22:1211,%22le%22:1232%7D,%22navigation%22:%7B%7D%7D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fp</stringProp>
                    <stringProp name="Argument.value">959</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="fcp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fcp</stringProp>
                    <stringProp name="Argument.value">959</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="jsonp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">jsonp</stringProp>
                    <stringProp name="Argument.value">NREUM.setToken</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/1/NRJS-2551f7a729197a720f4</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=2075&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account-2,196" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">bel.7;1,2,,11d,zc,1u,&apos;initialPageLoad,&apos;http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account,1,1,,,1,4d,!!&apos;6f44f08e-0269-46b3-87a7-056ffeb3e8e5,&apos;1,qn,qn;2,,in,hg,17,t,&apos;GET,5k,&apos;sbilifeload.crmnext.com:80,&apos;/snload7/app/CRMNextCache/CustomNavigation,,cop,,&apos;3,&apos;9ca3016d53e18dbc,&apos;5802e0b95b558ff5d438c7547d19d663,l5aj2jls;2,,wf,4v,3,4,4,5k,5,&apos;/snload7/app/CRMNextObject/GetPushByDevice,,1n,1,&apos;8,&apos;77a25d26c73e12b2,&apos;7b55018bda06829229fdef463ab870a3,l5aj2jzj;b,ae,!,!-ab,,,,!,2,9p,2,m,md,,9,j,,l</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=2075&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=2038&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account&amp;st=1657168050209-2,195" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;res&quot;:[{&quot;n&quot;:&quot;navigationStart&quot;,&quot;s&quot;:0,&quot;e&quot;:0,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;unloadEventStart&quot;,&quot;s&quot;:374,&quot;e&quot;:374,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;unloadEventEnd&quot;,&quot;s&quot;:374,&quot;e&quot;:374,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;fetchStart&quot;,&quot;s&quot;:3,&quot;e&quot;:3,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domainLookupStart&quot;,&quot;s&quot;:3,&quot;e&quot;:3,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domainLookupEnd&quot;,&quot;s&quot;:3,&quot;e&quot;:3,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;connectStart&quot;,&quot;s&quot;:3,&quot;e&quot;:3,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;connectEnd&quot;,&quot;s&quot;:3,&quot;e&quot;:3,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;requestStart&quot;,&quot;s&quot;:5,&quot;e&quot;:5,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;responseStart&quot;,&quot;s&quot;:354,&quot;e&quot;:354,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;responseEnd&quot;,&quot;s&quot;:356,&quot;e&quot;:356,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domLoading&quot;,&quot;s&quot;:378,&quot;e&quot;:378,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domInteractive&quot;,&quot;s&quot;:1183,&quot;e&quot;:1183,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domContentLoadedEventStart&quot;,&quot;s&quot;:1183,&quot;e&quot;:1183,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domContentLoadedEventEnd&quot;,&quot;s&quot;:1192,&quot;e&quot;:1192,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domComplete&quot;,&quot;s&quot;:1211,&quot;e&quot;:1211,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;loadEventStart&quot;,&quot;s&quot;:1211,&quot;e&quot;:1211,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;loadEventEnd&quot;,&quot;s&quot;:1232,&quot;e&quot;:1232,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=2038&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account&amp;st=1657168050209</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=11271&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account&amp;ptid=912f90f8-0001-bb10-21f9-0181d6ea20bd-2,197" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">bel.6;e,&apos;load,xn,1;6,&apos;cls,0.6720719051148999;e,&apos;fp,qn,1;6,1,0.6720719051148999;e,&apos;fcp,qn,1;6,1,0.6720719051148999;e,&apos;fi,1xd,6;5,&apos;type,&apos;keydown;5,&apos;net-etype,&apos;4g;6,&apos;net-rtt,100.;6,&apos;net-dlink,1.3;6,&apos;fid,1.;6,1,0.6792068628106072;e,&apos;lcp,r4,8;6,&apos;size,3900.;5,&apos;eid,&apos;style-switcher;5,7,8;6,9,100.;6,a,1.3;5,&apos;elUrl,&apos;http://sbilifeload.crmnext.com/SNLOAD7/app/assets_102319_1/img/crmlogo.png;5,&apos;elTag,&apos;IMG;6,1,0.6720719051148999;e,&apos;pageHide,22u,1;6,1,0.6792068628106072</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=11271&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account&amp;ptid=912f90f8-0001-bb10-21f9-0181d6ea20bd</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=12919&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account&amp;ptid=912f90f8-0001-bb10-21f9-0181d6ea20bd&amp;st=1657168050209-2,198" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;res&quot;:[{&quot;n&quot;:&quot;link&quot;,&quot;s&quot;:382,&quot;e&quot;:382,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/theme/theme18/root.css&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:382,&quot;e&quot;:382,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:383,&quot;e&quot;:383,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/tab.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:383,&quot;e&quot;:383,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery-migrate.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:383,&quot;e&quot;:383,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/json2.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:383,&quot;e&quot;:383,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/modernizr.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:383,&quot;e&quot;:383,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery-ui.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:383,&quot;e&quot;:383,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery.dialogextend.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:383,&quot;e&quot;:383,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/sha/sha-all.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:384,&quot;e&quot;:384,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/sha/shainitialization.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:384,&quot;e&quot;:384,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/CryptoJS.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:384,&quot;e&quot;:384,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/encodedecode.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:384,&quot;e&quot;:384,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/moment.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:384,&quot;e&quot;:384,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/React/react.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:384,&quot;e&quot;:384,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/React/react-dom.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:384,&quot;e&quot;:384,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/React/create-react-class.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:384,&quot;e&quot;:384,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery.slimscroll.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:384,&quot;e&quot;:384,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/prettify.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:384,&quot;e&quot;:384,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery.webui-popover.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:384,&quot;e&quot;:384,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery.showLoading.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:384,&quot;e&quot;:384,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/logouthelper.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:385,&quot;e&quot;:385,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/browserdetection.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:385,&quot;e&quot;:385,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/popupopenerhelper.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:385,&quot;e&quot;:385,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/commonhelper.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:385,&quot;e&quot;:385,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/automation.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:386,&quot;e&quot;:386,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/newobjectlayoutmenu.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:386,&quot;e&quot;:386,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnextinit.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:386,&quot;e&quot;:386,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/timeouthelper.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:386,&quot;e&quot;:386,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/bubble.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:386,&quot;e&quot;:386,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/core.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:386,&quot;e&quot;:386,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/charts.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:386,&quot;e&quot;:386,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/amcharts.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:386,&quot;e&quot;:386,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/amcharts3-react.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:386,&quot;e&quot;:386,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/pie.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:387,&quot;e&quot;:387,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/serial.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:387,&quot;e&quot;:387,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/funnel.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:387,&quot;e&quot;:387,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/gauge.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:387,&quot;e&quot;:387,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/gantt.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:387,&quot;e&quot;:387,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/baseframe.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:387,&quot;e&quot;:387,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/nav.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:387,&quot;e&quot;:387,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/controls/navigation_tab.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:387,&quot;e&quot;:387,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/searchcontrol.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:388,&quot;e&quot;:388,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/ReactComponents/QuickLinkTemplate.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:388,&quot;e&quot;:388,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/sidebarcontrol.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:388,&quot;e&quot;:388,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/MOCTreeHierarchy/MOCTreeHierarchy.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:388,&quot;e&quot;:388,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/ReactComponents/moctreehierarchy/MOCTreeAddItemComponent.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:388,&quot;e&quot;:388,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/rptmap.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:388,&quot;e&quot;:388,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/externalcommon.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:389,&quot;e&quot;:389,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/twitter.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:389,&quot;e&quot;:389,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/facebook.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:389,&quot;e&quot;:389,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/linkedin.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:389,&quot;e&quot;:389,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/googleplus.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:390,&quot;e&quot;:390,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/webrupee.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:390,&quot;e&quot;:390,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/controls/crmnext_notifications.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:390,&quot;e&quot;:390,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/signalR/jquery.signalR-2.2.0.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:391,&quot;e&quot;:391,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/ckeditor/ckeditor.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:391,&quot;e&quot;:391,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/controls/crmnext_controls.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:391,&quot;e&quot;:391,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/proptypesextensions.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:392,&quot;e&quot;:392,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/ui_controls/crmnext.uicontrols.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:1211,&quot;e&quot;:1211,&quot;o&quot;:&quot;https://js-agent.newrelic.com:443/nr-spa-1216.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:1268,&quot;e&quot;:2028,&quot;o&quot;:&quot;https://bam.nr-data.net:443/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:392,&quot;e&quot;:392,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/img/crmlogo.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:1145,&quot;e&quot;:1145,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/img/scss/image/crmlogo.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:1159,&quot;e&quot;:1159,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/media/ObjectImage&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:462,&quot;e&quot;:462,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-116-300-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:462,&quot;e&quot;:462,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-300-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:469,&quot;e&quot;:469,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-117-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:470,&quot;e&quot;:470,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-118-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:470,&quot;e&quot;:470,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:481,&quot;e&quot;:481,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-500-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:488,&quot;e&quot;:488,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-700-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:696,&quot;e&quot;:696,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/icon-font/desktop/theme/fontello.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:1092,&quot;e&quot;:1092,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/imgcss/down-arrow.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:669,&quot;e&quot;:670,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:1298,&quot;e&quot;:1298,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:1298,&quot;e&quot;:1298,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:1299,&quot;e&quot;:1299,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2039,&quot;e&quot;:2039,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2075,&quot;e&quot;:2075,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2894,&quot;e&quot;:2894,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2894,&quot;e&quot;:2894,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2895,&quot;e&quot;:2896,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2915,&quot;e&quot;:2915,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2915,&quot;e&quot;:2916,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2917,&quot;e&quot;:2917,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:11272,&quot;e&quot;:11272,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:12268,&quot;e&quot;:12268,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:12269,&quot;e&quot;:12269,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:12269,&quot;e&quot;:12269,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1085,&quot;e&quot;:1085,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1086,&quot;e&quot;:1087,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1087,&quot;e&quot;:1123,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1140,&quot;e&quot;:1140,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1140,&quot;e&quot;:1140,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1140,&quot;e&quot;:1141,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1165,&quot;e&quot;:1165,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1165,&quot;e&quot;:1165,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1165,&quot;e&quot;:1168,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1169,&quot;e&quot;:1169,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1169,&quot;e&quot;:1169,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1169,&quot;e&quot;:1169,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1181,&quot;e&quot;:1181,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1181,&quot;e&quot;:1181,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1181,&quot;e&quot;:1181,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1191,&quot;e&quot;:1191,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1191,&quot;e&quot;:1191,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1191,&quot;e&quot;:1191,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1334,&quot;e&quot;:1334,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1334,&quot;e&quot;:1334,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1335,&quot;e&quot;:1335,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1344,&quot;e&quot;:1344,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1345,&quot;e&quot;:1345,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1345,&quot;e&quot;:1345,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:7498,&quot;e&quot;:7498,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:7498,&quot;e&quot;:7498,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:7498,&quot;e&quot;:7499,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:8681,&quot;e&quot;:8681,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:8681,&quot;e&quot;:8681,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:8681,&quot;e&quot;:8714,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:8724,&quot;e&quot;:8724,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:8724,&quot;e&quot;:8724,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:8724,&quot;e&quot;:8724,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:8732,&quot;e&quot;:8732,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:8732,&quot;e&quot;:8732,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:8733,&quot;e&quot;:8733,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:8968,&quot;e&quot;:8968,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:8968,&quot;e&quot;:8968,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:8969,&quot;e&quot;:8969,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:8977,&quot;e&quot;:8977,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:8977,&quot;e&quot;:8977,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:8977,&quot;e&quot;:8977,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:8984,&quot;e&quot;:8984,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:8984,&quot;e&quot;:8984,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:8984,&quot;e&quot;:8984,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:9212,&quot;e&quot;:9212,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:9212,&quot;e&quot;:9213,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:9213,&quot;e&quot;:9213,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:9221,&quot;e&quot;:9221,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:9221,&quot;e&quot;:9221,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:9221,&quot;e&quot;:9221,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:9232,&quot;e&quot;:9232,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:9232,&quot;e&quot;:9232,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:9232,&quot;e&quot;:9232,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:9445,&quot;e&quot;:9445,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:9445,&quot;e&quot;:9445,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:9446,&quot;e&quot;:9446,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:9468,&quot;e&quot;:9468,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:9468,&quot;e&quot;:9468,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:9468,&quot;e&quot;:9468,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:9479,&quot;e&quot;:9479,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:9479,&quot;e&quot;:9479,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:9479,&quot;e&quot;:9479,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10297,&quot;e&quot;:10297,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10297,&quot;e&quot;:10297,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10297,&quot;e&quot;:10297,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10304,&quot;e&quot;:10304,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10304,&quot;e&quot;:10304,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10305,&quot;e&quot;:10305,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10312,&quot;e&quot;:10312,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10312,&quot;e&quot;:10312,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10312,&quot;e&quot;:10312,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10571,&quot;e&quot;:10571,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10571,&quot;e&quot;:10571,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10571,&quot;e&quot;:10572,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10585,&quot;e&quot;:10585,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10585,&quot;e&quot;:10585,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10585,&quot;e&quot;:10585,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10592,&quot;e&quot;:10592,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10592,&quot;e&quot;:10592,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10592,&quot;e&quot;:10592,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10807,&quot;e&quot;:10807,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10807,&quot;e&quot;:10807,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10808,&quot;e&quot;:10809,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10826,&quot;e&quot;:10826,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10826,&quot;e&quot;:10826,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10826,&quot;e&quot;:10826,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10836,&quot;e&quot;:10836,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10836,&quot;e&quot;:10836,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10836,&quot;e&quot;:10836,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:11044,&quot;e&quot;:11044,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:11044,&quot;e&quot;:11044,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:11045,&quot;e&quot;:11045,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:11051,&quot;e&quot;:11051,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:11051,&quot;e&quot;:11051,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:11051,&quot;e&quot;:11051,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:11057,&quot;e&quot;:11057,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:11057,&quot;e&quot;:11057,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:11057,&quot;e&quot;:11057,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;DOMContentLoaded&quot;,&quot;s&quot;:1182,&quot;e&quot;:1183,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;DOMContentLoaded&quot;,&quot;s&quot;:1183,&quot;e&quot;:1183,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;DOMContentLoaded&quot;,&quot;s&quot;:1184,&quot;e&quot;:1190,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;DOMContentLoaded&quot;,&quot;s&quot;:1190,&quot;e&quot;:1191,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:1207,&quot;e&quot;:1210,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:1210,&quot;e&quot;:1211,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:1211,&quot;e&quot;:1211,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:1299,&quot;e&quot;:1299,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:1299,&quot;e&quot;:1301,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:1301,&quot;e&quot;:1301,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:1211,&quot;e&quot;:1211,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2896,&quot;e&quot;:2896,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2896,&quot;e&quot;:2896,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2896,&quot;e&quot;:2898,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2917,&quot;e&quot;:2917,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2917,&quot;e&quot;:2917,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2917,&quot;e&quot;:2918,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:12269,&quot;e&quot;:12269,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:12269,&quot;e&quot;:12270,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:12270,&quot;e&quot;:12270,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1249,&quot;e&quot;:1250,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1252,&quot;e&quot;:1252,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1252,&quot;e&quot;:1252,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1253,&quot;e&quot;:1254,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1254,&quot;e&quot;:1256,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1256,&quot;e&quot;:1256,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1257,&quot;e&quot;:1257,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1257,&quot;e&quot;:1257,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1258,&quot;e&quot;:1262,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1262,&quot;e&quot;:1262,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1262,&quot;e&quot;:1263,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1263,&quot;e&quot;:1264,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1271,&quot;e&quot;:1271,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1271,&quot;e&quot;:1271,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1271,&quot;e&quot;:1271,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1271,&quot;e&quot;:1271,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1271,&quot;e&quot;:1271,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1271,&quot;e&quot;:1271,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1272,&quot;e&quot;:1272,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1272,&quot;e&quot;:1272,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1272,&quot;e&quot;:1272,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1272,&quot;e&quot;:1272,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1272,&quot;e&quot;:1272,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1272,&quot;e&quot;:1272,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1272,&quot;e&quot;:1273,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1309,&quot;e&quot;:1335,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1342,&quot;e&quot;:1342,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:2066,&quot;e&quot;:2067,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:2074,&quot;e&quot;:2077,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:2504,&quot;e&quot;:2504,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:3604,&quot;e&quot;:3611,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:3611,&quot;e&quot;:3611,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:4605,&quot;e&quot;:4605,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:5605,&quot;e&quot;:5605,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:11268,&quot;e&quot;:11274,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:1299,&quot;e&quot;:1299,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:2894,&quot;e&quot;:2894,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:2916,&quot;e&quot;:2916,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:12269,&quot;e&quot;:12269,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;fetch&quot;,&quot;s&quot;:1166,&quot;e&quot;:1326,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/CRMNextObject/GetPushByDevice&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;fp&quot;,&quot;s&quot;:959,&quot;e&quot;:959,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;fcp&quot;,&quot;s&quot;:959,&quot;e&quot;:959,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:671,&quot;e&quot;:1301,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:1167,&quot;e&quot;:1341,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextObject/GetPushByDevice&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:2076,&quot;e&quot;:2897,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:2039,&quot;e&quot;:2918,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:11272,&quot;e&quot;:12270,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;fi&quot;,&quot;s&quot;:2497,&quot;e&quot;:2497,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;fid&quot;,&quot;s&quot;:2497,&quot;e&quot;:2498,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:2499,&quot;e&quot;:2503,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;body.bg-light-gray&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:6184,&quot;e&quot;:6185,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;body.bg-light-gray&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:8550,&quot;e&quot;:10420,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:10559,&quot;e&quot;:11130,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;lcp&quot;,&quot;s&quot;:976,&quot;e&quot;:976,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;pageHide&quot;,&quot;s&quot;:2694,&quot;e&quot;:2694,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:2075,&quot;e&quot;:2892,&quot;o&quot;:&quot;https://bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:11272,&quot;e&quot;:12267,&quot;o&quot;:&quot;https://bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:6328,&quot;e&quot;:6560,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;ul.crm-card-tab.relative.overflow-auto&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:6576,&quot;e&quot;:6576,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;label.section-heading.f13.primary.ff-medium.flex-1&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:6592,&quot;e&quot;:6593,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.tab__section.justify-between&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:6609,&quot;e&quot;:6962,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.form-element.form-element--labelLeft&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:11943,&quot;e&quot;:12193,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.form-element.form-element--labelLeft&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:6626,&quot;e&quot;:7110,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:11860,&quot;e&quot;:12908,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;react-focus&quot;,&quot;s&quot;:7390,&quot;e&quot;:7390,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;focus&quot;,&quot;s&quot;:7389,&quot;e&quot;:7390,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:7395,&quot;e&quot;:7395,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:8739,&quot;e&quot;:8739,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:8990,&quot;e&quot;:8990,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:9240,&quot;e&quot;:9240,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:9484,&quot;e&quot;:9484,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:10317,&quot;e&quot;:10318,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:10597,&quot;e&quot;:10597,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:10841,&quot;e&quot;:10841,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:11062,&quot;e&quot;:11062,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:7499,&quot;e&quot;:7499,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:7499,&quot;e&quot;:7499,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:7499,&quot;e&quot;:7500,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:7500,&quot;e&quot;:7502,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:8552,&quot;e&quot;:8552,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:8676,&quot;e&quot;:8676,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:8961,&quot;e&quot;:8961,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:9202,&quot;e&quot;:9202,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:9436,&quot;e&quot;:9436,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:9843,&quot;e&quot;:9843,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:10288,&quot;e&quot;:10288,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:10560,&quot;e&quot;:10560,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:10799,&quot;e&quot;:10799,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:11039,&quot;e&quot;:11040,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-change&quot;,&quot;s&quot;:8680,&quot;e&quot;:8680,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-change&quot;,&quot;s&quot;:8967,&quot;e&quot;:8967,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-change&quot;,&quot;s&quot;:9207,&quot;e&quot;:9207,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-change&quot;,&quot;s&quot;:9440,&quot;e&quot;:9441,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-change&quot;,&quot;s&quot;:10294,&quot;e&quot;:10294,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-change&quot;,&quot;s&quot;:10567,&quot;e&quot;:10567,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-change&quot;,&quot;s&quot;:10804,&quot;e&quot;:10804,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-change&quot;,&quot;s&quot;:11044,&quot;e&quot;:11044,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;input&quot;,&quot;s&quot;:8680,&quot;e&quot;:8733,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;input&quot;,&quot;s&quot;:8967,&quot;e&quot;:8985,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;input&quot;,&quot;s&quot;:9206,&quot;e&quot;:9233,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;input&quot;,&quot;s&quot;:9439,&quot;e&quot;:9479,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;input&quot;,&quot;s&quot;:10293,&quot;e&quot;:10312,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;input&quot;,&quot;s&quot;:10565,&quot;e&quot;:10592,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;input&quot;,&quot;s&quot;:10803,&quot;e&quot;:10836,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;input&quot;,&quot;s&quot;:11043,&quot;e&quot;:11057,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=12919&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account&amp;ptid=912f90f8-0001-bb10-21f9-0181d6ea20bd&amp;st=1657168050209</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=22925&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account&amp;ptid=912f90f8-0001-bb10-21f9-0181d6ea20bd&amp;st=1657168050209-2,199" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;res&quot;:[{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:12921,&quot;e&quot;:12921,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:14031,&quot;e&quot;:14031,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:14031,&quot;e&quot;:14031,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:14031,&quot;e&quot;:14031,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:12919,&quot;e&quot;:12922,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:12926,&quot;e&quot;:14592,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:15025,&quot;e&quot;:15403,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:17864,&quot;e&quot;:19833,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:20458,&quot;e&quot;:21914,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:22478,&quot;e&quot;:22773,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:13291,&quot;e&quot;:14023,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;label.form-element__label&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:17991,&quot;e&quot;:17992,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;label.form-element__label&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:19841,&quot;e&quot;:20290,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;label.form-element__label&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:14059,&quot;e&quot;:15060,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.form-element.form-element--labelLeft&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:17909,&quot;e&quot;:18359,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.form-element.form-element--labelLeft&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:19675,&quot;e&quot;:20826,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.form-element.form-element--labelLeft&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:22656,&quot;e&quot;:22823,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.form-element.form-element--labelLeft&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:17975,&quot;e&quot;:17975,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;a.field__item.help-icon&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:20407,&quot;e&quot;:20441,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;a.field__item.help-icon&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:18008,&quot;e&quot;:18017,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;select.selectbox&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:18107,&quot;e&quot;:18342,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.tab__section.justify-between&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:18242,&quot;e&quot;:18325,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;label.section-heading.f13.primary.ff-medium.flex-1&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:20375,&quot;e&quot;:20391,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.field__item.help-icon&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:13160,&quot;e&quot;:13160,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:13231,&quot;e&quot;:13232,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:13246,&quot;e&quot;:13246,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:13260,&quot;e&quot;:13260,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:14800,&quot;e&quot;:14801,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:15252,&quot;e&quot;:15252,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:15528,&quot;e&quot;:15528,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:16475,&quot;e&quot;:16475,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:16824,&quot;e&quot;:16825,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:17021,&quot;e&quot;:17021,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:17186,&quot;e&quot;:17186,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:18964,&quot;e&quot;:18965,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:19069,&quot;e&quot;:19069,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:19572,&quot;e&quot;:19573,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:21395,&quot;e&quot;:21395,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:21584,&quot;e&quot;:21584,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:13594,&quot;e&quot;:15394,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:16255,&quot;e&quot;:17247,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:19216,&quot;e&quot;:19753,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:21450,&quot;e&quot;:22571,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:13595,&quot;e&quot;:13595,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:14001,&quot;e&quot;:14001,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:14891,&quot;e&quot;:14891,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:15229,&quot;e&quot;:15229,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:16256,&quot;e&quot;:16256,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:16446,&quot;e&quot;:16446,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:16804,&quot;e&quot;:16804,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:16972,&quot;e&quot;:16973,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:17161,&quot;e&quot;:17161,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:19217,&quot;e&quot;:19217,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:19550,&quot;e&quot;:19550,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:21450,&quot;e&quot;:21450,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:21581,&quot;e&quot;:21581,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:22407,&quot;e&quot;:22407,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:13634,&quot;e&quot;:13634,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:13634,&quot;e&quot;:13634,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:13634,&quot;e&quot;:13634,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:14873,&quot;e&quot;:14873,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:14873,&quot;e&quot;:14873,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:14874,&quot;e&quot;:14874,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:15233,&quot;e&quot;:15233,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:15233,&quot;e&quot;:15233,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:15233,&quot;e&quot;:15234,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:15240,&quot;e&quot;:15240,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:15240,&quot;e&quot;:15240,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:15241,&quot;e&quot;:15241,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:15246,&quot;e&quot;:15246,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:15246,&quot;e&quot;:15247,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:15247,&quot;e&quot;:15247,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:15610,&quot;e&quot;:15610,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:15611,&quot;e&quot;:15611,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:15611,&quot;e&quot;:15611,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16454,&quot;e&quot;:16454,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16455,&quot;e&quot;:16455,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16455,&quot;e&quot;:16455,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16461,&quot;e&quot;:16461,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16462,&quot;e&quot;:16462,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16462,&quot;e&quot;:16462,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16468,&quot;e&quot;:16468,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16468,&quot;e&quot;:16468,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16468,&quot;e&quot;:16468,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16806,&quot;e&quot;:16806,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16806,&quot;e&quot;:16806,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16806,&quot;e&quot;:16806,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16813,&quot;e&quot;:16813,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16813,&quot;e&quot;:16813,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16813,&quot;e&quot;:16813,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16819,&quot;e&quot;:16819,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16819,&quot;e&quot;:16819,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16819,&quot;e&quot;:16819,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16983,&quot;e&quot;:16983,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16983,&quot;e&quot;:16983,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:16984,&quot;e&quot;:16984,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:17003,&quot;e&quot;:17003,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:17003,&quot;e&quot;:17003,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:17004,&quot;e&quot;:17004,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:17014,&quot;e&quot;:17014,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:17014,&quot;e&quot;:17014,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:17014,&quot;e&quot;:17014,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:17168,&quot;e&quot;:17168,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:17168,&quot;e&quot;:17168,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:17168,&quot;e&quot;:17168,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:17174,&quot;e&quot;:17174,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:17174,&quot;e&quot;:17174,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:17174,&quot;e&quot;:17174,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:17180,&quot;e&quot;:17180,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:17180,&quot;e&quot;:17180,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:17180,&quot;e&quot;:17180,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:19024,&quot;e&quot;:19024,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:19024,&quot;e&quot;:19024,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:19024,&quot;e&quot;:19024,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:19156,&quot;e&quot;:19156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:19156,&quot;e&quot;:19156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:19156,&quot;e&quot;:19156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:19554,&quot;e&quot;:19554,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:19554,&quot;e&quot;:19554,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:19554,&quot;e&quot;:19554,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:19560,&quot;e&quot;:19561,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:19561,&quot;e&quot;:19561,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:19561,&quot;e&quot;:19561,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:19566,&quot;e&quot;:19566,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:19566,&quot;e&quot;:19566,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:19566,&quot;e&quot;:19566,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:21421,&quot;e&quot;:21421,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:21421,&quot;e&quot;:21421,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:21421,&quot;e&quot;:21421,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:13634,&quot;e&quot;:13634,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.form-element.form-element--labelLeft&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:13634,&quot;e&quot;:13634,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.form-element.form-element--labelLeft&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:13634,&quot;e&quot;:13634,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.form-element.form-element--labelLeft&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:13634,&quot;e&quot;:13635,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.form-element.form-element--labelLeft&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:14874,&quot;e&quot;:14874,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:14874,&quot;e&quot;:14874,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:14874,&quot;e&quot;:14874,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:14874,&quot;e&quot;:14875,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:15611,&quot;e&quot;:15611,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:15611,&quot;e&quot;:15611,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:15611,&quot;e&quot;:15611,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:15611,&quot;e&quot;:15611,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:19024,&quot;e&quot;:19024,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:19024,&quot;e&quot;:19024,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:19024,&quot;e&quot;:19024,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:19024,&quot;e&quot;:19025,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:19156,&quot;e&quot;:19156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:19156,&quot;e&quot;:19156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:19156,&quot;e&quot;:19156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:19157,&quot;e&quot;:19157,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:21422,&quot;e&quot;:21422,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:21422,&quot;e&quot;:21422,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:21422,&quot;e&quot;:21422,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:21422,&quot;e&quot;:21422,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;copy&quot;,&quot;s&quot;:14002,&quot;e&quot;:14006,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;copy&quot;,&quot;s&quot;:22407,&quot;e&quot;:22407,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:14031,&quot;e&quot;:14031,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:14031,&quot;e&quot;:14031,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:14031,&quot;e&quot;:14031,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:14031,&quot;e&quot;:14031,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:12921,&quot;e&quot;:14031,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:12921,&quot;e&quot;:14030,&quot;o&quot;:&quot;https://bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;change&quot;,&quot;s&quot;:14756,&quot;e&quot;:14757,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;change&quot;,&quot;s&quot;:15499,&quot;e&quot;:15499,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;change&quot;,&quot;s&quot;:18930,&quot;e&quot;:18930,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;change&quot;,&quot;s&quot;:21324,&quot;e&quot;:21324,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;react-blur&quot;,&quot;s&quot;:14761,&quot;e&quot;:14792,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-blur&quot;,&quot;s&quot;:15504,&quot;e&quot;:15504,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-blur&quot;,&quot;s&quot;:18935,&quot;e&quot;:18935,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-blur&quot;,&quot;s&quot;:21329,&quot;e&quot;:21387,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;blur&quot;,&quot;s&quot;:14761,&quot;e&quot;:14793,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;blur&quot;,&quot;s&quot;:15503,&quot;e&quot;:15504,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;blur&quot;,&quot;s&quot;:18934,&quot;e&quot;:18935,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;blur&quot;,&quot;s&quot;:21328,&quot;e&quot;:21387,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;react-focus&quot;,&quot;s&quot;:14793,&quot;e&quot;:14793,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-focus&quot;,&quot;s&quot;:15506,&quot;e&quot;:15506,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-focus&quot;,&quot;s&quot;:18937,&quot;e&quot;:18937,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-focus&quot;,&quot;s&quot;:21387,&quot;e&quot;:21387,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;focus&quot;,&quot;s&quot;:14793,&quot;e&quot;:14793,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;focus&quot;,&quot;s&quot;:15505,&quot;e&quot;:15506,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;focus&quot;,&quot;s&quot;:18937,&quot;e&quot;:18938,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;focus&quot;,&quot;s&quot;:21387,&quot;e&quot;:21387,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;paste&quot;,&quot;s&quot;:15230,&quot;e&quot;:15230,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;paste&quot;,&quot;s&quot;:19551,&quot;e&quot;:19551,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;react-change&quot;,&quot;s&quot;:15232,&quot;e&quot;:15232,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-change&quot;,&quot;s&quot;:16452,&quot;e&quot;:16453,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-change&quot;,&quot;s&quot;:16805,&quot;e&quot;:16805,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-change&quot;,&quot;s&quot;:16978,&quot;e&quot;:16978,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-change&quot;,&quot;s&quot;:17166,&quot;e&quot;:17166,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-change&quot;,&quot;s&quot;:19553,&quot;e&quot;:19553,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;input&quot;,&quot;s&quot;:15232,&quot;e&quot;:15247,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;input&quot;,&quot;s&quot;:16451,&quot;e&quot;:16468,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;input&quot;,&quot;s&quot;:16805,&quot;e&quot;:16819,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;input&quot;,&quot;s&quot;:16977,&quot;e&quot;:17015,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;input&quot;,&quot;s&quot;:17165,&quot;e&quot;:17181,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;input&quot;,&quot;s&quot;:19552,&quot;e&quot;:19567,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;react-dblclick&quot;,&quot;s&quot;:19158,&quot;e&quot;:19158,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;dblclick&quot;,&quot;s&quot;:19157,&quot;e&quot;:19158,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;scrolling&quot;,&quot;s&quot;:22921,&quot;e&quot;:22923,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;scrolling&quot;,&quot;s&quot;:22921,&quot;e&quot;:22924,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=22925&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account&amp;ptid=912f90f8-0001-bb10-21f9-0181d6ea20bd&amp;st=1657168050209</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${constantTimer}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="BA_05_Save_Customer" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/Object/?x=wmlptkyqwxpv4bxdnz3cm5b2aejn7wunaedzuy8xr6qmwqya5f8yuf6mqd7bh9znlm48rk758a26q77lshz83cvylgttuxlvxd3cgpz-2,200" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Fields" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Fields</stringProp>
                    <stringProp name="Argument.value">%7B%22AC_AADHARCARDNUMBER%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22AC_BILLING_CITY%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22IsRenderAsLabel%22%3Atrue%2C%22LinkCaptions%22%3A%7B%22AC_BILLING_STATE%22%3A%22Permanent%20State%22%2C%22AC_BILLING_CITY%22%3A%22Permanent%20City%22%7D%7D%7D%2C%22AC_BILLING_LOCALITY%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22AC_BILLING_STATE%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22IsRenderAsLabel%22%3Atrue%2C%22LinkCaptions%22%3A%7B%22AC_BILLING_STATE%22%3A%22Permanent%20State%22%7D%7D%7D%2C%22AC_BILLING_ZIPCODE%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22IsRenderAsLabel%22%3Atrue%2C%22LinkCaptions%22%3A%7B%22AC_BILLING_CITY%22%3A%22Permanent%20City%22%2C%22AC_BILLING_STATE%22%3A%22Permanent%20State%22%2C%22AC_BILLING_ZIPCODE%22%3A%22Permanent%20ZipCode%22%7D%7D%7D%2C%22AC_DATEOFBIRTH%22%3A%7B%22ControlType%22%3A8%2C%22Value%22%3A%22%22%7D%2C%22AC_DESCRIPTION%22%3A%7B%22ControlType%22%3A9%2C%22Value%22%3A%22%22%7D%2C%22AC_EMAIL%22%3A%7B%22ControlType%22%3A5%2C%22Value%22%3A%22%22%7D%2C%22AC_GENDER%22%3A%7B%22ControlType%22%3A21%2C%22Value%22%3A%7B%22Value%22%3A-1%2C%22Text%22%3A%22%22%7D%2C%22Properties%22%3A%7B%22InitialValueType%22%3A1%7D%7D%2C%22AC_IMPORTANCE%22%3A%7B%22ControlType%22%3A21%2C%22Value%22%3A%7B%22Value%22%3A1%2C%22Text%22%3A%22Normal%22%7D%2C%22Properties%22%3A%7B%22InitialValueType%22%3A1%7D%7D%2C%22AC_MARITALSTATUS%22%3A%7B%22ControlType%22%3A21%2C%22Value%22%3A%7B%22Value%22%3A-1%2C%22Text%22%3A%22%22%7D%2C%22Properties%22%3A%7B%22InitialValueType%22%3A1%7D%7D%2C%22AC_MOBILE%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22AC_NAME%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22Thor%22%2C%22Properties%22%3A%7B%22DefaultValueResolver%22%3A%7B%22Type%22%3A1%2C%22Value%22%3A%22Default%22%2C%22IsResolved%22%3Afalse%7D%7D%7D%2C%22AC_OFFICE_PHONE%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22AC_OWNER%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%7B%22Value%22%3A12104%2C%22Text%22%3A%22User_195%22%7D%2C%22Properties%22%3A%7B%22InitialValueType%22%3A1%2C%22IsRenderAsLabel%22%3Atrue%7D%7D%2C%22AC_PANNUMBER%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22AC_PHONE%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22AC_RATING%22%3A%7B%22ControlType%22%3A21%2C%22Value%22%3A%7B%22Value%22%3A1%2C%22Text%22%3A%22Hot%22%7D%2C%22Properties%22%3A%7B%22InitialValueType%22%3A1%7D%7D%2C%22AC_SHIPPING_CITY%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22IsRenderAsLabel%22%3Atrue%2C%22LinkCaptions%22%3A%7B%22AC_SHIPPING_STATE%22%3A%22Correspondence%20%20State%22%2C%22AC_SHIPPING_CITY%22%3A%22Correspondence%20City%22%7D%7D%7D%2C%22AC_SHIPPING_LOCALITY%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22AC_SHIPPING_STATE%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22IsRenderAsLabel%22%3Atrue%2C%22LinkCaptions%22%3A%7B%22AC_SHIPPING_STATE%22%3A%22Correspondence%20%20State%22%7D%7D%7D%2C%22AC_SHIPPING_ZIPCODE%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22IsRenderAsLabel%22%3Atrue%2C%22LinkCaptions%22%3A%7B%22AC_SHIPPING_CITY%22%3A%22Correspondence%20City%22%2C%22AC_SHIPPING_STATE%22%3A%22Correspondence%20%20State%22%2C%22AC_SHIPPING_ZIPCODE%22%3A%22Correpondence%20ZipCode%22%7D%7D%7D%2C%22AC_SHORTNAME%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22default%22%2C%22Properties%22%3A%7B%22DefaultValueResolver%22%3A%7B%22Type%22%3A1%2C%22Value%22%3A%22default%22%2C%22IsResolved%22%3Afalse%7D%7D%7D%2C%22AC_TERRITORY%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22InitialValueType%22%3A1%2C%22IsRenderAsLabel%22%3Atrue%7D%7D%2C%22BillAddressLine1%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22CompositControlKey%22%3A%22AC_BILLING_ADDRESS%22%7D%7D%2C%22BillAddressLine2%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22CompositControlKey%22%3A%22AC_BILLING_ADDRESS%22%7D%7D%2C%22BillAddressLine3%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22CompositControlKey%22%3A%22AC_BILLING_ADDRESS%22%7D%7D%2C%22cust_100258%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_100259%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_100260%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_100261%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_100262%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_100263%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_100264%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_100265%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_100266%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_100267%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_100268%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22IsRenderAsLabel%22%3Atrue%7D%7D%2C%22cust_100269%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22IsRenderAsLabel%22%3Atrue%7D%7D%2C%22cust_100339%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_206%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22Thor%22%7D%2C%22cust_207%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_210%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22Test%22%7D%2C%22cust_211%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_212%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_213%22%3A%7B%22ControlType%22%3A70%2C%22Value%22%3A%22%22%7D%2C%22cust_220%22%3A%7B%22ControlType%22%3A17%2C%22Value%22%3A%22%22%7D%2C%22cust_223%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_224%22%3A%7B%22ControlType%22%3A21%2C%22Value%22%3A%7B%22Value%22%3A-1%2C%22Text%22%3A%22%22%7D%2C%22Properties%22%3A%7B%22InitialValueType%22%3A0%7D%7D%2C%22cust_549%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_572%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22Thor_123%22%7D%2C%22cust_573%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_574%22%3A%7B%22ControlType%22%3A21%2C%22Value%22%3A%7B%22Value%22%3A%22%22%2C%22Text%22%3A%22%22%7D%7D%2C%22cust_576%22%3A%7B%22ControlType%22%3A21%2C%22Value%22%3A%7B%22Text%22%3A%22No%22%2C%22Value%22%3A%220%22%7D%7D%2C%22cust_577%22%3A%7B%22ControlType%22%3A21%2C%22Value%22%3A%7B%22Text%22%3A%22No%22%2C%22Value%22%3A%220%22%7D%7D%2C%22cust_594%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_676%22%3A%7B%22ControlType%22%3A21%2C%22Value%22%3A%7B%22Value%22%3A%22%22%2C%22Text%22%3A%22%22%7D%7D%2C%22OBJECT_IS_NEW%22%3A%7B%22ControlType%22%3A10%2C%22Value%22%3Atrue%7D%2C%22ShipAddressLine1%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22CompositControlKey%22%3A%22AC_SHIPPING_ADDRESS%22%7D%7D%2C%22ShipAddressLine2%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22CompositControlKey%22%3A%22AC_SHIPPING_ADDRESS%22%7D%7D%2C%22ShipAddressLine3%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22CompositControlKey%22%3A%22AC_SHIPPING_ADDRESS%22%7D%7D%7D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ActionProperties" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ActionProperties</stringProp>
                    <stringProp name="Argument.value">%7B%22AllowRecentItem%22%3Atrue%2C%22LayoutTrackHistory%22%3A0%2C%22LayoutGroupId%22%3A100294%2C%22DynamicToken%22%3A%227de374cd-878e-41e2-b1cf-285faa6f5de1%22%2C%22RequestVerificationToken%22%3A%22j4LfK-NmYA_qOcfESZSd9QDnTTTz2KItiCzmbWZ401KFyUJk-Sn_h0C-AjYHNxj_dZEYztrSxrhmeP9EsGWYzlG44pA1%3As9r5pCC82dyxZE4RIwyFTH0F8nPHb9i2PWurGCp-MJUHr9Pw63s-oouJcLuY5Bkx6Nfz97T8fXMiH-i5n2ZNHXJ6kjQ1%22%7D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Save" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Save</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Submit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Submit</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="getParentFormApi" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">getParentFormApi</stringProp>
                    <stringProp name="Argument.value">undefined</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dialogId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">dialogId</stringProp>
                    <stringProp name="Argument.value">undefined</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ActionId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ActionId</stringProp>
                    <stringProp name="Argument.value">undefined</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="actionObject" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">actionObject</stringProp>
                    <stringProp name="Argument.value">undefined</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="onCallback" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">onCallback</stringProp>
                    <stringProp name="Argument.value">undefined</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CheckSum" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CheckSum</stringProp>
                    <stringProp name="Argument.value">%22afa6fa93174ad33256caae6dd2fecda5e9fb3971a873785baa8dd415b6b58690%22</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PostFailureSavedData" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PostFailureSavedData</stringProp>
                    <stringProp name="Argument.value">undefined</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/Object/?x=wmlptkyqwxpv4bxdnz3cm5b2aejn7wunaedzuy8xr6qmwqya5f8yuf6mqd7bh9znlm48rk758a26q77lshz83cvylgttuxlvxd3cgpz</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account?x=wmlptkyqwxpv4bxdnz3cm5b2aejn7wunaedzuy8xr6qmwqya5f8yuf6mqd7bh9zn3vhf6q836akxa&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiNzczY2I4MjRkNDZlZTk2NSIsInRyIjoiMzRjMWI1NDJlNTJmYjk0Yzg0MTczZTFiMjEwZGM2MTUiLCJ0aSI6MTY1NzE2ODA4MDY5OX19</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-773cb824d46ee965----1657168080699</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-34c1b542e52fb94c84173e1b210dc615-773cb824d46ee965-01</stringProp>
                  </elementProp>
                  <elementProp name="x-requested-with" elementType="Header">
                    <stringProp name="Header.name">x-requested-with</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Csrf_2201" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Csrf_2201</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">Account?x=</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;,</stringProp>
                <stringProp name="BoundaryExtractor.default">NF_2201</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/crmnextobject/detail/Account-2,201" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="x" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x</stringProp>
                    <stringProp name="Argument.value">${Csrf_2201}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="mdi" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">mdi</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/crmnextobject/detail/Account</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account?x=wmlptkyqwxpv4bxdnz3cm5b2aejn7wunaedzuy8xr6qmwqya5f8yuf6mqd7bh9zn3vhf6q836akxa&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Csrf_2206" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Csrf_2206</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">GetCardFormMetaData?x=</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">NF_2206</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Csrf_2207" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Csrf_2207</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">LoadTopNavContent(&apos;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&apos;,</stringProp>
                <stringProp name="BoundaryExtractor.default">NF_2207</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Csrf_2214" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Csrf_2214</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">detail/Account?x=</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;,</stringProp>
                <stringProp name="BoundaryExtractor.default">NF_2214</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/FormApi/GetCardFormMetaData-2,206" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="x" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x</stringProp>
                    <stringProp name="Argument.value">${Csrf_2206}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/FormApi/GetCardFormMetaData</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account?x=efa8kjuwhuerclrn2cn8te7aukqvqsvub9vxnya&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="339460967">Customer Profile</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CRMNextCache/CustomNavigation-2,207" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="x" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x</stringProp>
                    <stringProp name="Argument.value">${Csrf_2207}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/CRMNextCache/CustomNavigation</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account?x=efa8kjuwhuerclrn2cn8te7aukqvqsvub9vxnya&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiNzM1MTkwZjc4MDVhYzQzMyIsInRyIjoiMTk2Mzg5MzZkOGJhZTZlMDhkOTMwM2UxZTI2YWRiZTciLCJ0aSI6MTY1NzE2ODA4MzEwMH19</stringProp>
                  </elementProp>
                  <elementProp name="X-NewRelic-ID" elementType="Header">
                    <stringProp name="Header.name">X-NewRelic-ID</stringProp>
                    <stringProp name="Header.value">VwUAWFZUDBAFVlZWAAMBVVI=</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-735190f7805ac433----1657168083100</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-19638936d8bae6e08d9303e1e26adbe7-735190f7805ac433-01</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=32652&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account&amp;ptid=912f90f8-0001-bb10-21f9-0181d6ea20bd-2,202" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">bel.6;e,&apos;unload,p6z,1;6,&apos;cls,0.6792068628106072</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=32652&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account&amp;ptid=912f90f8-0001-bb10-21f9-0181d6ea20bd</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=32663&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account&amp;ptid=912f90f8-0001-bb10-21f9-0181d6ea20bd-2,205" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">bel.7;2,,niz,14e,,,&apos;POST,5k,&apos;sbilifeload.crmnext.com:80,&apos;/snload7/app/Object/,,c3,1,&apos;0,&apos;773cb824d46ee965,&apos;34c1b542e52fb94c84173e1b210dc615,l5aj36m3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=32663&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account&amp;ptid=912f90f8-0001-bb10-21f9-0181d6ea20bd</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=32658&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account&amp;ptid=912f90f8-0001-bb10-21f9-0181d6ea20bd&amp;st=1657168050209-2,204" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;res&quot;:[{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:22926,&quot;e&quot;:22926,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:23748,&quot;e&quot;:23748,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:23748,&quot;e&quot;:23748,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:23749,&quot;e&quot;:23749,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:22925,&quot;e&quot;:22927,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:31222,&quot;e&quot;:31222,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:32067,&quot;e&quot;:32067,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;scrolling&quot;,&quot;s&quot;:22941,&quot;e&quot;:23141,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;scrolling&quot;,&quot;s&quot;:23903,&quot;e&quot;:24123,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;scrolling&quot;,&quot;s&quot;:24395,&quot;e&quot;:24590,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;scrolling&quot;,&quot;s&quot;:28223,&quot;e&quot;:28389,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;scrolling&quot;,&quot;s&quot;:28706,&quot;e&quot;:28889,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;scrolling&quot;,&quot;s&quot;:29289,&quot;e&quot;:29423,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;scrolling&quot;,&quot;s&quot;:22941,&quot;e&quot;:23008,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;scroll&quot;,&quot;s&quot;:23023,&quot;e&quot;:23029,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;scrolling&quot;,&quot;s&quot;:23040,&quot;e&quot;:23146,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;scrolling&quot;,&quot;s&quot;:23904,&quot;e&quot;:24124,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;scrolling&quot;,&quot;s&quot;:24396,&quot;e&quot;:24590,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;scrolling&quot;,&quot;s&quot;:28223,&quot;e&quot;:28390,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;scrolling&quot;,&quot;s&quot;:28706,&quot;e&quot;:28891,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;scrolling&quot;,&quot;s&quot;:29289,&quot;e&quot;:29363,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;scroll&quot;,&quot;s&quot;:29373,&quot;e&quot;:29377,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;scroll&quot;,&quot;s&quot;:29390,&quot;e&quot;:29394,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;scrolling&quot;,&quot;s&quot;:29407,&quot;e&quot;:29427,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:23482,&quot;e&quot;:23482,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;select.selectbox&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:24474,&quot;e&quot;:24478,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:28339,&quot;e&quot;:29490,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:24541,&quot;e&quot;:24542,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.tab__section.justify-between&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:28324,&quot;e&quot;:28326,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.tab__section.justify-between&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:27816,&quot;e&quot;:28314,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.form-element.form-element--labelLeft&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:29324,&quot;e&quot;:29840,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.form-element.form-element--labelLeft&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:27856,&quot;e&quot;:28190,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;textarea.textarea.field__item.textarea--charlimit&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:29523,&quot;e&quot;:29806,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;textarea.textarea.field__item.textarea--charlimit&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:29506,&quot;e&quot;:29507,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.section-contents&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:29573,&quot;e&quot;:29825,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.f12.gray.pt1&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:29855,&quot;e&quot;:29855,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.object-action-inner&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:29871,&quot;e&quot;:29872,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;a.acd-btn.acd-btn--brand.mh-8&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:29889,&quot;e&quot;:30089,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.ff-regular&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:30515,&quot;e&quot;:30515,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.cardLoader&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:23748,&quot;e&quot;:23748,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:23749,&quot;e&quot;:23749,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:23749,&quot;e&quot;:23749,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:23749,&quot;e&quot;:23750,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:22926,&quot;e&quot;:23750,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:30491,&quot;e&quot;:31945,&quot;o&quot;:&quot;200 POST: sbilifeload.crmnext.com:80/snload7/app/Object/&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:22926,&quot;e&quot;:23745,&quot;o&quot;:&quot;https://bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:25193,&quot;e&quot;:25195,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:27607,&quot;e&quot;:27609,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;react-keydown&quot;,&quot;s&quot;:25195,&quot;e&quot;:25195,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-blur&quot;,&quot;s&quot;:25298,&quot;e&quot;:25298,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-blur&quot;,&quot;s&quot;:30313,&quot;e&quot;:30313,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;blur&quot;,&quot;s&quot;:25298,&quot;e&quot;:25298,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;blur&quot;,&quot;s&quot;:30312,&quot;e&quot;:30313,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;react-focus&quot;,&quot;s&quot;:27596,&quot;e&quot;:27596,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;focus&quot;,&quot;s&quot;:27596,&quot;e&quot;:27596,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;input.textbox.field__item&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:30395,&quot;e&quot;:30395,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:30396,&quot;e&quot;:30396,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:30396,&quot;e&quot;:30396,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:30487,&quot;e&quot;:30487,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:30487,&quot;e&quot;:30489,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:30489,&quot;e&quot;:30491,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:30502,&quot;e&quot;:30502,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:30502,&quot;e&quot;:30502,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:30502,&quot;e&quot;:30502,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:31996,&quot;e&quot;:31996,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:31996,&quot;e&quot;:31997,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:31997,&quot;e&quot;:32016,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:32026,&quot;e&quot;:32026,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:32026,&quot;e&quot;:32026,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:32026,&quot;e&quot;:32026,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:30396,&quot;e&quot;:30396,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.ff-regular&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:30399,&quot;e&quot;:30399,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.ff-regular&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:30399,&quot;e&quot;:30502,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.ff-regular&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:30503,&quot;e&quot;:30503,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.ff-regular&quot;},{&quot;n&quot;:&quot;react-click&quot;,&quot;s&quot;:30400,&quot;e&quot;:30449,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;beforeunload&quot;,&quot;s&quot;:32014,&quot;e&quot;:32014,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;beforeunload&quot;,&quot;s&quot;:32014,&quot;e&quot;:32014,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;fetch&quot;,&quot;s&quot;:30490,&quot;e&quot;:31943,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/Object/&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;unload&quot;,&quot;s&quot;:32651,&quot;e&quot;:32651,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=32658&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account&amp;ptid=912f90f8-0001-bb10-21f9-0181d6ea20bd&amp;st=1657168050209</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/jserrors/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=32653&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account&amp;ptid=912f90f8-0001-bb10-21f9-0181d6ea20bd-2,203" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;sm&quot;:[{&quot;params&quot;:{&quot;name&quot;:&quot;Framework/React/Detected&quot;},&quot;stats&quot;:{&quot;c&quot;:1}},{&quot;params&quot;:{&quot;name&quot;:&quot;Framework/Jquery/Detected&quot;},&quot;stats&quot;:{&quot;c&quot;:1}},{&quot;params&quot;:{&quot;name&quot;:&quot;Ajax/Events/Excluded/Agent&quot;},&quot;stats&quot;:{&quot;c&quot;:5}}],&quot;xhr&quot;:[{&quot;params&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/CRMNextCache/CustomNavigation&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;rxSize&quot;:{&quot;t&quot;:16441},&quot;duration&quot;:{&quot;t&quot;:630},&quot;cbTime&quot;:{&quot;t&quot;:2},&quot;time&quot;:{&quot;t&quot;:671}}},{&quot;params&quot;:{&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/CRMNextObject/GetPushByDevice&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:0},&quot;rxSize&quot;:{&quot;t&quot;:59},&quot;duration&quot;:{&quot;t&quot;:174},&quot;time&quot;:{&quot;t&quot;:1167}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;bam.nr-data.net&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;bam.nr-data.net:443&quot;,&quot;pathname&quot;:&quot;/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:2,&quot;txSize&quot;:{&quot;t&quot;:962,&quot;min&quot;:460,&quot;max&quot;:502,&quot;sos&quot;:463604,&quot;c&quot;:2},&quot;rxSize&quot;:{&quot;t&quot;:48,&quot;min&quot;:24,&quot;max&quot;:24,&quot;sos&quot;:1152,&quot;c&quot;:2},&quot;duration&quot;:{&quot;t&quot;:1819,&quot;min&quot;:821,&quot;max&quot;:998,&quot;sos&quot;:1670045,&quot;c&quot;:2},&quot;cbTime&quot;:{&quot;t&quot;:1,&quot;min&quot;:0,&quot;max&quot;:1,&quot;sos&quot;:1,&quot;c&quot;:2},&quot;time&quot;:{&quot;t&quot;:13348,&quot;min&quot;:2076,&quot;max&quot;:11272,&quot;sos&quot;:131367760,&quot;c&quot;:2}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;bam.nr-data.net&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;bam.nr-data.net:443&quot;,&quot;pathname&quot;:&quot;/resources/1/NRJS-2551f7a729197a720f4&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:3,&quot;txSize&quot;:{&quot;t&quot;:46889,&quot;min&quot;:1203,&quot;max&quot;:29865,&quot;sos&quot;:1143669475,&quot;c&quot;:3},&quot;rxSize&quot;:{&quot;t&quot;:108,&quot;min&quot;:36,&quot;max&quot;:36,&quot;sos&quot;:3888,&quot;c&quot;:3},&quot;duration&quot;:{&quot;t&quot;:2813,&quot;min&quot;:824,&quot;max&quot;:1110,&quot;sos&quot;:2683717,&quot;c&quot;:3},&quot;cbTime&quot;:{&quot;t&quot;:2,&quot;min&quot;:0,&quot;max&quot;:1,&quot;sos&quot;:2,&quot;c&quot;:3},&quot;time&quot;:{&quot;t&quot;:37886,&quot;min&quot;:2039,&quot;max&quot;:22926,&quot;sos&quot;:696711238,&quot;c&quot;:3}}},{&quot;params&quot;:{&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/Object/&quot;,&quot;method&quot;:&quot;POST&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:0},&quot;rxSize&quot;:{&quot;t&quot;:435},&quot;duration&quot;:{&quot;t&quot;:1454},&quot;time&quot;:{&quot;t&quot;:30491}}}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/jserrors/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=32653&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Account&amp;ptid=912f90f8-0001-bb10-21f9-0181d6ea20bd</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CRMNextObject/GetPushByDevice-2,208" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/CRMNextObject/GetPushByDevice</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account?x=efa8kjuwhuerclrn2cn8te7aukqvqsvub9vxnya&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-12689cee3ea840e1----1657168083472</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-015c3bf85f146bd50d2591704841e634-12689cee3ea840e1-01</stringProp>
                  </elementProp>
                  <elementProp name="x-requested-with" elementType="Header">
                    <stringProp name="Header.name">x-requested-with</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiMTI2ODljZWUzZWE4NDBlMSIsInRyIjoiMDE1YzNiZjg1ZjE0NmJkNTBkMjU5MTcwNDg0MWU2MzQiLCJ0aSI6MTY1NzE2ODA4MzQ3Mn19</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CardView/LoadListCard?x=ehckuwfsnzucajqlzsxwh64attez9u4uupgkr7bagh4tq2evmy8a-2,209" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;LookUpRequest&quot;:{&quot;ControlKey&quot;:&quot;Card_200195&quot;,&quot;ObjectContext&quot;:{&quot;TopParent&quot;:54,&quot;Lo&quot;:1,&quot;Hi&quot;:2,&quot;Email&quot;:&quot;&quot;,&quot;Low&quot;:1,&quot;High&quot;:2,&quot;ItemType&quot;:7,&quot;FormCacheKey&quot;:&quot;602_Account_1_100002False_Details_Card_100294_1__None_-10__20220705105031&quot;,&quot;ObjectId&quot;:54,&quot;HistoryId&quot;:-1,&quot;ItemName&quot;:&quot;Thor&quot;,&quot;StatusCodeId&quot;:27,&quot;AccountId&quot;:54,&quot;LayoutId&quot;:100002,&quot;LayoutType&quot;:2,&quot;LayoutViewType&quot;:1,&quot;IsPopulateTemplate&quot;:true,&quot;ProcessID&quot;:11003,&quot;ItemOwnerId&quot;:12104,&quot;IsEditable&quot;:true,&quot;OpenerObjectQueryString&quot;:&quot;vsmjtqsuurhq69qek5jysx3dlymc3gw4t682pugnwnplmcqlgwqm896vt6ljut4jnteblh7ka2py2&quot;},&quot;AllowedOptions&quot;:null,&quot;LinkDataContext&quot;:{&quot;Linking&quot;:null,&quot;References&quot;:null,&quot;ReferenceControls&quot;:null},&quot;Model&quot;:null,&quot;ExistingValues&quot;:null,&quot;GraphType&quot;:null,&quot;ControlProperties&quot;:{&quot;HasInfiniteScroll&quot;:1,&quot;ColMerge&quot;:1}},&quot;ListingRequest&quot;:{&quot;ContentFilter&quot;:{&quot;PageIndex&quot;:1,&quot;PageSize&quot;:0,&quot;ABCFilter&quot;:&quot;&quot;,&quot;OrderBy&quot;:0,&quot;OrderField&quot;:&quot;&quot;,&quot;Filters&quot;:{},&quot;NextPageToken&quot;:&quot;&quot;}},&quot;RequestMode&quot;:1,&quot;IsContinueOnNoSelection&quot;:false}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/CardView/LoadListCard?x=ehckuwfsnzucajqlzsxwh64attez9u4uupgkr7bagh4tq2evmy8a</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account?x=efa8kjuwhuerclrn2cn8te7aukqvqsvub9vxnya&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiNTUzMGNlMDVjMTM4OTAzMCIsInRyIjoiZTA0MTI2M2YyNTAxMDE3MDJhNDgzNmU4ZGUyMDc4YzAiLCJ0aSI6MTY1NzE2ODA4MzQ4N319</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-5530ce05c1389030----1657168083487</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-e041263f250101702a4836e8de2078c0-5530ce05c1389030-01</stringProp>
                  </elementProp>
                  <elementProp name="x-requested-with" elementType="Header">
                    <stringProp name="Header.name">x-requested-with</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/NRJS-2551f7a729197a720f4-2,212" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="a" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">a</stringProp>
                    <stringProp name="Argument.value">527472636</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">1216.487a282</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="to" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">to</stringProp>
                    <stringProp name="Argument.value">YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="rst" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">rst</stringProp>
                    <stringProp name="Argument.value">1517</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ck" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ck</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ap" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ap</stringProp>
                    <stringProp name="Argument.value">414</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="be" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">be</stringProp>
                    <stringProp name="Argument.value">691</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fe" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fe</stringProp>
                    <stringProp name="Argument.value">1486</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dc" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">dc</stringProp>
                    <stringProp name="Argument.value">1280</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="af" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">af</stringProp>
                    <stringProp name="Argument.value">err,xhr,stn,ins,spa</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="perf" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">perf</stringProp>
                    <stringProp name="Argument.value">%7B%22timing%22:%7B%22of%22:1657168082224,%22n%22:0,%22u%22:650,%22ue%22:650,%22f%22:15,%22dn%22:15,%22dne%22:15,%22c%22:15,%22ce%22:15,%22rq%22:18,%22rp%22:618,%22rpe%22:621,%22dl%22:657,%22di%22:1281,%22ds%22:1281,%22de%22:1291,%22dc%22:1486,%22l%22:1486,%22le%22:1497%7D,%22navigation%22:%7B%7D%7D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fp</stringProp>
                    <stringProp name="Argument.value">1131</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fcp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fcp</stringProp>
                    <stringProp name="Argument.value">1131</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="jsonp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">jsonp</stringProp>
                    <stringProp name="Argument.value">NREUM.setToken</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/1/NRJS-2551f7a729197a720f4</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CardView/LoadListCard?x=ssqwnebx84q67apmfumpbar87a37yvva3tdlj9byhmf5p3zbdgzq-2,210" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;LookUpRequest&quot;:{&quot;ControlKey&quot;:&quot;Card_200181&quot;,&quot;ObjectContext&quot;:{&quot;TopParent&quot;:54,&quot;Lo&quot;:1,&quot;Hi&quot;:2,&quot;Email&quot;:&quot;&quot;,&quot;Low&quot;:1,&quot;High&quot;:2,&quot;ItemType&quot;:7,&quot;FormCacheKey&quot;:&quot;602_Account_1_100002False_Details_Card_100294_1__None_-10__20220705105031&quot;,&quot;ObjectId&quot;:54,&quot;HistoryId&quot;:-1,&quot;ItemName&quot;:&quot;Thor&quot;,&quot;StatusCodeId&quot;:27,&quot;AccountId&quot;:54,&quot;LayoutId&quot;:100002,&quot;LayoutType&quot;:2,&quot;LayoutViewType&quot;:1,&quot;IsPopulateTemplate&quot;:true,&quot;ProcessID&quot;:11003,&quot;ItemOwnerId&quot;:12104,&quot;IsEditable&quot;:true,&quot;OpenerObjectQueryString&quot;:&quot;vsmjtqsuurhq69qek5jysx3dlymc3gw4t682pugnwnplmcqlgwqm896vt6ljut4jnteblh7ka2py2&quot;},&quot;AllowedOptions&quot;:null,&quot;LinkDataContext&quot;:{&quot;Linking&quot;:null,&quot;References&quot;:null,&quot;ReferenceControls&quot;:null},&quot;Model&quot;:null,&quot;ExistingValues&quot;:null,&quot;GraphType&quot;:null,&quot;ControlProperties&quot;:{&quot;HasInfiniteScroll&quot;:1,&quot;ColMerge&quot;:1}},&quot;ListingRequest&quot;:{&quot;ContentFilter&quot;:{&quot;PageIndex&quot;:1,&quot;PageSize&quot;:0,&quot;ABCFilter&quot;:&quot;&quot;,&quot;OrderBy&quot;:0,&quot;OrderField&quot;:&quot;&quot;,&quot;Filters&quot;:{},&quot;NextPageToken&quot;:&quot;&quot;}},&quot;RequestMode&quot;:1,&quot;IsContinueOnNoSelection&quot;:false}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/CardView/LoadListCard?x=ssqwnebx84q67apmfumpbar87a37yvva3tdlj9byhmf5p3zbdgzq</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account?x=efa8kjuwhuerclrn2cn8te7aukqvqsvub9vxnya&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiNDRjZjE1Njk4MzJjYjdmNyIsInRyIjoiZTJlMjMzMjU1NTk1YzI0NzIxNDUxMjUwODE4OGExOGYiLCJ0aSI6MTY1NzE2ODA4MzQ4OH19</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-44cf1569832cb7f7----1657168083488</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-e2e233255595c247214512508188a18f-44cf1569832cb7f7-01</stringProp>
                  </elementProp>
                  <elementProp name="x-requested-with" elementType="Header">
                    <stringProp name="Header.name">x-requested-with</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CardView/LoadListCard?x=nldcvj2nwf2tgynvr2hh9v6uu5uw8j5khrfjsdl687k6bh6mct5q-2,211" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;LookUpRequest&quot;:{&quot;ControlKey&quot;:&quot;Card_100270&quot;,&quot;ObjectContext&quot;:{&quot;TopParent&quot;:54,&quot;Lo&quot;:1,&quot;Hi&quot;:2,&quot;Email&quot;:&quot;&quot;,&quot;Low&quot;:1,&quot;High&quot;:2,&quot;ItemType&quot;:7,&quot;FormCacheKey&quot;:&quot;602_Account_1_100002False_Details_Card_100294_1__None_-10__20220705105031&quot;,&quot;ObjectId&quot;:54,&quot;HistoryId&quot;:-1,&quot;ItemName&quot;:&quot;Thor&quot;,&quot;StatusCodeId&quot;:27,&quot;AccountId&quot;:54,&quot;LayoutId&quot;:100002,&quot;LayoutType&quot;:2,&quot;LayoutViewType&quot;:1,&quot;IsPopulateTemplate&quot;:true,&quot;ProcessID&quot;:11003,&quot;ItemOwnerId&quot;:12104,&quot;IsEditable&quot;:true,&quot;OpenerObjectQueryString&quot;:&quot;vsmjtqsuurhq69qek5jysx3dlymc3gw4t682pugnwnplmcqlgwqm896vt6ljut4jnteblh7ka2py2&quot;},&quot;AllowedOptions&quot;:null,&quot;LinkDataContext&quot;:{&quot;Linking&quot;:null,&quot;References&quot;:null,&quot;ReferenceControls&quot;:null},&quot;Model&quot;:null,&quot;ExistingValues&quot;:null,&quot;GraphType&quot;:null,&quot;ControlProperties&quot;:{&quot;HasInfiniteScroll&quot;:1,&quot;ColMerge&quot;:1}},&quot;ListingRequest&quot;:{&quot;ContentFilter&quot;:{&quot;PageIndex&quot;:1,&quot;PageSize&quot;:0,&quot;ABCFilter&quot;:&quot;&quot;,&quot;OrderBy&quot;:0,&quot;OrderField&quot;:&quot;&quot;,&quot;Filters&quot;:{},&quot;NextPageToken&quot;:&quot;&quot;}},&quot;RequestMode&quot;:1,&quot;IsContinueOnNoSelection&quot;:false}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/CardView/LoadListCard?x=nldcvj2nwf2tgynvr2hh9v6uu5uw8j5khrfjsdl687k6bh6mct5q</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account?x=efa8kjuwhuerclrn2cn8te7aukqvqsvub9vxnya&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiMWViMjY1YTg4OTM3OWE4MyIsInRyIjoiM2EzNWQ3YzU3YTIzYTQ3MmE0ODNhMTg1OWU0MjNjMjciLCJ0aSI6MTY1NzE2ODA4MzQ4OX19</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-1eb265a889379a83----1657168083489</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-3a35d7c57a23a472a483a1859e423c27-1eb265a889379a83-01</stringProp>
                  </elementProp>
                  <elementProp name="x-requested-with" elementType="Header">
                    <stringProp name="Header.name">x-requested-with</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${constantTimer}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="BA_06_Click_on_details_View" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=3586&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account-2,213" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">bel.7;1,5,,2r2,15c,2x,&apos;initialPageLoad,&apos;http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account,1,1,,,,bi,!!&apos;d3952670-ac53-4bb4-82b2-23a6c2c39440,&apos;1,vf,vf;2,,oc,75,2,2,&apos;GET,5k,&apos;sbilifeload.crmnext.com:80,&apos;/snload7/app/CRMNextCache/CustomNavigation,,cop,,&apos;3,&apos;735190f7805ac433,&apos;19638936d8bae6e08d9303e1e26adbe7,l5aj38gs;2,,yo,5n,t,1,4,5k,5,&apos;/snload7/app/CRMNextObject/GetPushByDevice,,1n,1,&apos;8,&apos;12689cee3ea840e1,&apos;015c3bf85f146bd50d2591704841e634,l5aj38r4;2,,z3,lb,18,12,&apos;POST,5k,5,&apos;/snload7/app/CardView/LoadListCard,q5,2sl,1,&apos;9,&apos;5530ce05c1389030,&apos;e041263f250101702a4836e8de2078c0,l5aj38rj;2,,z4,1cf,7l,20,e,5k,5,f,q5,78u,1,&apos;10,&apos;44cf1569832cb7f7,&apos;e2e233255595c247214512508188a18f,l5aj38rk;2,,z6,1qz,x,y,e,5k,5,f,q5,1qz,1,&apos;11,&apos;1eb265a889379a83,&apos;3a35d7c57a23a472a483a1859e423c27,l5aj38rl;b,i2,!,!-hn,,,,!,3,go,3,10,hc,,a,5f,,b</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=3586&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/crmnextobject/detail/Account-2,214" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="x" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x</stringProp>
                    <stringProp name="Argument.value">${Csrf_2214}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="mdi" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">mdi</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/crmnextobject/detail/Account</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account?x=efa8kjuwhuerclrn2cn8te7aukqvqsvub9vxnya&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Csrf_2217" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Csrf_2217</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">GetDetailFormMetaData?x=</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">NF_2217</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Csrf_2218" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Csrf_2218</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">LoadTopNavContent(&apos;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&apos;,</stringProp>
                <stringProp name="BoundaryExtractor.default">NF_2218</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/FormApi/GetDetailFormMetaData-2,217" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="x" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x</stringProp>
                    <stringProp name="Argument.value">${Csrf_2217}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/FormApi/GetDetailFormMetaData</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account?x=efa8kjuwhuerclrn2cn8te7aurqe8z6mzz3szcwscmt2vj64npd9edfnucnge67mljkds8rcuuzpq3l4wxkd83vymw&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-89421653">Key Information</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Csrf_2223" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Csrf_2223</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">LoadList?x=</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;,</stringProp>
                <stringProp name="BoundaryExtractor.default">NF_2223</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">5</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CRMNextCache/CustomNavigation-2,218" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="x" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x</stringProp>
                    <stringProp name="Argument.value">${Csrf_2218}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/CRMNextCache/CustomNavigation</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account?x=efa8kjuwhuerclrn2cn8te7aurqe8z6mzz3szcwscmt2vj64npd9edfnucnge67mljkds8rcuuzpq3l4wxkd83vymw&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiNTMyMDg3YzM3NGRjOWNiZSIsInRyIjoiZjYyYjYxZmExMzgzNjdiMGZkYmViNmQwMTZkMmFmMWIiLCJ0aSI6MTY1NzE2ODA5MDk4OX19</stringProp>
                  </elementProp>
                  <elementProp name="X-NewRelic-ID" elementType="Header">
                    <stringProp name="Header.name">X-NewRelic-ID</stringProp>
                    <stringProp name="Header.value">VwUAWFZUDBAFVlZWAAMBVVI=</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-532087c374dc9cbe----1657168090989</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-f62b61fa138367b0fdbeb6d016d2af1b-532087c374dc9cbe-01</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CRMNextObject/GetPushByDevice-2,219" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/CRMNextObject/GetPushByDevice</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account?x=efa8kjuwhuerclrn2cn8te7aurqe8z6mzz3szcwscmt2vj64npd9edfnucnge67mljkds8rcuuzpq3l4wxkd83vymw&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-77e0966a01f8e9c8----1657168091490</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-3dbb5a172570d04957aa79d2d0530b08-77e0966a01f8e9c8-01</stringProp>
                  </elementProp>
                  <elementProp name="x-requested-with" elementType="Header">
                    <stringProp name="Header.name">x-requested-with</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiNzdlMDk2NmEwMWY4ZTljOCIsInRyIjoiM2RiYjVhMTcyNTcwZDA0OTU3YWE3OWQyZDA1MzBiMDgiLCJ0aSI6MTY1NzE2ODA5MTQ5MH19</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/jserrors/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=8667&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account-2,216" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;sm&quot;:[{&quot;params&quot;:{&quot;name&quot;:&quot;Framework/React/Detected&quot;},&quot;stats&quot;:{&quot;c&quot;:1}},{&quot;params&quot;:{&quot;name&quot;:&quot;Framework/Jquery/Detected&quot;},&quot;stats&quot;:{&quot;c&quot;:1}},{&quot;params&quot;:{&quot;name&quot;:&quot;Ajax/Events/Excluded/Agent&quot;},&quot;stats&quot;:{&quot;c&quot;:1}}],&quot;xhr&quot;:[{&quot;params&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/CRMNextCache/CustomNavigation&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;rxSize&quot;:{&quot;t&quot;:16441},&quot;duration&quot;:{&quot;t&quot;:259},&quot;cbTime&quot;:{&quot;t&quot;:2},&quot;time&quot;:{&quot;t&quot;:876}}},{&quot;params&quot;:{&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/CRMNextObject/GetPushByDevice&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:0},&quot;rxSize&quot;:{&quot;t&quot;:59},&quot;duration&quot;:{&quot;t&quot;:203},&quot;time&quot;:{&quot;t&quot;:1248}}},{&quot;params&quot;:{&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/CardView/LoadListCard&quot;,&quot;method&quot;:&quot;POST&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:3,&quot;txSize&quot;:{&quot;t&quot;:2823,&quot;min&quot;:941,&quot;max&quot;:941,&quot;sos&quot;:2656443,&quot;c&quot;:3},&quot;rxSize&quot;:{&quot;t&quot;:15278,&quot;min&quot;:2267,&quot;max&quot;:9390,&quot;sos&quot;:106423030,&quot;c&quot;:3},&quot;duration&quot;:{&quot;t&quot;:4773,&quot;min&quot;:767,&quot;max&quot;:2266,&quot;sos&quot;:8750645,&quot;c&quot;:3},&quot;time&quot;:{&quot;t&quot;:3793,&quot;min&quot;:1263,&quot;max&quot;:1266,&quot;sos&quot;:4795621,&quot;c&quot;:3}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;bam.nr-data.net&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;bam.nr-data.net:443&quot;,&quot;pathname&quot;:&quot;/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:837},&quot;rxSize&quot;:{&quot;t&quot;:24},&quot;duration&quot;:{&quot;t&quot;:750},&quot;cbTime&quot;:{&quot;t&quot;:1},&quot;time&quot;:{&quot;t&quot;:3586}}}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/jserrors/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=8667&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=8663&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account-2,215" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">bel.6;e,&apos;fp,vf,1;6,&apos;cls,0.;e,&apos;fcp,vf,1;6,1,0.;e,&apos;load,15a,1;6,1,0.6959881219241818;e,&apos;fi,20n,6;5,&apos;type,&apos;keydown;5,&apos;net-etype,&apos;4g;6,&apos;net-rtt,100.;6,&apos;net-dlink,1.3;6,&apos;fid,1.;6,1,0.7031037437685657;e,&apos;lcp,1sy,8;6,&apos;size,43264.;5,&apos;eid,&apos;emptyImage;5,7,8;6,9,100.;6,a,1.3;5,&apos;elUrl,&apos;http://sbilifeload.crmnext.com/SNLOAD7/app/assets_102319_1/css/imgcss/nodata-found.png;5,&apos;elTag,&apos;IMG;6,1,0.701998731537995;e,&apos;pageHide,6ok,1;6,1,0.7042694920681101;e,&apos;unload,6ok,1;6,1,0.7042694920681101</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=8663&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/NRJS-2551f7a729197a720f4-2,220" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="a" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">a</stringProp>
                    <stringProp name="Argument.value">527472636</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">1216.487a282</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="to" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">to</stringProp>
                    <stringProp name="Argument.value">YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="rst" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">rst</stringProp>
                    <stringProp name="Argument.value">1250</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ck" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ck</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ap" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ap</stringProp>
                    <stringProp name="Argument.value">306</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="be" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">be</stringProp>
                    <stringProp name="Argument.value">571</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fe" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fe</stringProp>
                    <stringProp name="Argument.value">1165</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dc" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">dc</stringProp>
                    <stringProp name="Argument.value">1155</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="af" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">af</stringProp>
                    <stringProp name="Argument.value">err,xhr,stn,ins,spa</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="perf" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">perf</stringProp>
                    <stringProp name="Argument.value">%7B%22timing%22:%7B%22of%22:1657168090366,%22n%22:0,%22u%22:530,%22ue%22:534,%22f%22:3,%22dn%22:3,%22dne%22:3,%22c%22:3,%22ce%22:3,%22rq%22:5,%22rp%22:503,%22rpe%22:505,%22dl%22:542,%22di%22:1156,%22ds%22:1156,%22de%22:1164,%22dc%22:1165,%22l%22:1165,%22le%22:1173%7D,%22navigation%22:%7B%7D%7D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fp</stringProp>
                    <stringProp name="Argument.value">941</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fcp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fcp</stringProp>
                    <stringProp name="Argument.value">948</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="jsonp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">jsonp</stringProp>
                    <stringProp name="Argument.value">NREUM.setToken</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/1/NRJS-2551f7a729197a720f4</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=2019&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account&amp;st=1657168090366-2,221" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;res&quot;:[{&quot;n&quot;:&quot;navigationStart&quot;,&quot;s&quot;:0,&quot;e&quot;:0,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;unloadEventStart&quot;,&quot;s&quot;:530,&quot;e&quot;:530,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;unloadEventEnd&quot;,&quot;s&quot;:534,&quot;e&quot;:534,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;fetchStart&quot;,&quot;s&quot;:3,&quot;e&quot;:3,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domainLookupStart&quot;,&quot;s&quot;:3,&quot;e&quot;:3,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domainLookupEnd&quot;,&quot;s&quot;:3,&quot;e&quot;:3,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;connectStart&quot;,&quot;s&quot;:3,&quot;e&quot;:3,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;connectEnd&quot;,&quot;s&quot;:3,&quot;e&quot;:3,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;requestStart&quot;,&quot;s&quot;:5,&quot;e&quot;:5,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;responseStart&quot;,&quot;s&quot;:503,&quot;e&quot;:503,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;responseEnd&quot;,&quot;s&quot;:505,&quot;e&quot;:505,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domLoading&quot;,&quot;s&quot;:542,&quot;e&quot;:542,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domInteractive&quot;,&quot;s&quot;:1156,&quot;e&quot;:1156,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domContentLoadedEventStart&quot;,&quot;s&quot;:1156,&quot;e&quot;:1156,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domContentLoadedEventEnd&quot;,&quot;s&quot;:1164,&quot;e&quot;:1164,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domComplete&quot;,&quot;s&quot;:1165,&quot;e&quot;:1165,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;loadEventStart&quot;,&quot;s&quot;:1165,&quot;e&quot;:1165,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;loadEventEnd&quot;,&quot;s&quot;:1173,&quot;e&quot;:1173,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=2019&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account&amp;st=1657168090366</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=2072&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account-2,222" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">bel.7;1,2,,zd,yr,2o,&apos;initialPageLoad,&apos;http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account,1,1,,,,8i,!!&apos;a0e4911a-08af-4036-ac9b-221bcd2f2e6a,&apos;1,q5,qc;2,,ha,97,3,4,&apos;GET,5k,&apos;sbilifeload.crmnext.com:80,&apos;/snload7/app/CRMNextCache/CustomNavigation,,cop,,&apos;3,&apos;532087c374dc9cbe,&apos;f62b61fa138367b0fdbeb6d016d2af1b,l5aj3ejx;2,,v8,43,2,1,4,5k,5,&apos;/snload7/app/CRMNextObject/GetPushByDevice,,1n,1,&apos;8,&apos;77e0966a01f8e9c8,&apos;3dbb5a172570d04957aa79d2d0530b08,l5aj3exu;b,eq,!4,!-er,,,,!,2,du,2,11,h2,,8,1,,8</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=2072&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${constantTimer}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="BA_07_Click_on_Policy_tab" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/DomainLookup/LoadList?x=fafdmzdkd3w65kmdb5cwjdkjrfpjmx8scs6xf65gm4ver89vda6rk4kbl59abdxs5y7mmunlq93c2chkqkvsmv75uwsyqvgzcdnr2dq-2,223" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;LookUpRequest&quot;:{&quot;ControlKey&quot;:&quot;AC_RELATED_CONTRACTS&quot;,&quot;ObjectContext&quot;:{&quot;TopParent&quot;:54,&quot;Lo&quot;:1,&quot;Hi&quot;:2,&quot;Email&quot;:&quot;&quot;,&quot;Low&quot;:1,&quot;High&quot;:2,&quot;PriceBookID&quot;:0,&quot;PriceBookName&quot;:&quot;&quot;,&quot;ItemType&quot;:7,&quot;FormCacheKey&quot;:&quot;602_Account_1_100002False_Details_Classic_100294_1__None_-10__20220705105031&quot;,&quot;ObjectId&quot;:54,&quot;HistoryId&quot;:-1,&quot;ItemName&quot;:&quot;Thor&quot;,&quot;StatusCodeId&quot;:27,&quot;AccountId&quot;:54,&quot;LayoutId&quot;:100002,&quot;LayoutType&quot;:2,&quot;LayoutViewType&quot;:0,&quot;IsPopulateTemplate&quot;:true,&quot;ProcessID&quot;:11003,&quot;ItemOwnerId&quot;:12104,&quot;IsEditable&quot;:true,&quot;OpenerObjectQueryString&quot;:&quot;vsmjtqsuurhq69qek5jysx3dlymc3gw4t682puh3xuvptap9wbmvgp4g35lanp8a69k69ca85h4b48yptcxrhacsfmytcttxexmvjppfjhm2u6h2mub6lfpskgejw9grws6srwlqd94sdmx37djtj7gds3&quot;},&quot;AllowedOptions&quot;:null,&quot;LinkDataContext&quot;:{&quot;Linking&quot;:null,&quot;References&quot;:null,&quot;ReferenceControls&quot;:null},&quot;Model&quot;:null,&quot;ExistingValues&quot;:null,&quot;GraphType&quot;:null,&quot;Caption&quot;:&quot;Related Policies&quot;,&quot;ControlProperties&quot;:{&quot;ReadOnly&quot;:true}},&quot;ListingRequest&quot;:{&quot;ContentFilter&quot;:{&quot;PageIndex&quot;:1,&quot;PageSize&quot;:0,&quot;ABCFilter&quot;:&quot;&quot;,&quot;OrderBy&quot;:0,&quot;OrderField&quot;:&quot;&quot;,&quot;Filters&quot;:{},&quot;NextPageToken&quot;:&quot;&quot;}},&quot;RequestMode&quot;:1,&quot;IsContinueOnNoSelection&quot;:false}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/DomainLookup/LoadList?x=fafdmzdkd3w65kmdb5cwjdkjrfpjmx8scs6xf65gm4ver89vda6rk4kbl59abdxs5y7mmunlq93c2chkqkvsmv75uwsyqvgzcdnr2dq</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="TestPlan.comments">fafdmzdkd3w65kmdb5cwjdkjrfpjmx8scs6xf65gm4ver89vda6rk4kbl59abdxs5y7mmunlq93c2chkqkvsmv75uwsyqvgzcdnr2dq</stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account?x=efa8kjuwhuerclrn2cn8te7aurqe8z6mzz3szcwscmt2vj64npd9edfnucnge67mljkds8rcuuzpq3l4wxkd83vymw&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiODU1ODQyNzEyMmI0NTI1YSIsInRyIjoiYzBiY2M1MzJmNDMxMGIyYTE3ODM3MmQ4NDQ3NDE3OTciLCJ0aSI6MTY1NzE2ODEwMDY2OX19</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-8558427122b4525a----1657168100669</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-c0bcc532f4310b2a178372d844741797-8558427122b4525a-01</stringProp>
                  </elementProp>
                  <elementProp name="x-requested-with" elementType="Header">
                    <stringProp name="Header.name">x-requested-with</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Csrf_2227" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Csrf_2227</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">Contract?x=</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;,</stringProp>
                <stringProp name="BoundaryExtractor.default">NF_2227</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=11256&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account&amp;ptid=c80adaff-0001-bad9-593e-0181d6eabcc2-2,224" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">bel.6;e,&apos;fp,q5,1;6,&apos;cls,0.;e,&apos;fcp,qc,1;6,1,0.;e,&apos;load,wd,1;6,1,0.000006380381858427327;e,&apos;fi,2te,6;5,&apos;type,&apos;keydown;5,&apos;net-etype,&apos;4g;6,&apos;net-rtt,100.;6,&apos;net-dlink,1.3;6,&apos;fid,1.;6,1,0.3551454804098721;e,&apos;lcp,qc,8;6,&apos;size,3900.;5,&apos;eid,&apos;style-switcher;5,7,8;6,9,100.;6,a,1.3;5,&apos;elUrl,&apos;http://sbilifeload.crmnext.com/SNLOAD7/app/assets_102319_1/img/crmlogo.png;5,&apos;elTag,&apos;IMG;6,1,0.;e,&apos;pageHide,301,1;6,1,0.3551454804098721</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=11256&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account&amp;ptid=c80adaff-0001-bad9-593e-0181d6eabcc2</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${constantTimer}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="BA_08_Click_on_New_policy" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=13445&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account&amp;ptid=c80adaff-0001-bad9-593e-0181d6eabcc2&amp;st=1657168090366-2,225" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;res&quot;:[{&quot;n&quot;:&quot;link&quot;,&quot;s&quot;:548,&quot;e&quot;:548,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/theme-font.css&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;link&quot;,&quot;s&quot;:548,&quot;e&quot;:548,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/theme/theme18/root.css&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;link&quot;,&quot;s&quot;:548,&quot;e&quot;:548,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/base/theme.css&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;link&quot;,&quot;s&quot;:549,&quot;e&quot;:549,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/theme-icon.css&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:549,&quot;e&quot;:549,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:549,&quot;e&quot;:549,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/tab.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:549,&quot;e&quot;:549,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery-migrate.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:549,&quot;e&quot;:549,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/json2.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:549,&quot;e&quot;:549,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/modernizr.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:549,&quot;e&quot;:549,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery-ui.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:550,&quot;e&quot;:550,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery.dialogextend.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:550,&quot;e&quot;:550,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/sha/sha-all.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:550,&quot;e&quot;:550,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/sha/shainitialization.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:550,&quot;e&quot;:550,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/CryptoJS.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:550,&quot;e&quot;:550,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/encodedecode.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:550,&quot;e&quot;:550,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/moment.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:550,&quot;e&quot;:550,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/React/react.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:550,&quot;e&quot;:550,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/React/react-dom.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:551,&quot;e&quot;:551,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/React/create-react-class.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:551,&quot;e&quot;:551,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery.slimscroll.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:551,&quot;e&quot;:551,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/prettify.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:551,&quot;e&quot;:551,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery.webui-popover.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:551,&quot;e&quot;:551,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/jquery.showLoading.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:551,&quot;e&quot;:551,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/logouthelper.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:551,&quot;e&quot;:551,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/browserdetection.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:552,&quot;e&quot;:552,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/popupopenerhelper.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:552,&quot;e&quot;:552,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/commonhelper.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:552,&quot;e&quot;:552,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/automation.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:552,&quot;e&quot;:552,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/newobjectlayoutmenu.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:552,&quot;e&quot;:552,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnextinit.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:552,&quot;e&quot;:552,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/timeouthelper.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:552,&quot;e&quot;:552,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/bubble.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:552,&quot;e&quot;:552,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/core.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:553,&quot;e&quot;:553,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/charts.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:553,&quot;e&quot;:553,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/amcharts.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:553,&quot;e&quot;:553,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/amcharts3-react.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:553,&quot;e&quot;:553,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/pie.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:553,&quot;e&quot;:553,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/serial.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:553,&quot;e&quot;:553,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/funnel.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:553,&quot;e&quot;:553,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/gauge.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:553,&quot;e&quot;:553,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/amcharts/gantt.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:554,&quot;e&quot;:554,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/baseframe.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:554,&quot;e&quot;:554,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/nav.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:554,&quot;e&quot;:554,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/controls/navigation_tab.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:555,&quot;e&quot;:555,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/searchcontrol.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:555,&quot;e&quot;:555,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/ReactComponents/QuickLinkTemplate.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:556,&quot;e&quot;:556,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/crmnext/sidebarcontrol.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:556,&quot;e&quot;:556,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/MOCTreeHierarchy/MOCTreeHierarchy.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:557,&quot;e&quot;:557,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/ReactComponents/moctreehierarchy/MOCTreeAddItemComponent.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:557,&quot;e&quot;:557,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/rptmap.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:557,&quot;e&quot;:557,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/externalcommon.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:557,&quot;e&quot;:557,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/twitter.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:557,&quot;e&quot;:557,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/facebook.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:558,&quot;e&quot;:558,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/linkedin.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:558,&quot;e&quot;:558,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/googleplus.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:558,&quot;e&quot;:558,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/webrupee.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:558,&quot;e&quot;:558,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/controls/crmnext_notifications.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:558,&quot;e&quot;:558,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/signalR/jquery.signalR-2.2.0.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:558,&quot;e&quot;:558,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/js/ckeditor/ckeditor.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:558,&quot;e&quot;:558,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/controls/crmnext_controls.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:558,&quot;e&quot;:558,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/proptypesextensions.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:559,&quot;e&quot;:559,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/assets_102319_1/js/ui_controls/crmnext.uicontrols.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:1164,&quot;e&quot;:1166,&quot;o&quot;:&quot;https://js-agent.newrelic.com:443/nr-spa-1216.min.js&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;script&quot;,&quot;s&quot;:1250,&quot;e&quot;:2008,&quot;o&quot;:&quot;https://bam.nr-data.net:443/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:559,&quot;e&quot;:559,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/img/crmlogo.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:1096,&quot;e&quot;:1096,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/img/scss/image/crmlogo.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:1117,&quot;e&quot;:1117,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/media/ObjectImage&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;img&quot;,&quot;s&quot;:10713,&quot;e&quot;:10713,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/imgcss/nodata-found.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:622,&quot;e&quot;:622,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:952,&quot;e&quot;:952,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:952,&quot;e&quot;:952,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:953,&quot;e&quot;:953,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2021,&quot;e&quot;:2021,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2072,&quot;e&quot;:2072,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2688,&quot;e&quot;:2688,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2689,&quot;e&quot;:2689,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2691,&quot;e&quot;:2691,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2921,&quot;e&quot;:2921,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2922,&quot;e&quot;:2922,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:2923,&quot;e&quot;:2924,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:11256,&quot;e&quot;:11256,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:12048,&quot;e&quot;:12048,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:12048,&quot;e&quot;:12048,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:12049,&quot;e&quot;:12049,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:646,&quot;e&quot;:646,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-116-300-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:646,&quot;e&quot;:646,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-300-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:648,&quot;e&quot;:648,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-117-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:648,&quot;e&quot;:648,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-118-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:648,&quot;e&quot;:648,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:650,&quot;e&quot;:650,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-117-500-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:650,&quot;e&quot;:650,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-500-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:652,&quot;e&quot;:652,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-700-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:654,&quot;e&quot;:654,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/icon-font/desktop/theme/fontello.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:661,&quot;e&quot;:661,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-116-300-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:661,&quot;e&quot;:661,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-300-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:664,&quot;e&quot;:664,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-117-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:664,&quot;e&quot;:664,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-118-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:664,&quot;e&quot;:664,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:666,&quot;e&quot;:666,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-117-500-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:666,&quot;e&quot;:666,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-500-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:668,&quot;e&quot;:668,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-700-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:670,&quot;e&quot;:670,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/icon-font/desktop/theme/fontello.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:676,&quot;e&quot;:676,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-116-300-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:676,&quot;e&quot;:676,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-300-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:678,&quot;e&quot;:678,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-117-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:678,&quot;e&quot;:678,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-118-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:679,&quot;e&quot;:679,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:681,&quot;e&quot;:681,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-117-500-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:681,&quot;e&quot;:681,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-500-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:683,&quot;e&quot;:683,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-700-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:685,&quot;e&quot;:685,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/icon-font/desktop/theme/fontello.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:694,&quot;e&quot;:694,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-116-300-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:694,&quot;e&quot;:694,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-300-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:696,&quot;e&quot;:696,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-117-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:697,&quot;e&quot;:697,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-118-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:697,&quot;e&quot;:697,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:699,&quot;e&quot;:699,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-117-500-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:699,&quot;e&quot;:699,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-500-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:701,&quot;e&quot;:701,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-700-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:703,&quot;e&quot;:703,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/icon-font/desktop/theme/fontello.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:930,&quot;e&quot;:930,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-116-300-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:930,&quot;e&quot;:930,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-300-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:932,&quot;e&quot;:932,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-117-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:932,&quot;e&quot;:932,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-118-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:932,&quot;e&quot;:932,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-400-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:934,&quot;e&quot;:934,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-117-500-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:934,&quot;e&quot;:934,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-500-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:936,&quot;e&quot;:936,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/web-fonts/noto-sans/noto-sans-tc-119-700-normal.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:938,&quot;e&quot;:938,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/icon-font/desktop/theme/fontello.woff2&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;css&quot;,&quot;s&quot;:1130,&quot;e&quot;:1130,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/SNLOAD7/app/assets_102319_1/css/imgcss/down-arrow.png&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:952,&quot;e&quot;:952,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:2689,&quot;e&quot;:2689,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:2922,&quot;e&quot;:2922,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:12048,&quot;e&quot;:12048,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:953,&quot;e&quot;:954,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:954,&quot;e&quot;:956,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:956,&quot;e&quot;:956,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:1152,&quot;e&quot;:1154,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:1154,&quot;e&quot;:1155,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:1155,&quot;e&quot;:1155,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:1165,&quot;e&quot;:1165,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2691,&quot;e&quot;:2692,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2692,&quot;e&quot;:2692,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2692,&quot;e&quot;:2694,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2924,&quot;e&quot;:2924,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2924,&quot;e&quot;:2924,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:2924,&quot;e&quot;:2925,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:10722,&quot;e&quot;:10723,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;img#emptyImage.emptyImage&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:12049,&quot;e&quot;:12049,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:12049,&quot;e&quot;:12049,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:12049,&quot;e&quot;:12049,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:991,&quot;e&quot;:991,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:991,&quot;e&quot;:991,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:992,&quot;e&quot;:994,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1064,&quot;e&quot;:1064,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1064,&quot;e&quot;:1065,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1065,&quot;e&quot;:1080,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1122,&quot;e&quot;:1122,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1122,&quot;e&quot;:1122,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1122,&quot;e&quot;:1125,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1126,&quot;e&quot;:1126,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1126,&quot;e&quot;:1126,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1126,&quot;e&quot;:1126,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1128,&quot;e&quot;:1128,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1129,&quot;e&quot;:1129,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1129,&quot;e&quot;:1129,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1163,&quot;e&quot;:1163,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1163,&quot;e&quot;:1164,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1164,&quot;e&quot;:1164,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1213,&quot;e&quot;:1213,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1213,&quot;e&quot;:1213,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1213,&quot;e&quot;:1213,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1273,&quot;e&quot;:1273,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1273,&quot;e&quot;:1273,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:1273,&quot;e&quot;:1273,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;unknown&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10242,&quot;e&quot;:10242,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10242,&quot;e&quot;:10243,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10243,&quot;e&quot;:10243,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10284,&quot;e&quot;:10284,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10284,&quot;e&quot;:10284,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10284,&quot;e&quot;:10284,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10284,&quot;e&quot;:10284,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10284,&quot;e&quot;:10284,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10285,&quot;e&quot;:10285,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10285,&quot;e&quot;:10285,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10285,&quot;e&quot;:10285,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10285,&quot;e&quot;:10285,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10285,&quot;e&quot;:10285,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10285,&quot;e&quot;:10285,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10285,&quot;e&quot;:10285,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10285,&quot;e&quot;:10285,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10285,&quot;e&quot;:10285,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10285,&quot;e&quot;:10285,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10285,&quot;e&quot;:10285,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10285,&quot;e&quot;:10285,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10285,&quot;e&quot;:10285,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10285,&quot;e&quot;:10285,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10285,&quot;e&quot;:10285,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10286,&quot;e&quot;:10286,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10286,&quot;e&quot;:10286,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10286,&quot;e&quot;:10286,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10286,&quot;e&quot;:10286,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10286,&quot;e&quot;:10286,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10286,&quot;e&quot;:10286,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10286,&quot;e&quot;:10286,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10286,&quot;e&quot;:10286,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10286,&quot;e&quot;:10286,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10286,&quot;e&quot;:10286,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10286,&quot;e&quot;:10286,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10284,&quot;e&quot;:10286,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10287,&quot;e&quot;:10287,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10302,&quot;e&quot;:10302,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10302,&quot;e&quot;:10302,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10302,&quot;e&quot;:10303,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10320,&quot;e&quot;:10320,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10320,&quot;e&quot;:10320,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10320,&quot;e&quot;:10320,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10486,&quot;e&quot;:10486,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10486,&quot;e&quot;:10487,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10487,&quot;e&quot;:10496,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10496,&quot;e&quot;:10496,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10496,&quot;e&quot;:10496,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10496,&quot;e&quot;:10496,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10496,&quot;e&quot;:10496,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10496,&quot;e&quot;:10496,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10496,&quot;e&quot;:10496,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10496,&quot;e&quot;:10496,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10496,&quot;e&quot;:10496,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10496,&quot;e&quot;:10496,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10496,&quot;e&quot;:10496,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10496,&quot;e&quot;:10496,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10496,&quot;e&quot;:10496,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10497,&quot;e&quot;:10497,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10497,&quot;e&quot;:10497,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10497,&quot;e&quot;:10497,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10497,&quot;e&quot;:10497,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10497,&quot;e&quot;:10497,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10497,&quot;e&quot;:10497,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10497,&quot;e&quot;:10497,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10497,&quot;e&quot;:10497,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10497,&quot;e&quot;:10497,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10497,&quot;e&quot;:10497,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10497,&quot;e&quot;:10497,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10497,&quot;e&quot;:10497,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10497,&quot;e&quot;:10497,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10497,&quot;e&quot;:10497,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10497,&quot;e&quot;:10497,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10497,&quot;e&quot;:10497,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10497,&quot;e&quot;:10497,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10497,&quot;e&quot;:10497,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10498,&quot;e&quot;:10498,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10498,&quot;e&quot;:10498,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10498,&quot;e&quot;:10498,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10498,&quot;e&quot;:10498,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10498,&quot;e&quot;:10498,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10498,&quot;e&quot;:10498,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10498,&quot;e&quot;:10498,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10498,&quot;e&quot;:10498,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10498,&quot;e&quot;:10498,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10498,&quot;e&quot;:10498,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10498,&quot;e&quot;:10498,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10498,&quot;e&quot;:10498,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10505,&quot;e&quot;:10505,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10505,&quot;e&quot;:10506,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10506,&quot;e&quot;:10507,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10715,&quot;e&quot;:10716,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10716,&quot;e&quot;:10717,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:10717,&quot;e&quot;:10717,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;DOMContentLoaded&quot;,&quot;s&quot;:1155,&quot;e&quot;:1156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;DOMContentLoaded&quot;,&quot;s&quot;:1156,&quot;e&quot;:1156,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;DOMContentLoaded&quot;,&quot;s&quot;:1156,&quot;e&quot;:1162,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;DOMContentLoaded&quot;,&quot;s&quot;:1162,&quot;e&quot;:1164,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1178,&quot;e&quot;:1179,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1179,&quot;e&quot;:1179,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1180,&quot;e&quot;:1180,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1180,&quot;e&quot;:1182,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1182,&quot;e&quot;:1182,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1182,&quot;e&quot;:1182,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1182,&quot;e&quot;:1213,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1213,&quot;e&quot;:1213,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1213,&quot;e&quot;:1215,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1220,&quot;e&quot;:1220,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1220,&quot;e&quot;:1242,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1242,&quot;e&quot;:1242,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1242,&quot;e&quot;:1243,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1243,&quot;e&quot;:1244,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1244,&quot;e&quot;:1244,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1244,&quot;e&quot;:1244,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1244,&quot;e&quot;:1244,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1244,&quot;e&quot;:1244,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1244,&quot;e&quot;:1244,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1244,&quot;e&quot;:1244,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1244,&quot;e&quot;:1244,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1244,&quot;e&quot;:1244,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1245,&quot;e&quot;:1245,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1245,&quot;e&quot;:1246,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1246,&quot;e&quot;:1246,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1246,&quot;e&quot;:1246,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1251,&quot;e&quot;:1251,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1251,&quot;e&quot;:1251,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:1252,&quot;e&quot;:1253,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:2057,&quot;e&quot;:2058,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:2069,&quot;e&quot;:2073,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:3177,&quot;e&quot;:3192,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:3195,&quot;e&quot;:3196,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:3715,&quot;e&quot;:3715,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:10709,&quot;e&quot;:10718,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:11253,&quot;e&quot;:11258,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;fp&quot;,&quot;s&quot;:941,&quot;e&quot;:941,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;fcp&quot;,&quot;s&quot;:948,&quot;e&quot;:948,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:622,&quot;e&quot;:956,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextCache/CustomNavigation&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:1124,&quot;e&quot;:1271,&quot;o&quot;:&quot;200 GET: sbilifeload.crmnext.com:80/snload7/app/CRMNextObject/GetPushByDevice&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:2021,&quot;e&quot;:2693,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:2072,&quot;e&quot;:2924,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:10303,&quot;e&quot;:10444,&quot;o&quot;:&quot;200 POST: sbilifeload.crmnext.com:80/snload7/app/DomainLookup/LoadList&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:11257,&quot;e&quot;:12049,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:2021,&quot;e&quot;:2686,&quot;o&quot;:&quot;https://bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:2072,&quot;e&quot;:2918,&quot;o&quot;:&quot;https://bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:11257,&quot;e&quot;:12047,&quot;o&quot;:&quot;https://bam.nr-data.net:443/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;requestAnimationFrame&quot;,&quot;s&quot;:3192,&quot;e&quot;:3192,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;requestAnimationFrame&quot;},{&quot;n&quot;:&quot;requestAnimationFrame&quot;,&quot;s&quot;:3196,&quot;e&quot;:3197,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;requestAnimationFrame&quot;},{&quot;n&quot;:&quot;requestAnimationFrame&quot;,&quot;s&quot;:3212,&quot;e&quot;:3213,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;requestAnimationFrame&quot;},{&quot;n&quot;:&quot;requestAnimationFrame&quot;,&quot;s&quot;:3229,&quot;e&quot;:3230,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;requestAnimationFrame&quot;},{&quot;n&quot;:&quot;requestAnimationFrame&quot;,&quot;s&quot;:3245,&quot;e&quot;:3246,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;requestAnimationFrame&quot;},{&quot;n&quot;:&quot;requestAnimationFrame&quot;,&quot;s&quot;:3262,&quot;e&quot;:3263,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;requestAnimationFrame&quot;},{&quot;n&quot;:&quot;requestAnimationFrame&quot;,&quot;s&quot;:3278,&quot;e&quot;:3279,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;requestAnimationFrame&quot;},{&quot;n&quot;:&quot;requestAnimationFrame&quot;,&quot;s&quot;:3295,&quot;e&quot;:3296,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;requestAnimationFrame&quot;},{&quot;n&quot;:&quot;requestAnimationFrame&quot;,&quot;s&quot;:3311,&quot;e&quot;:3312,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;requestAnimationFrame&quot;},{&quot;n&quot;:&quot;fi&quot;,&quot;s&quot;:3650,&quot;e&quot;:3650,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;fid&quot;,&quot;s&quot;:3650,&quot;e&quot;:3651,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:3651,&quot;e&quot;:3715,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;body.bg-light-gray&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:9047,&quot;e&quot;:9048,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;body.bg-light-gray&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:11177,&quot;e&quot;:11180,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;body.bg-light-gray&quot;},{&quot;n&quot;:&quot;lcp&quot;,&quot;s&quot;:948,&quot;e&quot;:948,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;pageHide&quot;,&quot;s&quot;:3889,&quot;e&quot;:3889,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:9278,&quot;e&quot;:9286,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;i.icon.icon-cardview.f20.white&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:9306,&quot;e&quot;:9479,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.isInformational.form-element.form-element--labelLeft&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:9324,&quot;e&quot;:9712,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.tab__section.justify-between&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:9328,&quot;e&quot;:9679,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;label.section-heading.f13.primary.ff-medium.flex-1&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:9379,&quot;e&quot;:9463,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;label.form-element__label&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:9728,&quot;e&quot;:9834,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;li.tablist__item.ph-16.relative.pointer.primary&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:9845,&quot;e&quot;:9912,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.flex.items-center.pointer.ttu.f12.wt--100.ht40&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:9928,&quot;e&quot;:9978,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.tablist__item--child.tc.truncate.wt--100&quot;},{&quot;n&quot;:&quot;selectionchange&quot;,&quot;s&quot;:10145,&quot;e&quot;:10145,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;document&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:10243,&quot;e&quot;:10243,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.tablist__item--child.tc.truncate.wt--100&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:10244,&quot;e&quot;:10244,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.tablist__item--child.tc.truncate.wt--100&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:10244,&quot;e&quot;:10320,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.tablist__item--child.tc.truncate.wt--100&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:10321,&quot;e&quot;:10323,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.tablist__item--child.tc.truncate.wt--100&quot;},{&quot;n&quot;:&quot;react-click&quot;,&quot;s&quot;:10244,&quot;e&quot;:10276,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;fetch&quot;,&quot;s&quot;:10302,&quot;e&quot;:10443,&quot;o&quot;:&quot;http://sbilifeload.crmnext.com:80/snload7/app/DomainLookup/LoadList&quot;,&quot;t&quot;:&quot;resource&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=13445&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account&amp;ptid=c80adaff-0001-bad9-593e-0181d6eabcc2&amp;st=1657168090366</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/domainreliability/upload-2,226" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;http_response_code&quot;:307,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;HTTPS&quot;,&quot;request_age_ms&quot;:62396,&quot;request_elapsed_ms&quot;:367,&quot;sample_rate&quot;:0.05,&quot;server_ip&quot;:&quot;127.0.0.1:8888&quot;,&quot;status&quot;:&quot;ok&quot;,&quot;url&quot;:&quot;https://beacons.gcp.gvt2.com/domainreliability/upload&quot;,&quot;was_proxied&quot;:true},{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;http_response_code&quot;:204,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;HTTP&quot;,&quot;request_age_ms&quot;:62027,&quot;request_elapsed_ms&quot;:4133,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;https://e2c27.gcp.gvt2.com/&quot;,&quot;was_proxied&quot;:true}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">beacons.gcp.gvt2.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/crmnextobject/new/Contract-2,227" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="x" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x</stringProp>
                    <stringProp name="Argument.value">${Csrf_2227}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="mdi" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">mdi</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/crmnextobject/new/Contract</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account?x=efa8kjuwhuerclrn2cn8te7aurqe8z6mzz3szcwscmt2vj64npd9edfnucnge67mljkds8rcuuzpq3l4wxkd83vymw&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Csrf_2232" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Csrf_2232</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">GetEditableFormMetaData?x=</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">NF_2232</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Crsf_2233" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Crsf_2233</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">LoadTopNavContent(&apos;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&apos;,</stringProp>
                <stringProp name="BoundaryExtractor.default">NF_2233</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/FormApi/GetEditableFormMetaData-2,232" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="x" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x</stringProp>
                    <stringProp name="Argument.value">${Csrf_2232}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/FormApi/GetEditableFormMetaData</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Contract?x=khcwjqkmpvu3rsstdpwt487hrd63uk9svb2af3eu84wgym959p6nnxrvlh68q9r8kfgmbdb6jnq5ra63lubqwaq6afjujae53yug7hea3h82hfg2q89aaemp4qszlqpd6u2bmhdkxf4k32z5plbewrnj68fgxk2nv4ewfd562h2hdrhjw929lxr6n27cylyn8r6j3uezf2m2cqysf6aqhmns4h2cmclau2n7jajx2pkxcdsnnwjvtw8jed7h8l9qq3tvjr766kbkwpsvvlu6duwb3l6pdga3ezm37nz&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-656027569">Policy Insured Name</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/jserrors/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=15592&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account&amp;ptid=c80adaff-0001-bad9-593e-0181d6eabcc2-2,229" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;sm&quot;:[{&quot;params&quot;:{&quot;name&quot;:&quot;Framework/React/Detected&quot;},&quot;stats&quot;:{&quot;c&quot;:1}},{&quot;params&quot;:{&quot;name&quot;:&quot;Framework/Jquery/Detected&quot;},&quot;stats&quot;:{&quot;c&quot;:1}},{&quot;params&quot;:{&quot;name&quot;:&quot;Ajax/Events/Excluded/Agent&quot;},&quot;stats&quot;:{&quot;c&quot;:4}}],&quot;xhr&quot;:[{&quot;params&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/CRMNextCache/CustomNavigation&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;rxSize&quot;:{&quot;t&quot;:16441},&quot;duration&quot;:{&quot;t&quot;:334},&quot;cbTime&quot;:{&quot;t&quot;:3},&quot;time&quot;:{&quot;t&quot;:622}}},{&quot;params&quot;:{&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/CRMNextObject/GetPushByDevice&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:0},&quot;rxSize&quot;:{&quot;t&quot;:59},&quot;duration&quot;:{&quot;t&quot;:147},&quot;time&quot;:{&quot;t&quot;:1124}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;bam.nr-data.net&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;bam.nr-data.net:443&quot;,&quot;pathname&quot;:&quot;/resources/1/NRJS-2551f7a729197a720f4&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:2,&quot;txSize&quot;:{&quot;t&quot;:38208,&quot;min&quot;:1203,&quot;max&quot;:37005,&quot;sos&quot;:1370817234,&quot;c&quot;:2},&quot;rxSize&quot;:{&quot;t&quot;:72,&quot;min&quot;:36,&quot;max&quot;:36,&quot;sos&quot;:2592,&quot;c&quot;:2},&quot;duration&quot;:{&quot;t&quot;:1545,&quot;min&quot;:672,&quot;max&quot;:873,&quot;sos&quot;:1213713,&quot;c&quot;:2},&quot;cbTime&quot;:{&quot;t&quot;:2,&quot;min&quot;:0,&quot;max&quot;:2,&quot;sos&quot;:4,&quot;c&quot;:2},&quot;time&quot;:{&quot;t&quot;:15470,&quot;min&quot;:2021,&quot;max&quot;:13449,&quot;sos&quot;:184960042,&quot;c&quot;:2}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;bam.nr-data.net&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;bam.nr-data.net:443&quot;,&quot;pathname&quot;:&quot;/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:2,&quot;txSize&quot;:{&quot;t&quot;:921,&quot;min&quot;:417,&quot;max&quot;:504,&quot;sos&quot;:427905,&quot;c&quot;:2},&quot;rxSize&quot;:{&quot;t&quot;:48,&quot;min&quot;:24,&quot;max&quot;:24,&quot;sos&quot;:1152,&quot;c&quot;:2},&quot;duration&quot;:{&quot;t&quot;:1644,&quot;min&quot;:792,&quot;max&quot;:852,&quot;sos&quot;:1353168,&quot;c&quot;:2},&quot;cbTime&quot;:{&quot;t&quot;:0,&quot;min&quot;:0,&quot;max&quot;:0,&quot;sos&quot;:0,&quot;c&quot;:2},&quot;time&quot;:{&quot;t&quot;:13329,&quot;min&quot;:2072,&quot;max&quot;:11257,&quot;sos&quot;:131013233,&quot;c&quot;:2}}},{&quot;params&quot;:{&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/DomainLookup/LoadList&quot;,&quot;method&quot;:&quot;POST&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:1075},&quot;rxSize&quot;:{&quot;t&quot;:3254},&quot;duration&quot;:{&quot;t&quot;:141},&quot;time&quot;:{&quot;t&quot;:10303}}}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/jserrors/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=15592&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account&amp;ptid=c80adaff-0001-bad9-593e-0181d6eabcc2</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=15595&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account&amp;ptid=c80adaff-0001-bad9-593e-0181d6eabcc2&amp;st=1657168090366-2,230" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;res&quot;:[{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:13449,&quot;e&quot;:13449,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:14318,&quot;e&quot;:14318,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:14318,&quot;e&quot;:14318,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;readystatechange&quot;,&quot;s&quot;:14321,&quot;e&quot;:14321,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;setTimeout&quot;,&quot;s&quot;:13443,&quot;e&quot;:13450,&quot;o&quot;:&quot;window&quot;,&quot;t&quot;:&quot;timer&quot;},{&quot;n&quot;:&quot;typing&quot;,&quot;s&quot;:13751,&quot;e&quot;:13752,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;body.bg-light-gray&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:13914,&quot;e&quot;:13916,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.flex.items-center.pointer.ttu.f12.wt--100.ht40&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:13927,&quot;e&quot;:13929,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;li.tablist__item.ph-16.relative.pointer.primary.ff-bold.tablist__item--active&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:13945,&quot;e&quot;:14412,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.tab__section.justify-between&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:13961,&quot;e&quot;:14393,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;label.section-heading.f13.primary.ff-medium.flex-1&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:13995,&quot;e&quot;:14479,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.crm-table__filterBox&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:14011,&quot;e&quot;:14013,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:14028,&quot;e&quot;:14128,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.empty-view.tc.pv-30.undefined&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:14094,&quot;e&quot;:14110,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;img#emptyImage.emptyImage&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:14161,&quot;e&quot;:14343,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;ul.crm-card-tab.relative.overflow-auto&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:14177,&quot;e&quot;:14294,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.page-header&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:14360,&quot;e&quot;:14361,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.tab-manu-container.tab-menu.detail-tab.overflow-hidden.flex.bb.b--light-gray.relative&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:14427,&quot;e&quot;:14428,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.section-contents&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:14444,&quot;e&quot;:14461,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;div.isInformational.form-element&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:14494,&quot;e&quot;:14495,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;a.ph-6.acd-link.flex.items-center&quot;},{&quot;n&quot;:&quot;mousing&quot;,&quot;s&quot;:14512,&quot;e&quot;:14576,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.f12.primary.ff-medium.ph-6.acd-link-text&quot;},{&quot;n&quot;:&quot;progress&quot;,&quot;s&quot;:14318,&quot;e&quot;:14318,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;undefined POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:14321,&quot;e&quot;:14321,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:14321,&quot;e&quot;:14321,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;load&quot;,&quot;s&quot;:14322,&quot;e&quot;:14322,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;},{&quot;n&quot;:&quot;Ajax&quot;,&quot;s&quot;:13449,&quot;e&quot;:14322,&quot;o&quot;:&quot;200 POST: bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;ajax&quot;},{&quot;n&quot;:&quot;xmlhttprequest&quot;,&quot;s&quot;:13449,&quot;e&quot;:14311,&quot;o&quot;:&quot;https://bam.nr-data.net:443/resources/1/NRJS-2551f7a729197a720f4&quot;,&quot;t&quot;:&quot;resource&quot;},{&quot;n&quot;:&quot;focus&quot;,&quot;s&quot;:15051,&quot;e&quot;:15051,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;a.ph-6.acd-link.flex.items-center&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:15153,&quot;e&quot;:15153,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:15153,&quot;e&quot;:15153,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;react-invokeguardedcallback&quot;,&quot;s&quot;:15153,&quot;e&quot;:15153,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:15153,&quot;e&quot;:15153,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.f12.primary.ff-medium.ph-6.acd-link-text&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:15153,&quot;e&quot;:15153,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.f12.primary.ff-medium.ph-6.acd-link-text&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:15153,&quot;e&quot;:15190,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.f12.primary.ff-medium.ph-6.acd-link-text&quot;},{&quot;n&quot;:&quot;click&quot;,&quot;s&quot;:15190,&quot;e&quot;:15191,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;span.f12.primary.ff-medium.ph-6.acd-link-text&quot;},{&quot;n&quot;:&quot;beforeunload&quot;,&quot;s&quot;:15189,&quot;e&quot;:15189,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;beforeunload&quot;,&quot;s&quot;:15190,&quot;e&quot;:15190,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;window&quot;},{&quot;n&quot;:&quot;react-click&quot;,&quot;s&quot;:15154,&quot;e&quot;:15190,&quot;t&quot;:&quot;event&quot;,&quot;o&quot;:&quot;react&quot;},{&quot;n&quot;:&quot;unload&quot;,&quot;s&quot;:15590,&quot;e&quot;:15590,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=15595&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account&amp;ptid=c80adaff-0001-bad9-593e-0181d6eabcc2&amp;st=1657168090366</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CRMNextCache/CustomNavigation-2,233" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="x" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x</stringProp>
                    <stringProp name="Argument.value">${Crsf_2233}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/CRMNextCache/CustomNavigation</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Contract?x=khcwjqkmpvu3rsstdpwt487hrd63uk9svb2af3eu84wgym959p6nnxrvlh68q9r8kfgmbdb6jnq5ra63lubqwaq6afjujae53yug7hea3h82hfg2q89aaemp4qszlqpd6u2bmhdkxf4k32z5plbewrnj68fgxk2nv4ewfd562h2hdrhjw929lxr6n27cylyn8r6j3uezf2m2cqysf6aqhmns4h2cmclau2n7jajx2pkxcdsnnwjvtw8jed7h8l9qq3tvjr766kbkwpsvvlu6duwb3l6pdga3ezm37nz&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiMTA1ZTQzNTRhYmU2NThmZSIsInRyIjoiMjkzMjE2NDM3YTg0NTkxM2ZiZTg5MjI3OGNhMGE1NjkiLCJ0aSI6MTY1NzE2ODEwNjAzMn19</stringProp>
                  </elementProp>
                  <elementProp name="X-NewRelic-ID" elementType="Header">
                    <stringProp name="Header.name">X-NewRelic-ID</stringProp>
                    <stringProp name="Header.value">VwUAWFZUDBAFVlZWAAMBVVI=</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-105e4354abe658fe----1657168106032</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-293216437a845913fbe892278ca0a569-105e4354abe658fe-01</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=15591&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account&amp;ptid=c80adaff-0001-bad9-593e-0181d6eabcc2-2,228" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">bel.6;e,&apos;unload,c12,1;6,&apos;cls,0.3551454804098721</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=15591&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account&amp;ptid=c80adaff-0001-bad9-593e-0181d6eabcc2</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CRMNextObject/GetPushByDevice-2,234" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/CRMNextObject/GetPushByDevice</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Contract?x=khcwjqkmpvu3rsstdpwt487hrd63uk9svb2af3eu84wgym959p6nnxrvlh68q9r8kfgmbdb6jnq5ra63lubqwaq6afjujae53yug7hea3h82hfg2q89aaemp4qszlqpd6u2bmhdkxf4k32z5plbewrnj68fgxk2nv4ewfd562h2hdrhjw929lxr6n27cylyn8r6j3uezf2m2cqysf6aqhmns4h2cmclau2n7jajx2pkxcdsnnwjvtw8jed7h8l9qq3tvjr766kbkwpsvvlu6duwb3l6pdga3ezm37nz&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-86756136e988146e----1657168106773</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-e8279e94e4d916db7d3cf3a01f358580-86756136e988146e-01</stringProp>
                  </elementProp>
                  <elementProp name="x-requested-with" elementType="Header">
                    <stringProp name="Header.name">x-requested-with</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiODY3NTYxMzZlOTg4MTQ2ZSIsInRyIjoiZTgyNzllOTRlNGQ5MTZkYjdkM2NmM2EwMWYzNTg1ODAiLCJ0aSI6MTY1NzE2ODEwNjc3M319</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=15600&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account&amp;ptid=c80adaff-0001-bad9-593e-0181d6eabcc2-2,231" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">bel.7;2,,7y7,3x,,,&apos;POST,5k,&apos;sbilifeload.crmnext.com:80,&apos;/snload7/app/DomainLookup/LoadList,tv,2ie,1,&apos;0,&apos;8558427122b4525a,&apos;c0bcc532f4310b2a178372d844741797,l5aj3m0t</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=15600&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Account&amp;ptid=c80adaff-0001-bad9-593e-0181d6eabcc2</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/NRJS-2551f7a729197a720f4-2,235" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="a" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">a</stringProp>
                    <stringProp name="Argument.value">527472636</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">1216.487a282</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="to" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">to</stringProp>
                    <stringProp name="Argument.value">YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="rst" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">rst</stringProp>
                    <stringProp name="Argument.value">1362</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ck" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ck</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Contract</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ap" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ap</stringProp>
                    <stringProp name="Argument.value">208</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="be" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">be</stringProp>
                    <stringProp name="Argument.value">447</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fe" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fe</stringProp>
                    <stringProp name="Argument.value">1290</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dc" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">dc</stringProp>
                    <stringProp name="Argument.value">1274</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="af" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">af</stringProp>
                    <stringProp name="Argument.value">err,xhr,stn,ins,spa</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="perf" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">perf</stringProp>
                    <stringProp name="Argument.value">%7B%22timing%22:%7B%22of%22:1657168105556,%22n%22:0,%22u%22:412,%22ue%22:413,%22f%22:3,%22dn%22:3,%22dne%22:3,%22c%22:3,%22ce%22:3,%22rq%22:5,%22rp%22:392,%22rpe%22:393,%22dl%22:418,%22di%22:1273,%22ds%22:1273,%22de%22:1282,%22dc%22:1290,%22l%22:1290,%22le%22:1307%7D,%22navigation%22:%7B%7D%7D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fp</stringProp>
                    <stringProp name="Argument.value">788</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fcp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fcp</stringProp>
                    <stringProp name="Argument.value">794</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="jsonp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">jsonp</stringProp>
                    <stringProp name="Argument.value">NREUM.setToken</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/1/NRJS-2551f7a729197a720f4</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=2484&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Contract-2,236" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">bel.7;1,2,,1gc,11p,2w,&apos;initialPageLoad,&apos;http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Contract,1,1,,,,5s,!!&apos;6a24532b-63e3-4a6a-bac6-4ce2b8402f6c,&apos;1,lw,m2;2,,d8,x8,1h,14,&apos;GET,5k,&apos;sbilifeload.crmnext.com:80,&apos;/snload7/app/CRMNextCache/CustomNavigation,,cop,,&apos;3,&apos;105e4354abe658fe,&apos;293216437a845913fbe892278ca0a569,l5aj3q5s;2,,xu,id,5,5,4,5k,5,&apos;/snload7/app/CRMNextObject/GetPushByDevice,,1n,1,&apos;8,&apos;86756136e988146e,&apos;e8279e94e4d916db7d3cf3a01f358580,l5aj3qqd;b,bg,!1,!-be,,,,!,2,ar,1,p,nr,,9,8,,h</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=2484&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Contract</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=11365&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Contract-2,237" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">bel.6;e,&apos;fp,lw,1;6,&apos;cls,0.;e,&apos;fcp,m2,1;6,1,0.;e,&apos;load,zu,1;6,1,0.;e,&apos;fi,51n,6;5,&apos;type,&apos;pointerdown;5,&apos;net-etype,&apos;4g;6,&apos;net-rtt,100.;6,&apos;net-dlink,1.3;6,&apos;fid,5.;6,1,1.009837290896655;e,&apos;lcp,m2,8;6,&apos;size,3900.;5,&apos;eid,&apos;style-switcher;5,7,8;6,9,100.;6,a,1.3;5,&apos;elUrl,&apos;http://sbilifeload.crmnext.com/SNLOAD7/app/assets_102319_1/img/crmlogo.png;5,&apos;elTag,&apos;IMG;6,1,0.</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=11365&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Contract</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/domainreliability/upload-2,238" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;HTTP&quot;,&quot;request_age_ms&quot;:67139,&quot;request_elapsed_ms&quot;:607,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;https://beacons.gvt2.com/&quot;,&quot;was_proxied&quot;:true}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">beacons.gcp.gvt2.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/domainreliability/upload-2,239" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;entries&quot;:[{&quot;failure_data&quot;:{&quot;custom_error&quot;:&quot;net::ERR_ABORTED&quot;},&quot;http_response_code&quot;:200,&quot;network_changed&quot;:false,&quot;protocol&quot;:&quot;HTTP&quot;,&quot;request_age_ms&quot;:67138,&quot;request_elapsed_ms&quot;:614,&quot;sample_rate&quot;:1.0,&quot;server_ip&quot;:&quot;&quot;,&quot;status&quot;:&quot;aborted&quot;,&quot;url&quot;:&quot;https://google.com/domainreliability/upload&quot;,&quot;was_proxied&quot;:true}],&quot;reporter&quot;:&quot;chrome&quot;}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">google.com</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/domainreliability/upload</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${constantTimer}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="BA_09_Save_Policy" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">true</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/Object/?x=khcwjqkmpvu3rsstdpwt487hrd63uk9svb2af3eu84wgym959p6nnxrvlh68q9r8kfgmbdb6jnq5ra63lubqwaq6afjujae53yug7hea3h82hfg2q89aaemp4qszlqpd6u2bmhdkxf4k32z5plbewrnj68fgxk2nv4ewfd562h2hdrhjw929lxr6n27cylyn8r6j3uezf2m2cqysf6aqhmns4h2cmclau2n7jajx2pkxcdsnnwjvtw8jed7h8l9qq3tvjr766kbkwpsvvlu6duwb3vd8rlprzpfjaq96jfgqp48awp9q-2,240" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Fields" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Fields</stringProp>
                    <stringProp name="Argument.value">%7B%22CheckReminderOn%22%3A%7B%22ControlType%22%3A10%2C%22Value%22%3Afalse%2C%22Properties%22%3A%7B%22CompositControlKey%22%3A%22CONTRACT_REMINDER%22%7D%7D%2C%22COMPANY_SIGNED_BY%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22IsRenderAsLabel%22%3Atrue%7D%7D%2C%22COMPANY_SIGNED_ON%22%3A%7B%22ControlType%22%3A8%2C%22Value%22%3A%22%22%7D%2C%22CONTRACT_ACCOUNT_NAME%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%7B%22Value%22%3A54%2C%22Text%22%3A%22Thor%22%7D%2C%22Properties%22%3A%7B%22InitialValueType%22%3A1%2C%22IsRenderAsLabel%22%3Atrue%7D%7D%2C%22CONTRACT_ADDRESS%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22CONTRACT_AMOUNT%22%3A%7B%22ControlType%22%3A3%2C%22Value%22%3A0%7D%2C%22CONTRACT_ASSIGNEDTO%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22InitialValueType%22%3A1%2C%22IsRenderAsLabel%22%3Atrue%7D%7D%2C%22CONTRACT_CITY%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22IsRenderAsLabel%22%3Atrue%2C%22LinkCaptions%22%3A%7B%22CONTRACT_COUNTRY%22%3A%22Country%22%2C%22CONTRACT_STATE%22%3A%22State%22%2C%22CONTRACT_CITY%22%3A%22City%22%7D%7D%7D%2C%22CONTRACT_COUNTRY%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22IsRenderAsLabel%22%3Atrue%7D%7D%2C%22CONTRACT_DESCRIPTION%22%3A%7B%22ControlType%22%3A9%2C%22Value%22%3A%22%22%7D%2C%22CONTRACT_DUE_DATE%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22CONTRACT_EMAIL%22%3A%7B%22ControlType%22%3A5%2C%22Value%22%3A%22%22%7D%2C%22CONTRACT_ENDDATE%22%3A%7B%22ControlType%22%3A8%2C%22Value%22%3A%2207-07-2022%22%7D%2C%22CONTRACT_LOCALITY%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22CONTRACT_MOBILE%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22CONTRACT_OWNER%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%7B%22Value%22%3A12104%2C%22Text%22%3A%22User_195%22%7D%2C%22Properties%22%3A%7B%22InitialValueType%22%3A1%2C%22IsRenderAsLabel%22%3Atrue%2C%22DefaultValueResolver%22%3A%7B%22Type%22%3A1%2C%22Text%22%3A%22ADMIN%22%2C%22Value%22%3A%221%22%2C%22IsResolved%22%3Afalse%7D%7D%7D%2C%22CONTRACT_PRDHOLDINGNUMBER%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22IsRenderAsLabel%22%3Atrue%7D%7D%2C%22CONTRACT_PROJECTNAME%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22InitialValueType%22%3A1%2C%22IsRenderAsLabel%22%3Atrue%7D%7D%2C%22CONTRACT_STARTDATE%22%3A%7B%22ControlType%22%3A8%2C%22Value%22%3A%2207-07-2022%22%2C%22Properties%22%3A%7B%22DefaultValueResolver%22%3A%7B%22Type%22%3A10%2C%22Value%22%3A%22sysdate_0%22%2C%22IsResolved%22%3Afalse%7D%7D%7D%2C%22CONTRACT_STATE%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22IsRenderAsLabel%22%3Atrue%2C%22LinkCaptions%22%3A%7B%22CONTRACT_COUNTRY%22%3A%22Country%22%2C%22CONTRACT_STATE%22%3A%22State%22%7D%7D%7D%2C%22CONTRACT_STATUS%22%3A%7B%22ControlType%22%3A21%2C%22Value%22%3A%7B%22Value%22%3A100156%2C%22Text%22%3A%22Proposition%22%2C%22Status%22%3A1%7D%2C%22Properties%22%3A%7B%22InitialValueType%22%3A1%2C%22DefaultValueResolver%22%3A%7B%22Type%22%3A1%2C%22Text%22%3A%22Proposition%22%2C%22Value%22%3A%22100156%22%2C%22IsResolved%22%3Afalse%7D%7D%7D%2C%22CONTRACT_TERMS%22%3A%7B%22ControlType%22%3A9%2C%22Value%22%3A%22%22%7D%2C%22CONTRACT_TERRITORY%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22InitialValueType%22%3A1%2C%22IsRenderAsLabel%22%3Atrue%7D%7D%2C%22CONTRACT_TITLE%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22Thor_policy%22%7D%2C%22CONTRACT_USE_ACCOUNT_BILLING%22%3A%7B%22ControlType%22%3A10%2C%22Value%22%3Afalse%7D%2C%22CONTRACT_ZIPCODE%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22IsRenderAsLabel%22%3Atrue%2C%22LinkCaptions%22%3A%7B%22CONTRACT_COUNTRY%22%3A%22Country%22%2C%22CONTRACT_STATE%22%3A%22State%22%2C%22CONTRACT_CITY%22%3A%22City%22%2C%22CONTRACT_ZIPCODE%22%3A%22Zip%20Code%22%7D%7D%7D%2C%22CTRL_CURRENCY%22%3A%7B%22ControlType%22%3A25%2C%22Value%22%3A%7B%22Value%22%3A%22INR%22%2C%22Text%22%3A%22INR%22%2C%22currencyInfo%22%3A%7B%22currencySymbol%22%3A%22%E2%82%B9%22%2C%22digitGroupSeparator%22%3A%22%2C%22%2C%22decimalCharacter%22%3A%22.%22%2C%22digitalGroupSpacing%22%3A%222%22%2C%22thousandsGroupStyle%22%3A%22lakh%22%7D%7D%7D%2C%22cust_100194%22%3A%7B%22ControlType%22%3A21%2C%22Value%22%3A%7B%22Value%22%3A-1%2C%22Text%22%3A%22%22%7D%2C%22Properties%22%3A%7B%22InitialValueType%22%3A1%7D%7D%2C%22cust_100234%22%3A%7B%22ControlType%22%3A3%2C%22Value%22%3A%22%22%7D%2C%22cust_100235%22%3A%7B%22ControlType%22%3A8%2C%22Value%22%3A%22%22%7D%2C%22cust_100236%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_100327%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22IsRenderAsLabel%22%3Atrue%7D%7D%2C%22cust_100359%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_101153%22%3A%7B%22ControlType%22%3A8%2C%22Value%22%3A%22%22%7D%2C%22cust_101157%22%3A%7B%22ControlType%22%3A8%2C%22Value%22%3A%22%22%7D%2C%22cust_101248%22%3A%7B%22ControlType%22%3A8%2C%22Value%22%3A%22%22%7D%2C%22cust_101250%22%3A%7B%22ControlType%22%3A8%2C%22Value%22%3A%22%22%7D%2C%22cust_200%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22Thor%22%7D%2C%22cust_201%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_208%22%3A%7B%22ControlType%22%3A8%2C%22Value%22%3A%22%22%7D%2C%22cust_214%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_215%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_216%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_217%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_218%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22Thor_123%22%7D%2C%22cust_219%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_221%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_230%22%3A%7B%22ControlType%22%3A17%2C%22Value%22%3A%22%22%7D%2C%22cust_568%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22IsRenderAsLabel%22%3Atrue%7D%7D%2C%22cust_575%22%3A%7B%22ControlType%22%3A21%2C%22Value%22%3A%7B%22Value%22%3A%22%22%2C%22Text%22%3A%22%22%7D%7D%2C%22cust_578%22%3A%7B%22ControlType%22%3A21%2C%22Value%22%3A%7B%22Value%22%3A%22%22%2C%22Text%22%3A%22%22%7D%7D%2C%22cust_579%22%3A%7B%22ControlType%22%3A21%2C%22Value%22%3A%7B%22Value%22%3A%22%22%2C%22Text%22%3A%22%22%7D%7D%2C%22cust_580%22%3A%7B%22ControlType%22%3A21%2C%22Value%22%3A%7B%22Value%22%3A%22%22%2C%22Text%22%3A%22%22%7D%7D%2C%22cust_581%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22IsRenderAsLabel%22%3Atrue%7D%7D%2C%22cust_582%22%3A%7B%22ControlType%22%3A21%2C%22Value%22%3A%7B%22Value%22%3A%22%22%2C%22Text%22%3A%22%22%7D%7D%2C%22cust_585%22%3A%7B%22ControlType%22%3A8%2C%22Value%22%3A%22%22%7D%2C%22cust_586%22%3A%7B%22ControlType%22%3A1%2C%22Value%22%3A%22%22%7D%2C%22cust_587%22%3A%7B%22ControlType%22%3A8%2C%22Value%22%3A%22%22%7D%2C%22cust_588%22%3A%7B%22ControlType%22%3A8%2C%22Value%22%3A%22%22%7D%2C%22cust_710%22%3A%7B%22ControlType%22%3A1%2C%22Value%22%3A%22%22%7D%2C%22cust_711%22%3A%7B%22ControlType%22%3A1%2C%22Value%22%3A%22%22%7D%2C%22cust_712%22%3A%7B%22ControlType%22%3A8%2C%22Value%22%3A%22%22%7D%2C%22cust_713%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_716%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22cust_728%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22InitialValueType%22%3A1%2C%22IsRenderAsLabel%22%3Atrue%7D%7D%2C%22cust_729%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22InitialValueType%22%3A1%2C%22IsRenderAsLabel%22%3Atrue%7D%7D%2C%22cust_730%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22InitialValueType%22%3A1%2C%22IsRenderAsLabel%22%3Atrue%7D%7D%2C%22cust_740%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22CUSTOMER_SIGNED_BY%22%3A%7B%22ControlType%22%3A63%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22InitialValueType%22%3A2%2C%22IsRenderAsLabel%22%3Atrue%7D%7D%2C%22CUSTOMER_SIGNED_ON%22%3A%7B%22ControlType%22%3A8%2C%22Value%22%3A%22%22%7D%2C%22CUSTOMER_SIGNED_TITLE%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%22%22%7D%2C%22OBJECT_IS_NEW%22%3A%7B%22ControlType%22%3A10%2C%22Value%22%3Atrue%7D%2C%22ReminderBefore%22%3A%7B%22ControlType%22%3A2%2C%22Value%22%3A%220%22%2C%22Properties%22%3A%7B%22CompositControlKey%22%3A%22CONTRACT_REMINDER%22%7D%7D%2C%22ReminderLabel%22%3A%7B%22ControlType%22%3A66%2C%22Value%22%3A%22%22%2C%22Properties%22%3A%7B%22CompositControlKey%22%3A%22CONTRACT_REMINDER%22%7D%7D%7D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ActionProperties" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ActionProperties</stringProp>
                    <stringProp name="Argument.value">%7B%22AllowRecentItem%22%3Atrue%2C%22LayoutTrackHistory%22%3A0%2C%22LayoutGroupId%22%3A10006%2C%22DynamicToken%22%3A%228dce61e1-3b34-439f-b548-ac2a8822d044%22%2C%22RequestVerificationToken%22%3A%22rCfHsflr5YCmjw6WSLSTJ9de0y89oQWYSkWFkJ7WzSedUDyVxlRv6FD_M7lVXagHVsCr_bDFVrQiJ4q7tQC1P9DZqOI1%3AF7cE7EaH2owEN2excgxXDMlmDPi2ZpoIcGu694Kf0Fi2ymbrJnJVFKDwAsFfGHqAPRabvX8xW0rcL7CJm6mE0gR-zlA1%22%7D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Save" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Save</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="Submit" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">Submit</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="getParentFormApi" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">getParentFormApi</stringProp>
                    <stringProp name="Argument.value">undefined</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dialogId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">dialogId</stringProp>
                    <stringProp name="Argument.value">undefined</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ActionId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ActionId</stringProp>
                    <stringProp name="Argument.value">undefined</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="actionObject" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">actionObject</stringProp>
                    <stringProp name="Argument.value">undefined</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="onCallback" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">onCallback</stringProp>
                    <stringProp name="Argument.value">undefined</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CheckSum" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CheckSum</stringProp>
                    <stringProp name="Argument.value">%221826c60672150e18849e8bad121cf08590c898b3ad2182ebbf1a67bca09b365f%22</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PostFailureSavedData" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PostFailureSavedData</stringProp>
                    <stringProp name="Argument.value">undefined</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/Object/?x=khcwjqkmpvu3rsstdpwt487hrd63uk9svb2af3eu84wgym959p6nnxrvlh68q9r8kfgmbdb6jnq5ra63lubqwaq6afjujae53yug7hea3h82hfg2q89aaemp4qszlqpd6u2bmhdkxf4k32z5plbewrnj68fgxk2nv4ewfd562h2hdrhjw929lxr6n27cylyn8r6j3uezf2m2cqysf6aqhmns4h2cmclau2n7jajx2pkxcdsnnwjvtw8jed7h8l9qq3tvjr766kbkwpsvvlu6duwb3vd8rlprzpfjaq96jfgqp48awp9q</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Contract?x=khcwjqkmpvu3rsstdpwt487hrd63uk9svb2af3eu84wgym959p6nnxrvlh68q9r8kfgmbdb6jnq5ra63lubqwaq6afjujae53yug7hea3h82hfg2q89aaemp4qszlqpd6u2bmhdkxf4k32z5plbewrnj68fgxk2nv4ewfd562h2hdrhjw929lxr6n27cylyn8r6j3uezf2m2cqysf6aqhmns4h2cmclau2n7jajx2pkxcdsnnwjvtw8jed7h8l9qq3tvjr766kbkwpsvvlu6duwb3l6pdga3ezm37nz&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiZjBkYmExODkwNjY1YWY2MyIsInRyIjoiYzU4NGRmN2Q5MzlhMjg5YjA3ZDZjZmFkMjNhOTdjNWYiLCJ0aSI6MTY1NzE2ODEyODgzM319</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-f0dba1890665af63----1657168128833</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-c584df7d939a289b07d6cfad23a97c5f-f0dba1890665af63-01</stringProp>
                  </elementProp>
                  <elementProp name="x-requested-with" elementType="Header">
                    <stringProp name="Header.name">x-requested-with</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Csrf_2241" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Csrf_2241</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">Contract?x=</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;,</stringProp>
                <stringProp name="BoundaryExtractor.default">NF_2241</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/crmnextobject/detail/Contract-2,241" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="x" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x</stringProp>
                    <stringProp name="Argument.value">${Csrf_2241}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="mdi" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">mdi</stringProp>
                    <stringProp name="Argument.value">-1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/crmnextobject/detail/Contract</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.image_parser">true</boolProp>
              <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Contract?x=khcwjqkmpvu3rsstdpwt487hrd63uk9svb2af3eu84wgym959p6nnxrvlh68q9r8kfgmbdb6jnq5ra63lubqwaq6afjujae53yug7hea3h82hfg2q89aaemp4qszlqpd6u2bmhdkxf4k32z5plbewrnj68fgxk2nv4ewfd562h2hdrhjw929lxr6n27cylyn8r6j3uezf2m2cqysf6aqhmns4h2cmclau2n7jajx2pkxcdsnnwjvtw8jed7h8l9qq3tvjr766kbkwpsvvlu6duwb3l6pdga3ezm37nz&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                    <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Csrf_2245" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Csrf_2245</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">GetCardFormMetaData?x=</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&quot;&gt;</stringProp>
                <stringProp name="BoundaryExtractor.default">NF_2245</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
              <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Csrf_2246" enabled="true">
                <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
                <stringProp name="BoundaryExtractor.refname">Csrf_2246</stringProp>
                <stringProp name="BoundaryExtractor.lboundary">LoadTopNavContent(&apos;</stringProp>
                <stringProp name="BoundaryExtractor.rboundary">&apos;,</stringProp>
                <stringProp name="BoundaryExtractor.default">NF_2246</stringProp>
                <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
                <stringProp name="BoundaryExtractor.match_number">1</stringProp>
              </BoundaryExtractor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/FormApi/GetCardFormMetaData-2,245" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="x" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x</stringProp>
                    <stringProp name="Argument.value">${Csrf_2245}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/FormApi/GetCardFormMetaData</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Contract?x=nuj6mmdrx843l2g8673tcd3cdml2u7va4l9sa7nnek7rypzemhdhaus26up4lzy5gjqej7qgf6guu4745jy9z3kwmx&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="713678011">Policy Profile</stringProp>
                </collectionProp>
                <stringProp name="Assertion.custom_message"></stringProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">16</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CRMNextObject/GetPushByDevice-2,247" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/CRMNextObject/GetPushByDevice</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Contract?x=nuj6mmdrx843l2g8673tcd3cdml2u7va4l9sa7nnek7rypzemhdhaus26up4lzy5gjqej7qgf6guu4745jy9z3kwmx&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-ad9b9bb12aef939e----1657168130541</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-6f4f3cdf0b4da97b4e346bb752db73f2-ad9b9bb12aef939e-01</stringProp>
                  </elementProp>
                  <elementProp name="x-requested-with" elementType="Header">
                    <stringProp name="Header.name">x-requested-with</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiYWQ5YjliYjEyYWVmOTM5ZSIsInRyIjoiNmY0ZjNjZGYwYjRkYTk3YjRlMzQ2YmI3NTJkYjczZjIiLCJ0aSI6MTY1NzE2ODEzMDU0MX19</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/jserrors/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=24440&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Contract-2,243" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;sm&quot;:[{&quot;params&quot;:{&quot;name&quot;:&quot;Framework/React/Detected&quot;},&quot;stats&quot;:{&quot;c&quot;:1}},{&quot;params&quot;:{&quot;name&quot;:&quot;Framework/Jquery/Detected&quot;},&quot;stats&quot;:{&quot;c&quot;:1}},{&quot;params&quot;:{&quot;name&quot;:&quot;Ajax/Events/Excluded/Agent&quot;},&quot;stats&quot;:{&quot;c&quot;:2}}],&quot;xhr&quot;:[{&quot;params&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/CRMNextCache/CustomNavigation&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;rxSize&quot;:{&quot;t&quot;:16441},&quot;duration&quot;:{&quot;t&quot;:1199},&quot;cbTime&quot;:{&quot;t&quot;:3},&quot;time&quot;:{&quot;t&quot;:476}}},{&quot;params&quot;:{&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/CRMNextObject/GetPushByDevice&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:0},&quot;rxSize&quot;:{&quot;t&quot;:59},&quot;duration&quot;:{&quot;t&quot;:661},&quot;time&quot;:{&quot;t&quot;:1218}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;bam.nr-data.net&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;bam.nr-data.net:443&quot;,&quot;pathname&quot;:&quot;/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:2,&quot;txSize&quot;:{&quot;t&quot;:863,&quot;min&quot;:358,&quot;max&quot;:505,&quot;sos&quot;:383189,&quot;c&quot;:2},&quot;rxSize&quot;:{&quot;t&quot;:48,&quot;min&quot;:24,&quot;max&quot;:24,&quot;sos&quot;:1152,&quot;c&quot;:2},&quot;duration&quot;:{&quot;t&quot;:1597,&quot;min&quot;:792,&quot;max&quot;:805,&quot;sos&quot;:1275289,&quot;c&quot;:2},&quot;cbTime&quot;:{&quot;t&quot;:0,&quot;min&quot;:0,&quot;max&quot;:0,&quot;sos&quot;:0,&quot;c&quot;:2},&quot;time&quot;:{&quot;t&quot;:13852,&quot;min&quot;:2486,&quot;max&quot;:11366,&quot;sos&quot;:135366152,&quot;c&quot;:2}}},{&quot;params&quot;:{&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/Object/&quot;,&quot;method&quot;:&quot;POST&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:0},&quot;rxSize&quot;:{&quot;t&quot;:487},&quot;duration&quot;:{&quot;t&quot;:451},&quot;time&quot;:{&quot;t&quot;:23277}}}]}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/jserrors/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=24440&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Contract</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=24445&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Contract-2,244" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">bel.7;2,,hyl,cj,,,&apos;POST,5k,&apos;sbilifeload.crmnext.com:80,&apos;/snload7/app/Object/,,dj,1,&apos;0,&apos;f0dba1890665af63,&apos;c584df7d939a289b07d6cfad23a97c5f,l5aj47r5</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=24445&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Contract</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=24438&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Contract-2,242" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">bel.6;e,&apos;pageHide,f4s,1;6,&apos;cls,1.009837290896655;e,&apos;unload,iut,1;6,1,1.009837290896655</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH3dQEg%3D%3D&amp;rst=24438&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/new/Contract</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CardView/LoadListCard?x=ssqwnebx84q67ss8a2yf5d45udajjc8x4pew4bfkwagpqct8l7uq-2,249" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;LookUpRequest&quot;:{&quot;ControlKey&quot;:&quot;Card_200183&quot;,&quot;ObjectContext&quot;:{&quot;CTR_EX1_5&quot;:&quot;&quot;,&quot;HoldingNumber&quot;:&quot;&quot;,&quot;AccountID&quot;:54,&quot;AccountName&quot;:&quot;Thor&quot;,&quot;ItemType&quot;:56,&quot;FormCacheKey&quot;:&quot;602_Contract_1_100011False_Details_Card_10006_1__None_-10__20220705105031&quot;,&quot;ObjectId&quot;:72084,&quot;HistoryId&quot;:-1,&quot;ItemName&quot;:&quot;Thor_policy&quot;,&quot;StatusCodeId&quot;:100156,&quot;LayoutId&quot;:100011,&quot;LayoutType&quot;:2,&quot;LayoutViewType&quot;:1,&quot;IsPopulateTemplate&quot;:false,&quot;ProcessID&quot;:100012,&quot;ItemOwnerId&quot;:12104,&quot;IsEditable&quot;:true,&quot;OpenerObjectQueryString&quot;:&quot;lk7w4jg23azgcqx3hggzktn8xqzf4x8rxxrtswlmlwgatwabmqwwxggcke6s97cmjfcwfstela246pqlcedcsm4vd4q2kwwqdm8bcvgvqb899ntdz9kbfkjp9k8934pdqrt9usxl2j3k8lwgxlghxdxrfa&quot;},&quot;AllowedOptions&quot;:null,&quot;LinkDataContext&quot;:{&quot;Linking&quot;:null,&quot;References&quot;:null,&quot;ReferenceControls&quot;:null},&quot;Model&quot;:null,&quot;ExistingValues&quot;:null,&quot;GraphType&quot;:null,&quot;ControlProperties&quot;:{&quot;HasInfiniteScroll&quot;:1,&quot;ColMerge&quot;:0}},&quot;ListingRequest&quot;:{&quot;ContentFilter&quot;:{&quot;PageIndex&quot;:1,&quot;PageSize&quot;:0,&quot;ABCFilter&quot;:&quot;&quot;,&quot;OrderBy&quot;:0,&quot;OrderField&quot;:&quot;&quot;,&quot;Filters&quot;:{},&quot;NextPageToken&quot;:&quot;&quot;}},&quot;RequestMode&quot;:1,&quot;IsContinueOnNoSelection&quot;:false}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/CardView/LoadListCard?x=ssqwnebx84q67ss8a2yf5d45udajjc8x4pew4bfkwagpqct8l7uq</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Contract?x=nuj6mmdrx843l2g8673tcd3cdml2u7va4l9sa7nnek7rypzemhdhaus26up4lzy5gjqej7qgf6guu4745jy9z3kwmx&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiZWQwZjEwNjI5NDhjNzZhNCIsInRyIjoiMWE4MWI2ZWY0NzIxMzRmMWI0YTc3OWNkZTQ4NWViYmIiLCJ0aSI6MTY1NzE2ODEzMDU2OH19</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-ed0f1062948c76a4----1657168130568</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-1a81b6ef472134f1b4a779cde485ebbb-ed0f1062948c76a4-01</stringProp>
                  </elementProp>
                  <elementProp name="x-requested-with" elementType="Header">
                    <stringProp name="Header.name">x-requested-with</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CardView/LoadEdsListCard?x=cb64zsk5zplz3ldjw4gxzj9ewxn54dc5mrf3crjgc6x2njqde38c5p67tyr3rmsfc9ygycngrlbresl65q2uer8n3nke8hz5hrglaq2472y9n7tyrz4tn6bck7vbqasb7msut2ck4dfk27qcam4y6fcnr9p7eytwyln3vfd5dzkuacp3dzza-2,248" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;LookUpRequest&quot;:{&quot;ControlKey&quot;:&quot;Card_100297&quot;,&quot;ObjectContext&quot;:{&quot;CTR_EX1_5&quot;:&quot;&quot;,&quot;HoldingNumber&quot;:&quot;&quot;,&quot;AccountID&quot;:54,&quot;AccountName&quot;:&quot;Thor&quot;,&quot;ItemType&quot;:56,&quot;FormCacheKey&quot;:&quot;602_Contract_1_100011False_Details_Card_10006_1__None_-10__20220705105031&quot;,&quot;ObjectId&quot;:72084,&quot;HistoryId&quot;:-1,&quot;ItemName&quot;:&quot;Thor_policy&quot;,&quot;StatusCodeId&quot;:100156,&quot;LayoutId&quot;:100011,&quot;LayoutType&quot;:2,&quot;LayoutViewType&quot;:1,&quot;IsPopulateTemplate&quot;:false,&quot;ProcessID&quot;:100012,&quot;ItemOwnerId&quot;:12104,&quot;IsEditable&quot;:true,&quot;OpenerObjectQueryString&quot;:&quot;lk7w4jg23azgcqx3hggzktn8xqzf4x8rxxrtswlmlwgatwabmqwwxggcke6s97cmjfcwfstela246pqlcedcsm4vd4q2kwwqdm8bcvgvqb899ntdz9kbfkjp9k8934pdqrt9usxl2j3k8lwgxlghxdxrfa&quot;},&quot;AllowedOptions&quot;:null,&quot;LinkDataContext&quot;:{&quot;Linking&quot;:null,&quot;References&quot;:null,&quot;ReferenceControls&quot;:null},&quot;Model&quot;:null,&quot;ExistingValues&quot;:null,&quot;GraphType&quot;:null,&quot;ControlProperties&quot;:{&quot;HasInfiniteScroll&quot;:1,&quot;EDSInputParameters&quot;:[{&quot;Name&quot;:&quot;v_input&quot;,&quot;PropertyValue&quot;:&quot;&quot;,&quot;ParameterType&quot;:&quot;String&quot;,&quot;DisplayValue&quot;:&quot;&quot;,&quot;ValueType&quot;:&quot;1&quot;,&quot;InputMode&quot;:0,&quot;IsTrackChange&quot;:false,&quot;MappingType&quot;:1}]}},&quot;ListingRequest&quot;:{&quot;ContentFilter&quot;:{&quot;PageIndex&quot;:1,&quot;PageSize&quot;:0,&quot;ABCFilter&quot;:&quot;&quot;,&quot;OrderBy&quot;:0,&quot;OrderField&quot;:&quot;&quot;,&quot;Filters&quot;:{},&quot;NextPageToken&quot;:&quot;&quot;}},&quot;RequestMode&quot;:1,&quot;IsContinueOnNoSelection&quot;:false}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/CardView/LoadEdsListCard?x=cb64zsk5zplz3ldjw4gxzj9ewxn54dc5mrf3crjgc6x2njqde38c5p67tyr3rmsfc9ygycngrlbresl65q2uer8n3nke8hz5hrglaq2472y9n7tyrz4tn6bck7vbqasb7msut2ck4dfk27qcam4y6fcnr9p7eytwyln3vfd5dzkuacp3dzza</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Contract?x=nuj6mmdrx843l2g8673tcd3cdml2u7va4l9sa7nnek7rypzemhdhaus26up4lzy5gjqej7qgf6guu4745jy9z3kwmx&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiOGRlMTI4MmNlYzA4YjkwYiIsInRyIjoiMmI3MmFlZWFiMTNmMGMyZDA4Nzg0YmYzNmViODdhN2QiLCJ0aSI6MTY1NzE2ODEzMDU2Nn19</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-8de1282cec08b90b----1657168130566</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-2b72aeeab13f0c2d08784bf36eb87a7d-8de1282cec08b90b-01</stringProp>
                  </elementProp>
                  <elementProp name="x-requested-with" elementType="Header">
                    <stringProp name="Header.name">x-requested-with</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/NRJS-2551f7a729197a720f4-2,251" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="a" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">a</stringProp>
                    <stringProp name="Argument.value">527472636</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v</stringProp>
                    <stringProp name="Argument.value">1216.487a282</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="to" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">to</stringProp>
                    <stringProp name="Argument.value">YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="rst" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">rst</stringProp>
                    <stringProp name="Argument.value">1395</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ck" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ck</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ref" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ref</stringProp>
                    <stringProp name="Argument.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Contract</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ap" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ap</stringProp>
                    <stringProp name="Argument.value">424</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="be" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">be</stringProp>
                    <stringProp name="Argument.value">720</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fe" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fe</stringProp>
                    <stringProp name="Argument.value">1367</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="dc" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">dc</stringProp>
                    <stringProp name="Argument.value">1286</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="af" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">af</stringProp>
                    <stringProp name="Argument.value">err,xhr,stn,ins,spa</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="perf" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">perf</stringProp>
                    <stringProp name="Argument.value">%7B%22timing%22:%7B%22of%22:1657168129327,%22n%22:0,%22u%22:675,%22ue%22:675,%22f%22:17,%22dn%22:17,%22dne%22:17,%22c%22:17,%22ce%22:17,%22rq%22:20,%22rp%22:646,%22rpe%22:650,%22dl%22:685,%22di%22:1286,%22ds%22:1286,%22de%22:1293,%22dc%22:1368,%22l%22:1368,%22le%22:1380%7D,%22navigation%22:%7B%7D%7D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fp</stringProp>
                    <stringProp name="Argument.value">1066</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="fcp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">fcp</stringProp>
                    <stringProp name="Argument.value">1072</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="jsonp" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">jsonp</stringProp>
                    <stringProp name="Argument.value">NREUM.setToken</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/1/NRJS-2551f7a729197a720f4</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">no-cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">script</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CardView/LoadListCard?x=dy7xksqwglsbfj6ky5e6puvkfz9efas6eyt45m72gpxpqlxsab7a-2,250" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&quot;LookUpRequest&quot;:{&quot;ControlKey&quot;:&quot;Card_200168&quot;,&quot;ObjectContext&quot;:{&quot;CTR_EX1_5&quot;:&quot;&quot;,&quot;HoldingNumber&quot;:&quot;&quot;,&quot;AccountID&quot;:54,&quot;AccountName&quot;:&quot;Thor&quot;,&quot;ItemType&quot;:56,&quot;FormCacheKey&quot;:&quot;602_Contract_1_100011False_Details_Card_10006_1__None_-10__20220705105031&quot;,&quot;ObjectId&quot;:72084,&quot;HistoryId&quot;:-1,&quot;ItemName&quot;:&quot;Thor_policy&quot;,&quot;StatusCodeId&quot;:100156,&quot;LayoutId&quot;:100011,&quot;LayoutType&quot;:2,&quot;LayoutViewType&quot;:1,&quot;IsPopulateTemplate&quot;:false,&quot;ProcessID&quot;:100012,&quot;ItemOwnerId&quot;:12104,&quot;IsEditable&quot;:true,&quot;OpenerObjectQueryString&quot;:&quot;lk7w4jg23azgcqx3hggzktn8xqzf4x8rxxrtswlmlwgatwabmqwwxggcke6s97cmjfcwfstela246pqlcedcsm4vd4q2kwwqdm8bcvgvqb899ntdz9kbfkjp9k8934pdqrt9usxl2j3k8lwgxlghxdxrfa&quot;},&quot;AllowedOptions&quot;:null,&quot;LinkDataContext&quot;:{&quot;Linking&quot;:null,&quot;References&quot;:null,&quot;ReferenceControls&quot;:null},&quot;Model&quot;:null,&quot;ExistingValues&quot;:null,&quot;GraphType&quot;:null,&quot;ControlProperties&quot;:{&quot;HasInfiniteScroll&quot;:1,&quot;ColMerge&quot;:0}},&quot;ListingRequest&quot;:{&quot;ContentFilter&quot;:{&quot;PageIndex&quot;:1,&quot;PageSize&quot;:0,&quot;ABCFilter&quot;:&quot;&quot;,&quot;OrderBy&quot;:0,&quot;OrderField&quot;:&quot;&quot;,&quot;Filters&quot;:{},&quot;NextPageToken&quot;:&quot;&quot;}},&quot;RequestMode&quot;:1,&quot;IsContinueOnNoSelection&quot;:false}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/CardView/LoadListCard?x=dy7xksqwglsbfj6ky5e6puvkfz9efas6eyt45m72gpxpqlxsab7a</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Contract?x=nuj6mmdrx843l2g8673tcd3cdml2u7va4l9sa7nnek7rypzemhdhaus26up4lzy5gjqej7qgf6guu4745jy9z3kwmx&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiMTA5Mzc0ODQ4NWVhYjJjMSIsInRyIjoiZjZhNGMyOWYwODVkYzgzMzMxNDJjZWRiMWQ0MzBhZDAiLCJ0aSI6MTY1NzE2ODEzMDU2OX19</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-1093748485eab2c1----1657168130569</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-f6a4c29f085dc8333142cedb1d430ad0-1093748485eab2c1-01</stringProp>
                  </elementProp>
                  <elementProp name="x-requested-with" elementType="Header">
                    <stringProp name="Header.name">x-requested-with</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/CRMNextCache/CustomNavigation-2,246" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="x" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">x</stringProp>
                    <stringProp name="Argument.value">${Csrf_2246}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/snload7/app/CRMNextCache/CustomNavigation</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Contract?x=nuj6mmdrx843l2g8673tcd3cdml2u7va4l9sa7nnek7rypzemhdhaus26up4lzy5gjqej7qgf6guu4745jy9z3kwmx&amp;mdi=-1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="newrelic" elementType="Header">
                    <stringProp name="Header.name">newrelic</stringProp>
                    <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6IjMzNzkwNzQiLCJhcCI6IjYwMTMzNDUwNCIsImlkIjoiNzJkNTNmZTQwZmY3MGM1OSIsInRyIjoiYTk5NzA5NTBhNWVjNDc3ZjdiOThiOTE2ZTI2M2I0NTQiLCJ0aSI6MTY1NzE2ODEzMDA3NH19</stringProp>
                  </elementProp>
                  <elementProp name="X-NewRelic-ID" elementType="Header">
                    <stringProp name="Header.name">X-NewRelic-ID</stringProp>
                    <stringProp name="Header.value">VwUAWFZUDBAFVlZWAAMBVVI=</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="tracestate" elementType="Header">
                    <stringProp name="Header.name">tracestate</stringProp>
                    <stringProp name="Header.value">3379074@nr=0-1-3379074-601334504-72d53fe40ff70c59----1657168130074</stringProp>
                  </elementProp>
                  <elementProp name="traceparent" elementType="Header">
                    <stringProp name="Header.name">traceparent</stringProp>
                    <stringProp name="Header.value">00-a9970950a5ec477f7b98b916e263b454-72d53fe40ff70c59-01</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=4495&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Contract-2,252" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">bel.7;1,5,,2mz,125,21,&apos;initialPageLoad,&apos;http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Contract,1,1,,,,bs,!!&apos;8e0b8ee8-3b49-4a04-9580-aad5ec42539b,&apos;1,tm,ts;2,,xr,46,q,2,&apos;GET,5k,&apos;sbilifeload.crmnext.com:80,&apos;/snload7/app/CRMNextObject/GetPushByDevice,,1n,1,&apos;8,&apos;ad9b9bb12aef939e,&apos;6f4f3cdf0b4da97b4e346bb752db73f2,l5aj492l;2,,yh,m5,6r,17,&apos;POST,5k,5,&apos;/snload7/app/CardView/LoadListCard,sp,470,1,&apos;10,&apos;ed0f1062948c76a4,&apos;1a81b6ef472134f1b4a779cde485ebbb,l5aj493c;2,,yg,ws,r,q,a,5k,5,&apos;/snload7/app/CardView/LoadEdsListCard,x4,1jh,1,&apos;9,&apos;8de1282cec08b90b,&apos;2b72aeeab13f0c2d08784bf36eb87a7d,l5aj493a;2,,yi,1bw,u,o,a,5k,5,b,sp,6du,1,&apos;11,&apos;1093748485eab2c1,&apos;f6a4c29f085dc8333142cedb1d430ad0,l5aj493d;2,,kr,20b,1x,1h,4,5k,5,&apos;/snload7/app/CRMNextCache/CustomNavigation,,cop,,&apos;3,&apos;72d53fe40ff70c59,&apos;a9970950a5ec477f7b98b916e263b454,l5aj48pm;b,ir,!,!-ia,,,,!,3,he,4,z,gp,,7,23,,c</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=4495&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Contract</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">cross-site</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua</stringProp>
                    <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-mobile" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                    <stringProp name="Header.value">?0</stringProp>
                  </elementProp>
                  <elementProp name="sec-ch-ua-platform" elementType="Header">
                    <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                    <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                  </elementProp>
                  <elementProp name="content-type" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${constantTimer}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="BA_10_Logout" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/login/logout-2,253" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/snload7/app/login/logout</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Contract?x=nuj6mmdrx843l2g8673tcd3cdml2u7va4l9sa7nnek7rypzemhdhaus26up4lzy5gjqej7qgf6guu4745jy9z3kwmx&amp;mdi=-1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/snload7/app/login/login-2,254" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="logout" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">logout</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sbilifeload.crmnext.com</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
            <stringProp name="HTTPSampler.path">/snload7/app/login/login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Contract?x=nuj6mmdrx843l2g8673tcd3cdml2u7va4l9sa7nnek7rypzemhdhaus26up4lzy5gjqej7qgf6guu4745jy9z3kwmx&amp;mdi=-1</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="758210415">Trouble logging in</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v4/fullHashes:find-2,256" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="$req" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">$req</stringProp>
                  <stringProp name="Argument.value">Ch4KDGdvb2dsZWNocm9tZRIOMTAzLjAuNTA2MC4xMTQSGwoNCAUQBhgBIgMwMDEwARCk_g0aAhgI8w9wABIbCg0IARAGGAEiAzAwMTABEMbrChoCGAiNaZADEhsKDQgHEAYYASIDMDAxMAEQlLwLGgIYCBUXhbsSGQoNCAEQBhgBIgMwMDEwAxAUGgIYCN91spMSGgoNCAEQCBgBIgMwMDEwBBCOKRoCGAibisxnEhoKDQgPEAYYASIDMDAxMAEQ-XEaAhgICUDAxBIZCg0IChAIGAEiAzAwMTABEAcaAhgId2H3ohIZCg0ICRAGGAEiAzAwMTABECAaAhgIFoyaphIaCg0ICBAGGAEiAzAwMTABEIEQGgIYCIPzRL8SGwoNCA0QBhgBIgMwMDEwARCTwQEaAhgI128LqBIbCg0IAxAGGAEiAzAwMTABEPfIChoCGAiZ03LiEhsKDQgOEAYYASIDMDAxMAEQ68AGGgIYCCWUqk8SGgoNCBAQBhgBIgMwMDEwARDrEhoCGAhsGNmEGiwIAQgDCAUIBggHCAgICQgKCA0IDggPCBAIERABEAgaBgoEuk2f1SABIAMgBA==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$ct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">$ct</stringProp>
                  <stringProp name="Argument.value">application/x-protobuf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">safebrowsing.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v4/fullHashes:find</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="X-HTTP-Method-Override" elementType="Header">
                  <stringProp name="Header.name">X-HTTP-Method-Override</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/v4/fullHashes:find-2,255" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="$req" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">$req</stringProp>
                  <stringProp name="Argument.value">Ch4KDGdvb2dsZWNocm9tZRIOMTAzLjAuNTA2MC4xMTQSGwoNCAUQBhgBIgMwMDEwARCk_g0aAhgI8w9wABIbCg0IARAGGAEiAzAwMTABEMbrChoCGAiNaZADEhsKDQgHEAYYASIDMDAxMAEQlLwLGgIYCBUXhbsSGQoNCAEQBhgBIgMwMDEwAxAUGgIYCN91spMSGgoNCAEQCBgBIgMwMDEwBBCOKRoCGAibisxnEhoKDQgPEAYYASIDMDAxMAEQ-XEaAhgICUDAxBIZCg0IChAIGAEiAzAwMTABEAcaAhgId2H3ohIZCg0ICRAGGAEiAzAwMTABECAaAhgIFoyaphIaCg0ICBAGGAEiAzAwMTABEIEQGgIYCIPzRL8SGwoNCA0QBhgBIgMwMDEwARCTwQEaAhgI128LqBIbCg0IAxAGGAEiAzAwMTABEPfIChoCGAiZ03LiEhsKDQgOEAYYASIDMDAxMAEQ68AGGgIYCCWUqk8SGgoNCBAQBhgBIgMwMDEwARDrEhoCGAhsGNmEGiwIAQgDCAUIBggHCAgICQgKCA0IDggPCBAIERABEAgaBgoEuk2f1SABIAMgBA==</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="$ct" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">$ct</stringProp>
                  <stringProp name="Argument.value">application/x-protobuf</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="key" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">key</stringProp>
                  <stringProp name="Argument.value">AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">safebrowsing.googleapis.com</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v4/fullHashes:find</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="X-HTTP-Method-Override" elementType="Header">
                  <stringProp name="Header.name">X-HTTP-Method-Override</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=9590&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Contract-2,257" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">bel.6;e,&apos;fp,tm,1;6,&apos;cls,0.;e,&apos;fcp,ts,1;6,1,0.;e,&apos;load,11z,1;6,1,0.695282877186471;e,&apos;fi,2hf,6;5,&apos;type,&apos;keydown;5,&apos;net-etype,&apos;4g;6,&apos;net-rtt,100.;6,&apos;net-dlink,1.3;6,&apos;fid,1.;6,1,0.703197027114268;e,&apos;lcp,ts,8;6,&apos;size,3900.;5,&apos;eid,&apos;style-switcher;5,7,8;6,9,100.;6,a,1.3;5,&apos;elUrl,&apos;http://sbilifeload.crmnext.com/SNLOAD7/app/assets_102319_1/img/crmlogo.png;5,&apos;elTag,&apos;IMG;6,1,0.;e,&apos;pageHide,2my,1;6,1,0.703197027114268;e,&apos;unload,7ec,1;6,1,0.703197027114268</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=9590&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Contract</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/jserrors/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=9596&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Contract-2,258" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sm&quot;:[{&quot;params&quot;:{&quot;name&quot;:&quot;Framework/React/Detected&quot;},&quot;stats&quot;:{&quot;c&quot;:1}},{&quot;params&quot;:{&quot;name&quot;:&quot;Framework/Jquery/Detected&quot;},&quot;stats&quot;:{&quot;c&quot;:1}},{&quot;params&quot;:{&quot;name&quot;:&quot;Ajax/Events/Excluded/Agent&quot;},&quot;stats&quot;:{&quot;c&quot;:1}}],&quot;xhr&quot;:[{&quot;params&quot;:{&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/CRMNextObject/GetPushByDevice&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:0},&quot;rxSize&quot;:{&quot;t&quot;:59},&quot;duration&quot;:{&quot;t&quot;:150},&quot;time&quot;:{&quot;t&quot;:1215}}},{&quot;params&quot;:{&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/CardView/LoadListCard&quot;,&quot;method&quot;:&quot;POST&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:2,&quot;txSize&quot;:{&quot;t&quot;:2066,&quot;min&quot;:1033,&quot;max&quot;:1033,&quot;sos&quot;:2134178,&quot;c&quot;:2},&quot;rxSize&quot;:{&quot;t&quot;:13710,&quot;min&quot;:5436,&quot;max&quot;:8274,&quot;sos&quot;:98009172,&quot;c&quot;:2},&quot;duration&quot;:{&quot;t&quot;:2520,&quot;min&quot;:797,&quot;max&quot;:1723,&quot;sos&quot;:3603938,&quot;c&quot;:2},&quot;time&quot;:{&quot;t&quot;:2483,&quot;min&quot;:1241,&quot;max&quot;:1242,&quot;sos&quot;:3082645,&quot;c&quot;:2}}},{&quot;params&quot;:{&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/CardView/LoadEdsListCard&quot;,&quot;method&quot;:&quot;POST&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:1192},&quot;rxSize&quot;:{&quot;t&quot;:1997},&quot;duration&quot;:{&quot;t&quot;:1180},&quot;time&quot;:{&quot;t&quot;:1240}}},{&quot;params&quot;:{&quot;method&quot;:&quot;GET&quot;,&quot;hostname&quot;:&quot;sbilifeload.crmnext.com&quot;,&quot;port&quot;:&quot;80&quot;,&quot;protocol&quot;:&quot;http&quot;,&quot;host&quot;:&quot;sbilifeload.crmnext.com:80&quot;,&quot;pathname&quot;:&quot;/snload7/app/CRMNextCache/CustomNavigation&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;rxSize&quot;:{&quot;t&quot;:16441},&quot;duration&quot;:{&quot;t&quot;:2606},&quot;cbTime&quot;:{&quot;t&quot;:3},&quot;time&quot;:{&quot;t&quot;:747}}},{&quot;params&quot;:{&quot;method&quot;:&quot;POST&quot;,&quot;hostname&quot;:&quot;bam.nr-data.net&quot;,&quot;port&quot;:&quot;443&quot;,&quot;protocol&quot;:&quot;https&quot;,&quot;host&quot;:&quot;bam.nr-data.net:443&quot;,&quot;pathname&quot;:&quot;/events/1/NRJS-2551f7a729197a720f4&quot;,&quot;status&quot;:200},&quot;metrics&quot;:{&quot;count&quot;:1,&quot;txSize&quot;:{&quot;t&quot;:874},&quot;rxSize&quot;:{&quot;t&quot;:24},&quot;duration&quot;:{&quot;t&quot;:738},&quot;cbTime&quot;:{&quot;t&quot;:0},&quot;time&quot;:{&quot;t&quot;:4496}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/jserrors/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GiYzfShRHRV6A1tVWkEmDl4SRgoNWQRDH31QEQBZCg%3D%3D&amp;rst=9596&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/crmnextobject/detail/Contract</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/1/NRJS-2551f7a729197a720f4-2,260" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                  <stringProp name="Argument.value">527472636</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1216.487a282</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="to" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">to</stringProp>
                  <stringProp name="Argument.value">YgRTZEtUCxJRBUAMDltOfGZ6GikOVw9aJg5bFUNfVVkAEx8KWwIIWw%3D%3D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rst" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rst</stringProp>
                  <stringProp name="Argument.value">981</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ck" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ck</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ref" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ref</stringProp>
                  <stringProp name="Argument.value">http://sbilifeload.crmnext.com/snload7/app/login/login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ap" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ap</stringProp>
                  <stringProp name="Argument.value">16</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="be" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">be</stringProp>
                  <stringProp name="Argument.value">752</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fe" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fe</stringProp>
                  <stringProp name="Argument.value">928</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dc</stringProp>
                  <stringProp name="Argument.value">833</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="af" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">af</stringProp>
                  <stringProp name="Argument.value">err,xhr,stn,ins,spa</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="perf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">perf</stringProp>
                  <stringProp name="Argument.value">%7B%22timing%22:%7B%22of%22:1657168138240,%22n%22:0,%22u%22:691,%22r%22:4,%22ue%22:692,%22re%22:202,%22f%22:202,%22dn%22:202,%22dne%22:202,%22c%22:202,%22ce%22:202,%22rq%22:210,%22rp%22:345,%22rpe%22:664,%22dl%22:709,%22di%22:833,%22ds%22:833,%22de%22:833,%22dc%22:927,%22l%22:927,%22le%22:976%7D,%22navigation%22:%7B%22rc%22:1%7D%7D</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fp</stringProp>
                  <stringProp name="Argument.value">822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fcp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">fcp</stringProp>
                  <stringProp name="Argument.value">822</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsonp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jsonp</stringProp>
                  <stringProp name="Argument.value">NREUM.setToken</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/1/NRJS-2551f7a729197a720f4</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">script</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GikOVw9aJg5bFUNfVVkAEx8KWwIIWw%3D%3D&amp;rst=1832&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/login/login-2,262" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">bel.7;1,,,r4,r4,1h,&apos;initialPageLoad,&apos;http://sbilifeload.crmnext.com/snload7/app/login/login,1,1,,,,g,!!&apos;497952d3-7454-4b91-84cf-ff0319d823ce,&apos;1,mu,mu;b,j7,-j3,j4,-dm,,,,,!,8,3r,8v,19,3g,,,2m,,1d</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/events/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GikOVw9aJg5bFUNfVVkAEx8KWwIIWw%3D%3D&amp;rst=1832&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/login/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GikOVw9aJg5bFUNfVVkAEx8KWwIIWw%3D%3D&amp;rst=1814&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/login/login&amp;st=1657168138240-2,261" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;res&quot;:[{&quot;n&quot;:&quot;navigationStart&quot;,&quot;s&quot;:0,&quot;e&quot;:0,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;unloadEventStart&quot;,&quot;s&quot;:691,&quot;e&quot;:691,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;unloadEventEnd&quot;,&quot;s&quot;:692,&quot;e&quot;:692,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;redirectStart&quot;,&quot;s&quot;:4,&quot;e&quot;:4,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;redirectEnd&quot;,&quot;s&quot;:202,&quot;e&quot;:202,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;fetchStart&quot;,&quot;s&quot;:202,&quot;e&quot;:202,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domainLookupStart&quot;,&quot;s&quot;:202,&quot;e&quot;:202,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domainLookupEnd&quot;,&quot;s&quot;:202,&quot;e&quot;:202,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;connectStart&quot;,&quot;s&quot;:202,&quot;e&quot;:202,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;connectEnd&quot;,&quot;s&quot;:202,&quot;e&quot;:202,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;requestStart&quot;,&quot;s&quot;:210,&quot;e&quot;:210,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;responseStart&quot;,&quot;s&quot;:345,&quot;e&quot;:345,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;responseEnd&quot;,&quot;s&quot;:664,&quot;e&quot;:664,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domLoading&quot;,&quot;s&quot;:709,&quot;e&quot;:709,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domInteractive&quot;,&quot;s&quot;:833,&quot;e&quot;:833,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domContentLoadedEventStart&quot;,&quot;s&quot;:833,&quot;e&quot;:833,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domContentLoadedEventEnd&quot;,&quot;s&quot;:833,&quot;e&quot;:833,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;domComplete&quot;,&quot;s&quot;:927,&quot;e&quot;:927,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;loadEventStart&quot;,&quot;s&quot;:927,&quot;e&quot;:927,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;},{&quot;n&quot;:&quot;loadEventEnd&quot;,&quot;s&quot;:976,&quot;e&quot;:976,&quot;o&quot;:&quot;document&quot;,&quot;t&quot;:&quot;timing&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">bam.nr-data.net</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/resources/1/NRJS-2551f7a729197a720f4?a=527472636&amp;v=1216.487a282&amp;to=YgRTZEtUCxJRBUAMDltOfGZ6GikOVw9aJg5bFUNfVVkAEx8KWwIIWw%3D%3D&amp;rst=1814&amp;ck=1&amp;ref=http://sbilifeload.crmnext.com/snload7/app/login/login&amp;st=1657168138240</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com/</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://sbilifeload.crmnext.com</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;.Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;103&quot;, &quot;Chromium&quot;;v=&quot;103&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="false">
        <stringProp name="ProxyControlGui.port">8888</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="838633465">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|woff|woff2|html)</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">0</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">0</intProp>
        <stringProp name="ProxyControlGui.default_encoding"></stringProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name"></stringProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">false</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">SBIL_load_amit_7july_09.55.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
